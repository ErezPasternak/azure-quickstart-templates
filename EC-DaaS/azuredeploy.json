{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",

    "parameters": {

        "dnsLabelPrefix": {
            "type": "string",
	     "metadata": {
                "description": "Unique public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.westus.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "West US",
            "allowedValues": [
                "West US",
                "East US",
                "West Europe",
                "East Asia",
                "Southeast Asia"
            ],
            "metadata": {
                "description": "Location to deploy to"
            }
        },
        "domainName": {
            "type": "string",
            "defaultValue": "DaaS.local",
            "metadata": {
                "description": "The FQDN of the AD domain"
            }
        },
        "adminUsername": {
            "type": "string",
	     "defaultValue": "ericom",
            "metadata": {
                "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'administrator'"
            }
        },
        "adminPassword": {
            "type": "securestring",
	     "defaultValue": "Ericom123$",
            "metadata": {
                "description": "The password for the administrator account of the new VM and the domain"
            }
        },
        "emailAddress": {
           "type": "string",
           "metadata": {
               "description": "The email address to send the test message to."
            }
        },
        "numberOfDesktopHostInstances": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of Desktop instances"
            }
        },
        "numberOfApplicationHostInstances": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of Application instances"
            }
        },
        "DesktopVmSize": {
            "type": "string",
            "defaultValue": "Standard_D2",
            "metadata": {
                "description": "The size of the Desktop VMs"
            }
        },
        "AppsVmSize": {
            "type": "string",
            "defaultValue": "Standard_D2",
            "metadata": {
                "description": "The size of the Application VMs"
            }
        },

        "assetLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/ErezPasternak/azure-quickstart-templates/EricomConnect/EC-DaaS",
            "metadata": {
                "description": "The location of resources such as templates and DSC modules that the script is dependent"
            }
        }
    },

    "variables": {
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'RDS', 'Storage')]",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "imageSKU": "2012-R2-Datacenter",
        "vnetAddressRange": "10.0.0.0/16",
        "subnetAddressRange": "10.0.0.0/24",
        "dnsServerPrivateIp": "10.0.0.8",
        "subnetName": "Subnet",
        "subnet-id": "[concat(resourceId('Microsoft.Network/virtualNetworks','VNET'),'/subnets/',variables('subnetName'))]",
	    "customScriptLocation": "https://raw.githubusercontent.com/ErezPasternak/azure-quickstart-templates/EricomConnect/EC-DaaS/",
        "publicIpRef": "publicIp",
	    "ecGridname" : "ecgrid",
	    "sqlserver" : "localhost",
        "sqldatabase" : "ERICOMCONNECTDB",
	    "sqluser"  : "sa",
	    "sqlpassword" : "P@55w0rd",
        "apiVersion": "2015-06-15"
    },
 
    "resources": [

        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIpRef')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('StorageAccountName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "availabilityset",
            "location": "[resourceGroup().location]"
        },

        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "vnet",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddressRange')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetAddressRange')]"
                        }
                    }
                ]
            }
        },

        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/loadBalancers",
            "name": "loadBalancer",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIpRef'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LBFE",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpRef'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "LBBAP"
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "https",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/frontendIPConfigurations/LBFE')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "gateway",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/frontendIPConfigurations/LBFE')]"
                            },
                            "protocol": "udp",
                            "frontendPort": 3391,
                            "backendPort": 3391,
                            "enableFloatingIP": false
                        }
                    }
                ]
            }
        },

        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "dc-nif",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "Microsoft.Network/virtualNetworks/vnet"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('dnsServerPrivateIp')]",
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            }
                        }
                    }
                ]
            }
        },

        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "dc-vm",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts',variables('StorageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces','dc-nif')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2"
		 },
                "osProfile": {
                    "computerName": "dc",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('StorageAccountName'),'.blob.core.windows.net/vhds/dc-vm-os-disk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "name": "dc-vm-data-disk",
                            "vhd": {
                                "Uri": "[concat('http://',variables('StorageAccountName'),'.blob.core.windows.net/vhds/dc-vm-data-disk.vhd')]"
                            },
                            "caching": "None",
                            "createOption": "Empty",
                            "diskSizeGB": "1000",
                            "lun": 0
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces','dc-nif')]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "dc-vm/createadforest",
                    "apiVersion": "[variables('apiVersion')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', 'dc-vm')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.8",
                        "settings": {
                            "ModulesUrl": "[concat(parameters('assetLocation'),'/CreateADPDC.zip')]",
                            "ConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
                            "Properties": {
                                "DomainName": "[parameters('domainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('adminUsername')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('adminPassword')]"
                            }
                        }
                    }
                }
            ]
        },
 
        {
            "apiVersion": "2015-01-01",
            "type": "Microsoft.Resources/deployments",
            "name": "updatevnetdns",
            "dependsOn": [
                "Microsoft.Compute/virtualMachines/dc-vm/extensions/createadforest"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('customScriptLocation'),'vnet-with-dns-server.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "VNET"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[variables('vnetAddressRange')]"
                    },
                    "subnetName": {
                        "value": "[variables('subnetName')]"
                    },
                    "subnetRange": {
                        "value": "[variables('subnetAddressRange')]"
                    },
                    "DNSServerAddress": {
                        "value": [ "[variables('dnsServerPrivateIp')]" ]
                    }
                }
            }
        },

        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "gw-nif",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "Microsoft.Network/loadBalancers/loadBalancer",
                "Microsoft.Resources/deployments/updatevnetdns"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/backendAddressPools/LBBAP')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/inboundNatRules/https')]"
                                },
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/inboundNatRules/gateway')]"
                                }
                            ]
                        }
                    }
                ]
            }
        },

        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "cb-nif",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "Microsoft.Resources/deployments/updatevnetdns"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            }
                        }
                    }
                ]
            }
        },

        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat('rdshD-', copyindex(), '-nif')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "rdshD-nif-loop",
                "count": "[parameters('numberOfDesktopHostInstances')]"
            },
            "dependsOn": [
                "Microsoft.Resources/deployments/updatevnetdns"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat('rdshA-', copyindex(), '-nif')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "rdshA-nif-loop",
                "count": "[parameters('numberOfApplicationHostInstances')]"
            },
            "dependsOn": [
                "Microsoft.Resources/deployments/updatevnetdns"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            }
                        }
                    }
                ]
            }
        },

        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "gw-vm",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('StorageAccountName'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', 'availabilityset')]",
                "Microsoft.Network/networkInterfaces/gw-nif",
                "Microsoft.Compute/virtualMachines/cb-vm/extensions/EricomConnectServerSetup"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', 'availabilityset')]"
                },
                "osProfile": {
                    "computerName": "gateway",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('StorageAccountName'),'.blob.core.windows.net/vhds/gw-vm-osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces','gw-nif')]"
                        }
                    ]
                }          
            },
             "resources": [		        
                 {		
                     "apiVersion": "2015-05-01-preview",		
                     "type": "Microsoft.Compute/virtualMachines/extensions",		
                     "name": "gw-vm/GatewaySetup",		
                     "location": "[resourceGroup().location]",		
                     "dependsOn": [		
                         "[resourceId('Microsoft.Compute/virtualMachines', 'gw-vm')]"		
                     ],		
                     "properties": {		
                         "publisher": "Microsoft.Powershell",		
                         "type": "DSC",		
                         "typeHandlerVersion": "2.8",		
                         "settings": {		
                             "ModulesUrl": "[concat(parameters('assetLocation'),'/Configuration.zip')]",		
                             "ConfigurationFunction": "Configuration.ps1\\GatewaySetup",		
                             "Properties": {		
                                 "DomainName": "[parameters('domainName')]",		
                                 "AdminCreds": {		
                                     "UserName": "[parameters('adminUsername')]",		
                                     "Password": "PrivateSettingsRef:AdminPassword"						    		
                                 },		
   				      "gridName": "[variables('ecGridname')]",		
 				      "LUS": "broker.DaaS.local",		
 				      "tenant": "root"		
                             }		
                         },		
                         "protectedSettings": {		
                             "Items": {		
                                 "AdminPassword": "[parameters('adminPassword')]"		
                             }		
                         }		
                     }		
                 }		
             ]
            
        },

        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat('rdshD-', copyindex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "rdshD-vm-loop",
                "count": "[parameters('numberOfDesktopHostInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('StorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', 'rdshD-', copyindex(), '-nif')]"

            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('DesktopVmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat('rdshD-', copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('StorageAccountName'),'.blob.core.windows.net/vhds/rdshD-',copyindex(),'-osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('rdshD-', copyindex(), '-nif'))]"
                        }
                    ]
                }
            },
             "resources": [
                        {
                    "apiVersion": "[variables('apiVersion')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat('rdshD-', copyindex(),'/DesktopHost')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat('rdshD-', copyindex()))]",
                        "Microsoft.Compute/virtualMachines/cb-vm/extensions/EricomConnectServerSetup"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.8",
                        "settings": {
                            "ModulesUrl": "[concat(parameters('assetLocation'),'/Configuration.zip')]",
                            "ConfigurationFunction": "Configuration.ps1\\DesktopHost",
                            "Properties": {
                                "DomainName": "[parameters('domainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('adminUsername')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                },
 				            "gridName": "[variables('ecGridname')]",
				            "LUS": "broker.DaaS.local",
				            "tenant": "root"

                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('adminPassword')]"
                            }
                        }
                    }
                } 
             ]
        },
         {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat('rdshA-', copyindex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "rdshA-vm-loop",
                "count": "[parameters('numberOfApplicationHostInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('StorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', 'rdshA-', copyindex(), '-nif')]"

            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('AppsVmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat('rdshA-', copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('StorageAccountName'),'.blob.core.windows.net/vhds/rdshA-',copyindex(),'-osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('rdshA-', copyindex(), '-nif'))]"
                        }
                    ]
                }
            },
             "resources": [
               {
                    "apiVersion": "[variables('apiVersion')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat('rdshA-', copyindex(),'/ApplicationHost')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat('rdshA-', copyindex()))]",
                        "Microsoft.Compute/virtualMachines/cb-vm/extensions/EricomConnectServerSetup"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.8",
                        "settings": {
                            "ModulesUrl": "[concat(parameters('assetLocation'),'/Configuration.zip')]",
                            "ConfigurationFunction": "Configuration.ps1\\ApplicationHost",
                            "Properties": {
                                "DomainName": "[parameters('domainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('adminUsername')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                },
 				        "gridName": "[variables('ecGridname')]",
				        "LUS": "broker.DaaS.local",
				        "tenant": "root"

                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('adminPassword')]"
                            }
                        }
                    }
                }   
             ]
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "cb-vm",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('StorageAccountName'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', 'availabilityset')]",
                "Microsoft.Network/networkInterfaces/cb-nif"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D3"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', 'availabilityset')]"
                },
                "osProfile": {
                    "computerName": "broker",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('StorageAccountName'),'.blob.core.windows.net/vhds/cb-vm-osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces','cb-nif')]"
                        }
                    ]
                }
            },
            "resources": [
                 {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "cb-vm/EricomConnectServerSetup",
                    "apiVersion": "[variables('apiVersion')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', 'cb-vm')]"
                    ],
                    "properties": {
                                "publisher": "Microsoft.Powershell",
                                "type": "DSC",
                                "typeHandlerVersion": "2.8",
                    "settings" : { 
                        "ModulesUrl" : "[concat(parameters('assetLocation'),'/Configuration.zip')]",
                        "ConfigurationFunction" : "Configuration.ps1\\EricomConnectServerSetup",
                        "Properties" : { 
                            "domainName" : "[parameters('domainName')]",
                            "adminCreds" : { 
                                "UserName" : "[parameters('adminUsername')]",
                                "Password" : "PrivateSettingsRef:AdminPassword"
                            },
                            "connectionBroker" : "[concat('broker.',parameters('domainName'))]",
                            "webAccessServer" : "[concat('gateway.',parameters('domainName'))]",
                            "externalfqdn" : "[reference(variables('publicIpRef')).dnsSettings.fqdn]",
                            "gridName" : "[variables('ecGridname')]",
                            "sqlserver" : "[variables('sqlserver')]",
                            "sqldatabase" : "[variables('sqldatabase')]",
                            "sqlCreds" : { 
                                "UserName" : "[variables('sqluser')]",
                                "Password" : "PrivateSettingsRef:SqlPassword"
                            },
                            "emailAddress" : "[parameters('emailAddress')]"
                        }
                    },
                    "protectedSettings" : { 
                        "Items" : { 
                            "AdminPassword" : "[parameters('adminPassword')]",
                            "SqlPassword" : "[variables('sqlpassword')]"
                        }
                    }                
                     
                  }
              }
            ]
        }
        
    ]
}
