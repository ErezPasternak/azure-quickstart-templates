var AdalHelper = function(a, b) {
    "use strict";
    var c = this;
    return c.logout = function() {
        b.collectAndSendAllEvents(),
        localStorage.clear(),
        setTimeout(function() {
            a.logout()
        }, 500)
    }
    ,
    c
}
  , FeedRefreshHelperEvent = {
    InvitationRefreshComplete: 0,
    InvitationRefreshError: 1,
    FeedRefreshStart: 2,
    FeedRefreshComplete: 3,
    FeedRefreshError: 4
}
  , FeedRefreshState = {
    Initialized: 0,
    Refreshing: 1,
    Completed: 2
}
  , FeedRefreshHelper = function(a, b, c, d) {
    "use strict";
    var e = {
        events: new EventProvider,
        state: FeedRefreshState.Initialized
    }
      , f = function(a) {
        e.events.fireEventCallback(FeedRefreshHelperEvent.FeedRefreshComplete, a),
        e.state = FeedRefreshState.Completed
    }
      , g = function(a) {
        e.events.fireEventCallback(FeedRefreshHelperEvent.FeedRefreshError, a),
        e.state = FeedRefreshState.Completed
    }
      , h = function() {
        var a = c.acquireToken()
          , d = a.getToken();
        e.events.fireEventCallback(FeedRefreshHelperEvent.InvitationRefreshComplete),
        d && b.refreshAllFeeds(d),
        a.complete()
    }
      , i = function() {
        e.events.fireEventCallback(FeedRefreshHelperEvent.InvitationRefreshError),
        e.state = FeedRefreshState.Completed
    }
      , j = function() {
        b.events.subscribe(RemoteResourceFeedProviderEvent.RemoteResourceFeedRefreshComplete, f),
        b.events.subscribe(RemoteResourceFeedProviderEvent.RemoteResourceFeedRefreshError, g),
        a.events.subscribe(RemoteResourceInvitationProviderEvent.RemoteResourceInvitationRefreshComplete, h),
        a.events.subscribe(RemoteResourceInvitationProviderEvent.RemoteResourceInvitationRefreshFailed, i)
    }
    ;
    return j(),
    e.refresh = function() {
        var b, f;
        e.state !== FeedRefreshState.Refreshing && (e.events.fireEventCallback(FeedRefreshHelperEvent.FeedRefreshStart),
        b = c.acquireToken(),
        f = b.getToken(),
        e.state = FeedRefreshState.Refreshing,
        f ? a.refresh(f) : (d.log("[FeedRefreshHelper] ADAL token not found, refreshing the page to get the token"),
        e.events.fireEventCallback(FeedRefreshHelperEvent.FeedRefreshError, 0),
        e.state = FeedRefreshState.Completed),
        b.complete())
    }
    ,
    e.refreshAllFeeds = function() {
        var a = c.acquireToken()
          , d = a.getToken();
        d && b.refreshAllFeeds(d),
        a.complete()
    }
    ,
    e.unsubscribe = function() {
        b.events.unsubscribe(RemoteResourceFeedProviderEvent.RemoteResourceFeedRefreshComplete, f),
        b.events.unsubscribe(RemoteResourceFeedProviderEvent.RemoteResourceFeedRefreshError, g),
        a.events.unsubscribe(RemoteResourceInvitationProviderEvent.RemoteResourceInvitationRefreshComplete, h),
        a.events.unsubscribe(RemoteResourceInvitationProviderEvent.RemoteResourceInvitationRefreshFailed, i)
    }
    ,
    e.updateConsent = function() {
        var b = c.acquireToken()
          , d = b.getToken();
        d && a.updateConsent(d),
        b.complete()
    }
    ,
    e
}
  , HTTPHelper = function() {
    "use strict";
    var a, b = this, c = new XMLHttpRequest, d = function(b) {
        for (a in b)
            b.hasOwnProperty(a) && c.setRequestHeader(a, b[a])
    }
    ;
    return c.onreadystatechange = function() {
        4 === c.readyState && b.onComplete && b.onComplete(c.responseText, c.status)
    }
    ,
    c.onerror = function() {
        b.onError && b.onError("XMLHttpRequest error")
    }
    ,
    b.onComplete = null ,
    b.onError = null ,
    b.getResponseHeader = function(a) {
        return c.getResponseHeader(a)
    }
    ,
    b.get = function(a, b, e) {
        c.open("GET", a, !0),
        d(b),
        c.withCredentials = e,
        c.send()
    }
    ,
    b.post = function(a, b, e) {
        c.open("POST", a, !0),
        d(b),
        c.send(e)
    }
    ,
    b
}
  , HttpStatusCodes = {
    Success: 200,
    Found: 302,
    Unauthorized: 401
}
  , KeyCodes = {
    F1: 112,
    F2: 113,
    F3: 114,
    F4: 115,
    F5: 116,
    F6: 117,
    F7: 118,
    F8: 119,
    F9: 120,
    F10: 121,
    F11: 122,
    F12: 123,
    Return: 13,
    Esc: 27,
    Backspace: 8,
    Tab: 9,
    Left: 37,
    Up: 38,
    Right: 39,
    Down: 40,
    CapsLock: 20,
    Delete: 46,
    End: 35,
    Home: 36,
    Insert: 45,
    NumLock: 144,
    PageUp: 33,
    PageDown: 34,
    Shift: 16,
    Windows: 91,
    RWindows: 93,
    Ctrl: 17,
    Alt: 18,
    Pause: 19,
    ScrollLock: 145,
    PrintScreen: 44
}
  , LogLevel = {
    All: 0,
    Debug: 1,
    Info: 2,
    Warn: 3,
    Error: 4
}
  , Logger = function() {
    "use strict";
    var a = {}
      , b = LogLevel.All
      , c = function(a) {
        return 1 === a.length ? a[0] : Array.prototype.slice.call(arguments).join(" ")
    }
    ;
    return a.debug = function() {
        var a;
        b !== LogLevel.All && b !== LogLevel.Debug || (a = c(arguments),
        console.debug(a))
    }
    ,
    a.log = function() {
        var a;
        b !== LogLevel.All && b !== LogLevel.Debug && b !== LogLevel.Info || (a = c(arguments),
        console.log(a))
    }
    ,
    a.warn = function() {
        var a;
        b !== LogLevel.All && b !== LogLevel.Debug && b !== LogLevel.Info && b !== LogLevel.Warn || (a = c(arguments),
        console.warn(a))
    }
    ,
    a.error = function() {
        var a;
        b !== LogLevel.All && b !== LogLevel.Debug && b !== LogLevel.Info && b !== LogLevel.Warn && b !== LogLevel.Error || (a = c(arguments),
        console.error(a),
        console.error(this.stackTrace()))
    }
    ,
    a.stackTrace = function() {
        var a;
        try {
            throw new Error("")
        } catch (b) {
            a = b.stack || ""
        }
        return a = a.split("\n").map(function(a) {
            return a.trim()
        }),
        a.splice("Error" === a[0] ? 2 : 1)
    }
    ,
    a.setLogLevel = function(a) {
        b = a
    }
    ,
    a
}
  , ObjectHelper = function() {
    "use strict";
    this.cloneObject = function(a) {
        var b, c = Object.create(null );
        if (null  === a)
            return null ;
        for (b in a)
            "undefined" != typeof a[b] && (c[b] = a[b]);
        return c
    }
    ,
    this.createGuid = function() {
        for (var a = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx", b = "0123456789abcdef", c = 0, d = "", e = 0; 36 > e; e++)
            "-" !== a[e] && "4" !== a[e] && (c = 16 * Math.random() | 0),
            "x" === a[e] ? d += b[c] : "y" === a[e] ? (c &= 3,
            c |= 8,
            d += b[c]) : d += a[e];
        return d
    }
}
  , Strings = function(a) {
    "use strict";
    var b = {}
      , c = {
        FEED_DOWNLOAD_FAILED: "Feed download failed. Ask your admin or tech support for help.",
        ERROR_DIALOG_TITLE: "Session disconnected",
        FEED_DOWNLOAD_ERROR_DIALOG_TITLE: "An error has occurred",
        TOAST_MESSAGE_PASTE: "Text is ready to paste.",
        TOAST_AUDIO_UNSUPPORTED: "Audio not supported on Internet Explorer 11",
        TOAST_SUPPORTED_BROWSER: "If you need audio, use RemoteApp on Chrome, Firefox or Edge",
        SESSION_DISCONNECT_CODE_ACCOUNT_DISABLED: "We couldn't connect to the remote PC because your account has been disabled. Ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_ACCOUNT_EXPIRED: "We couldn't connect to the remote PC because the user account has expired. Ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_ACCOUNT_LOCKED_OUT: "We couldn't connect to the remote PC because the user account has been locked due to too many sign in or password change attempts. Wait a little while, and then try connecting again, or ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_ACCOUNT_RESTRICTED: "We couldn't connect to the remote PC because a user account restriction is preventing you from signing in. Ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_AUTO_RECONNECT_FAILED: "We couldn't automatically reconnect to the remote PC. Try connecting again.",
        SESSION_DISCONNECT_CODE_CANT_UPGRADE_LICENSE: "Your session ended because the license for your device couldn't be upgraded or renewed. Ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_CERT_EXPIRED: "Your session ended because the server authentication certificate received from the remote PC has expired or is invalid. Ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_CERT_MISMATCH: "Your session ended because an unexpected server authentication certificate was received from the remote PC. Ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_CONNECTION_BROKEN: "The connection to the remote PC was lost. This might be because of a network connection problem. If this keeps happening, ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_CONNECTION_TIMEOUT: "We couldn't connect to the remote PC because the session couldn't be established in time. If this keeps happening, ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_DECOMPRESSION_FAILED: "Your session ended because of an error while decompressing data from the remote PC. Try connecting again.",
        SESSION_DISCONNECT_CODE_ENCRYPTION_FAILED: "Your session ended because of a data encryption error. If this keeps happening, ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_GENERIC_BY_SERVER: "The remote PC ended your session. If this keeps happening, ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_GENERIC_LICENSE_ERROR: "We couldn't connect to the remote PC because of a licensing error. If this keeps happening, ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_GENERIC_NETWORK_ERROR: "We couldn't connect to the remote PC. This might be because of a network problem. If this keeps happening, ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_GENERIC_PROTOCOL_ERROR: "Your session ended because of a protocol error. If this keeps happening, ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_GENERIC_SECURITY_ERROR: "We couldn't connect to the remote PC because of a security error. If this keeps happening, ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_IDLE_TIMEOUT: "Your session timed out due to inactivity. Try connecting again.",
        SESSION_DISCONNECT_CODE_INIT_FIPS_FAILED: "We couldn't connect to the remote PC because your device doesn't support the Remote Desktop FIPS encryption level. Ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_INVALID_LICENSE: "We couldn't connect to the remote PC because the license for this device isn't valid. Ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_INVALID_LOGON_HOURS: "Your session ended because the admin has restricted when you may sign in. Try connecting again later. If this keeps happening, ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_INVALID_WORK_STATION: "We couldn't connect to the remote PC because your admin has limited the devices you can use to sign in. Ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_KERBEROS_USER_2_USER_REQUIRED: "We couldn't connect to the remote PC because the Kerberos sub-protocol User2User is required. Ask you admin or tech support for help.",
        SESSION_DISCONNECT_CODE_LOGON_TIMEOUT: "Your session ended because you exceeded the time limit set for a session. This limit is set by the admin or by network policies. Try connecting again.",
        SESSION_DISCONNECT_CODE_LOGON_TYPE_NOT_GRANTED: "We couldn't connect to the remote PC because the admin has restricted the type of logon that you may use. Ask you admin or tech support for help.",
        SESSION_DISCONNECT_CODE_LOOPBACK_UNSUPPORTED: "We couldn't connect to the remote PC because your device and the remote PC are the same.",
        SESSION_DISCONNECT_CODE_NO_LICENSE_AVAILABLE: "We couldn't connect to the remote PC because there were no licenses available for this PC. Ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_NO_LICENSE_SERVER: "We couldn't connect to the remote PC because no license servers were available to provide a license. Ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_NO_REMOTE_CONNECTION_LICENSE: "Your session ended because the remote PC isn't licensed to accept remote connections. Ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_NO_SUCH_USER: "We couldn't connect to the remote PC because the user name doesn't exist. Make sure the user name is correct, and then try connecting again. If this keeps happening, ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_PASSWORD_EXPIRED: "We couldn't connect to the remote PC because the password associated with the user account has expired. Change your password, or ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_PASSWORD_MUST_CHANGE: "We couldn't connect to the remote PC because you must change your password before signing in. Change your password, or ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_REMOTING_DISABLED: "We couldn't connect to the remote PC. Make sure the PC is turned on and connected to the network, and that remote access is enabled.",
        SESSION_DISCONNECT_CODE_REPLACED_BY_OTHER_CONNECTION: "Someone else connected to the remote PC. Try connecting again later.",
        SESSION_DISCONNECT_CODE_SERVER_DENIED_CONNECTION: "We couldn't connect to the remote PC. Make sure the PC is turned on and connected to the network, and that remote access is enabled. If this keeps happening, ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_SERVER_INSUFFICIENT_PRIVILEGES: "We couldn't connect to the remote PC. You might not have permission to sign in remotely. Ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_SERVER_NAME_LOOPUP_FAILED: "We couldn't connect to the remote PC because the PC can't be found. Please provide the fully-qualified name or the IP address of the remote PC, and then try again.",
        SESSION_DISCONNECT_CODE_SERVER_OUT_OF_MEMORY: "Your session ended because the remote PC was low on memory.",
        SESSION_DISCONNECT_CODE_SERVER_TOOL: "Your admin might have ended your session. Try connecting again. If that doesn't work, ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_SSL_HANDSHAKE_FAILED: "We couldn't connect to the remote PC. This might be due to an expired password. If this keeps happening, ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_TIME_SKEW: "We couldn't connect to the remote PC because there's a date or time difference between your device and the remote PC. Make sure your clock is set to the correct time, and then try connecting again. If this keeps happening, ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_UNKNOWN_ERROR: "Your session ended because of an error. If this keeps happening, ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_USER_INITIATED: "Your session was disconnected.",
        SESSION_DISCONNECT_CODE_VERSION_MISMATCH: "Your session ended because the local and server versions of the Remote Desktop protocol don't match. Update the Remote Desktop app, and then try connecting again.",
        SESSION_DISCONNECT_CODE_GATEWAY_PROTOCOL_ERROR: "We couldn't connect to the gateway because of an error. If this keeps happening, ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_GATEWAY_TIMEOUT: "We couldn't connect to the remote PC because the session couldn't be established in time. If this keeps happening, ask your admin or tech support for help.",
        SESSION_DISCONNECT_CODE_HYBRID_REQUIRED: "We couldn't connect to the remote PC because it requires Network Level Authentication, which your device doesn't support. Ask your admin or tech support for help.",
        CONNECTION_INITIALIZED: "Connection Initialized",
        CONNECTION_OPENING_REMOTE_PORT: "Opening remote port",
        CONNECTION_ESTABLISHING_SECURE_CONNECTION: "Establishing secure connection",
        CONNECTION_CONFIGURING_REMOTE_CONNECTION: "Configuring remote connection",
        CONNECTION_DETECTING_NETWORK_QUALITY: "Detecting network quality",
        CONNECTION_SESSION_BROKER_FINDING_DESTINATION: "Session broker finding session",
        CONNECTION_SESSION_BROKER_LOADING_DESTINATION: "Session broker loading destination",
        CONNECTION_SESSION_BROKER_BRINGING_SESSION_ONLINE: "Session broker bringing session online",
        CONNECTION_SESSION_BROKER_REDIRECTING_TO_DESTINATION: "Session broker redirecting to destination",
        CONNECTION_VIRTUAL_MACHINE_LOADING: "Virtual machine loading",
        CONNECTION_VIRTUAL_MACHINE_WAKING: "Virtual machine waking",
        CONNECTION_VIRTUAL_MACHINE_STARTING: "Virtual machine starting",
        CONNECTION_VIRTUAL_MACHINE_RETRYING_SESSION_MONITORING: "Virtual machine retrying session monitoring",
        CONNECTION_VIRTUAL_MACHINE_STARTING_SESSION_MONITORING: "Virtual machine starting session monitoring",
        QOE_OPTION1_AUDIO: "Poor audio quality",
        QOE_OPTION2_TOUCHANDMOUSE: "Touch and mouse problems",
        QOE_OPTION3_DELAY: "Poor app responsiveness",
        QOE_OPTION4_SCREENRES: "Poor screen resolution",
        QOE_OPTION5_OTHERS: "None of the above"
    }
      , d = {
        enUS: c
    };
    return b.string = d[a],
    b
}("enUS")
  , AppSettingsDevelop = function() {
    "use strict";
    var a = {};
    return a.feedDiscoveryUrl = "https://clouddvm64-iworkerui-westus.cloudapp.net/Api/FeedDiscovery/WebFeedDiscovery.aspx",
    a.clientTelemetryHost = "https://clouddvm64-telemetry-westus.cloudapp.net/webupload?mohoroId=00000000-0000-0000-0000-000000000000&tmtType=1",
    a.araTelemetryHost = "https://clouddvm64-telemetry-westus.cloudapp.net/webupload?mohoroId=00000000-0000-0000-0000-000000000000",
    a.logLevel = LogLevel.All,
    a.trackerPostInterval = 2e4,
    a.isInProductionMode = !0,
    a.showQoeProbability = .1,
    a.adalSettings = function() {
        return {
            redirectUri: "https://" + document.domain + ":44320",
            postLogoutUri: "https://" + document.domain + ":44320",
            instance: "https://login.windows-ppe.net/common/oauth2",
            clientId: "885667c0-16a9-44bc-b907-01b4ca34c56d",
            resource: "https://remoteapp.windowsazure.com"
        }
    }(),
    a.featureSettings = function() {
        return {
            enableAudio: !0,
            enableClipboard: !0,
            enableDynamicResolution: !0
        }
    }(),
    a
}
  , AppSettingsTest = function() {
    "use strict";
    var a = new AppSettingsDevelop;
    return a.feedDiscoveryUrl = "https://" + document.domain + "/Api/FeedDiscovery/WebFeedDiscovery.aspx",
    a.isInProductionMode = !0,
    a.showQoeProbability = .1,
    a.adalSettings = function() {
        return {
            redirectUri: "https://" + document.domain + "/web/",
            postLogoutUri: "https://" + document.domain + "/web/",
            instance: "https://login.windows-ppe.net/common/oauth2",
            clientId: "885667c0-16a9-44bc-b907-01b4ca34c56d",
            resource: "https://remoteapp.windowsazure.com"
        }
    }(),
    a
}
  , AppSettingsPreLive = function() {
    "use strict";
    var a = new AppSettingsTest
      , b = document.domain;
    if (b.indexOf("www") > -1) {
        var c = b.indexOf("www");
        b = b.substring(c + 4)
    }
    return b.endsWith("/") && (b = b.substring(0, b.length - 1)),
    a.feedDiscoveryUrl = "https://" + document.domain + "/Api/FeedDiscovery/WebFeedDiscovery.aspx",
    a.clientTelemetryHost = "https://telemetry." + b + "/webupload?mohoroId=00000000-0000-0000-0000-000000000000&tmtType=1",
    a.araTelemetryHost = "https://telemetry." + b + "/webupload?mohoroId=00000000-0000-0000-0000-000000000000",
    a.isInProductionMode = !0,
    a.showQoeProbability = .1,
    a.adalSettings.instance = "https://login.windows.net/common/oauth2",
    a
}
  , AppSettingsLive = function() {
    "use strict";
    var a = new AppSettingsTest
      , b = document.domain;
    if (b.indexOf("www") > -1) {
        var c = b.indexOf("www");
        b = b.substring(c + 4)
    }
    return b.endsWith("/") && (b = b.substring(0, b.length - 1)),
    a.feedDiscoveryUrl = "https://" + document.domain + "/Api/FeedDiscovery/WebFeedDiscovery.aspx",
    a.clientTelemetryHost = "https://telemetry.remoteapp.windowsazure.com/webUpload?mohoroId=00000000-0000-0000-0000-000000000000&tmtType=1",
    a.araTelemetryHost = "https://telemetry.remoteapp.windowsazure.com/webUpload?mohoroId=00000000-0000-0000-0000-000000000000",
    a.isInProductionMode = !0,
    a.logLevel = LogLevel.Error,
    a.showQoeProbability = .1,
    a.adalSettings.instance = "https://login.windows.net/common/oauth2",
    a.featureSettings = function() {
        return {
            enableAudio: !0,
            enableClipboard: !1,
            enableDynamicResolution: !0
        }
    }(),
    a
}
  , AudioPlaybackType = {
    PlayOnDevice: 0,
    PlayOnRemotePC: 1,
    NoSound: 2
}
  , BookmarkType = {
    Desktop: 0,
    RemoteResource: 1
}
  , Bookmark = function() {
    "use strict";
    this.id = null ,
    this.hostName = null ,
    this.port = null ,
    this.friendlyName = null ,
    this.audioPlaybackType = AudioPlaybackType.PlayOnDevice,
    this.swapMouseButtons = !1,
    this.adminMode = !1,
    this.bookmarkType = BookmarkType.Desktop,
    this.thumbnail = null ,
    this.rdpFileString = "",
    this.tenantId = "",
    this.label = function() {
        return this.friendlyName || this.hostName
    }
    ,
    this.validate = function() {
        return !0
    }
}
  , BookmarkFolder = function() {
    "use strict";
    this.id = (new ObjectHelper).createGuid(),
    this.title = null 
}
  , ConnectionProperties = function(a, b) {
    "use strict";
    this.hostName = null ,
    this.port = 3389,
    this.gatewayHostName = null ,
    this.gatewayPort = 3389,
    this.remoteApplicationMode = !1,
    this.remoteApplicationProgram = "",
    this.remoteApplicationCmdLine = "",
    this.connectionSettings = null ,
    this.tenantId = null ,
    this.properties = null ,
    this.applyProperties = function(a) {
        if (a) {
            var b = Module.RdpConnectionSettings.CreateFromString(a);
            b && (this.hostName = b.HostName,
            this.port = b.Port,
            this.gatewayHostName = b.GatewayHostName,
            this.gatewayPort = b.GatewayPort,
            this.remoteApplicationProgram = b.RemoteAppProgram,
            this.remoteApplicationMode = b.RemoteAppMode,
            this.remoteApplicationCmdLine = b.RemoteAppCmdLine,
            this.EventLogUploadAddress = b.EventLogUploadAddress,
            this.properties = b),
            this.connectionSettings = Module.RdpConnectionSettings.Create(this.hostName || "", this.port || 3389, this.gatewayHostName || "", this.gatewayPort || 3389),
            this.connectionSettings && (this.connectionSettings.LBInfo = this.properties.LBInfo,
            this.connectionSettings.RemoteAppProgram = this.remoteApplicationProgram,
            this.connectionSettings.EventLogUploadAddress = this.EventLogUploadAddress)
        }
    }
    ,
    this.isEqual = function(a) {
        return this.hostName === a.hostName && this.remoteApplicationMode === a.remoteApplicationMode && this.properties.LBInfo === a.properties.LBInfo && this.properties.GatewayUsageMethod === a.properties.GatewayUsageMethod && this.properties.GatewayProfileUsageMethod === a.properties.GatewayProfileUsageMethod && this.properties.GatewayCredentialsSource === a.properties.GatewayCredentialsSource && this.properties.GatewayHostName === a.properties.GatewayHostName
    }
    ;
    var c = this
      , d = function() {
        c.hostName = a && a.hostName || null ,
        c.port = a && a.port || null ,
        c.gatewayHostName = b && b.hostName || null ,
        c.gatewayPort = b && b.port || null ,
        c.tenantId = a && a.tenantId || null ,
        c.applyProperties(a && a.rdpFileString || null )
    }
    ;
    d()
}
  , Credential = function() {
    "use strict";
    this.id = null ,
    this.userName = null ,
    this.password = null ,
    this.label = function() {
        return this.userName
    }
    ,
    this.validate = function() {
        return !0
    }
}
  , CredentialRequest = function(a) {
    "use strict";
    this.credentialHint = function() {
        var b = ""
          , c = "";
        return b = a.UserNameHint,
        c = a.DomainHint,
        null  !== b && "undefined" != typeof b || (b = ""),
        null  !== c && "undefined" != typeof c || (c = ""),
        c + "\\" + b
    }
    ,
    this.complete = function(b) {
        var c = b.userName
          , d = ""
          , e = b.password || ""
          , f = -1;
        f = b.userName.indexOf("\\"),
        f > -1 && (d = b.userName.substring(0, f),
        c = b.userName.substring(f + 1));
        try {
            a.complete(c, d, e),
            a["delete"](),
            a = null 
        } catch (g) {}
    }
    ,
    this.completeWithToken = function(b) {
        try {
            a.complete(b),
            a["delete"](),
            a = null 
        } catch (c) {}
    }
    ,
    this.isTokenRequired = function() {
        return a.getAuthType() === Module.IAuthCompletion_AuthType.ClaimsToken
    }(),
    this.cancel = function() {
        try {
            a.cancel(),
            a["delete"](),
            a = null 
        } catch (b) {}
    }
}
  , EventProvider = function() {
    "use strict";
    var a = {}
      , b = [];
    return a.filter = function(a) {
        return b.filter(function(b) {
            return b.event === a
        })
    }
    ,
    a.fireEventCallback = function(b) {
        var c, d = a.filter(b), e = Array.prototype.splice.call(arguments, 1);
        if (d.length > 0)
            for (c = 0; c < d.length; c++)
                e = e.concat(d[c].arg),
                d[c].callback.apply(this, e)
    }
    ,
    a.subscribe = function(a, c) {
        var d, e, f = [];
        for (d in b)
            if (b.hasOwnProperty(d) && b[d].event === a && b[d].callback === c)
                return;
        for (e = 2; e < arguments.length; e++)
            f.push(arguments[e]);
        b.push({
            event: a,
            callback: c,
            arg: f
        })
    }
    ,
    a.unsubscribe = function(a, c) {
        var d;
        for (d = 0; d < b.length; d++)
            if (b[d].event === a && b[d].callback === c) {
                b.splice(d, 1);
                break
            }
    }
    ,
    a
}
  , Gateway = function() {
    "use strict";
    this.id = null ,
    this.hostName = null ,
    this.port = null ,
    this.label = function() {
        return this.hostName
    }
    ,
    this.validate = function() {
        return !0
    }
}
  , RemoteResourceFeedState = {
    Initialized: "Initialized",
    Loading: "Loading",
    Loaded: "Loaded"
}
  , RemoteResourceFeed = function() {
    "use strict";
    this.id = null ,
    this.friendlyName = null ,
    this.state = RemoteResourceFeedState.Initialized,
    this.url = null ,
    this.bookmarks = [],
    this.folders = new Store,
    this.bokmarkFolderAssociations = [],
    this.label = function() {
        return this.friendlyName || this.url
    }
}
  , RemoteResourceInvitation = function() {
    "use strict";
    this.id = null ,
    this.friendlyName = null ,
    this.url = null ,
    this.enabled = !1,
    this.email = null ,
    this.label = function() {
        return this.friendlyName || this.url
    }
}
  , SessionState = {
    Initialized: 0,
    Connecting: 1,
    Connected: 2,
    Disconnecting: 3,
    Disconnected: 4
}
  , SessionType = {
    Desktop: 0,
    RemoteApp: 1
}
  , SessionDelegate = function() {
    "use strict";
    this.canvasNeeded = null ,
    this.monitorBounds = null 
}
  , SessionEvent = {
    ViewSizeChanged: 0,
    WillConnect: 1,
    DidConnect: 2,
    WillDisconnect: 3,
    DidDisconnect: 4,
    LoginCompleted: 5,
    ConnectionHealthStateChanged: 6,
    MousePointerChanged: 7,
    ShowDefaultMousePointer: 8,
    GetRemoteClipboardContent: 9,
    ClipboardContentRequest: 10,
    FocusChanged: 11,
    WindowIconChanged: 12,
    WindowTitleChanged: 13,
    WindowLaunched: 14,
    ApplicationIdChanged: 15,
    CredentialsNeeded: 16,
    Error: 17,
    WindowZOrderChanged: 18
}
  , Session = function(a, b, c, d, e) {
    "use strict";
    var f = {
        events: new EventProvider,
        id: null ,
        windowId: null ,
        zOrder: 0
    }
      , g = null 
      , h = null 
      , i = null 
      , j = function() {
        return f.delegate.canvasNeeded ? f.delegate.canvasNeeded() : null 
    }
      , k = function() {
        return f.delegate.monitorBounds ? f.delegate.monitorBounds() : null 
    }
      , l = function(a, b) {
        f.events.fireEventCallback(SessionEvent.ViewSizeChanged, f.id, a, b)
    }
      , m = function(a, b) {
        f.events.fireEventCallback(SessionEvent.CredentialsNeeded, a, b)
    }
      , n = function(a, b) {
        f.events.fireEventCallback(SessionEvent.WillConnect, f.id, a, b)
    }
      , o = function() {
        f.state = SessionState.Connected,
        f.events.fireEventCallback(SessionEvent.DidConnect, f.id)
    }
      , p = function() {
        f.events.fireEventCallback(SessionEvent.WillDisconnect)
    }
      , q = function(a) {
        f.state = SessionState.Disconnected,
        f.events.fireEventCallback(SessionEvent.DidDisconnect, f.id, a)
    }
      , r = function(a, b) {
        f.events.fireEventCallback(SessionEvent.DidDisconnect, f.id, b)
    }
      , s = function(a, b) {
        f.events.fireEventCallback(SessionEvent.DidDisconnect, f.id, b)
    }
      , t = function() {
        f.events.fireEventCallback(SessionEvent.LoginCompleted)
    }
      , u = function() {
        f.events.fireEventCallback(SessionEvent.ConnectionHealthStateChanged)
    }
      , v = function(a, b, c) {
        f.events.fireEventCallback(SessionEvent.MousePointerChanged, a, b, c)
    }
      , w = function(a) {
        f.events.fireEventCallback(SessionEvent.ShowDefaultMousePointer, a)
    }
      , x = function(a, b) {
        e.log("[Session] Remote clipboard data received " + b),
        f.events.fireEventCallback(SessionEvent.GetRemoteClipboardContent, a, b)
    }
      , y = function(a) {
        e.log("[Session] Request for clipboard content received for format " + a.GetFormat()),
        f.events.fireEventCallback(SessionEvent.ClipboardContentRequest, a)
    }
      , z = function(a) {
        a === f.id && f.events.fireEventCallback(SessionEvent.DidDisconnect, f.id)
    }
      , A = function(a, b, c) {
        e.log("[Session] Window icon changed for window: " + a),
        a !== f.windowId || !c && null  !== g || (g = b),
        f.events.fireEventCallback(SessionEvent.WindowIconChanged)
    }
      , B = function(a, b) {
        e.log("[Session] Window title changed to " + b),
        a === f.windowId && (h = b),
        f.events.fireEventCallback(SessionEvent.WindowTitleChanged)
    }
      , C = function(a, b) {
        e.log("[Session] Application id changed to: " + b + " for Window: " + a),
        a === f.windowId && (i = b),
        f.events.fireEventCallback(SessionEvent.ApplicationIdChanged)
    }
      , D = function(a) {
        e.log("[Session] Window launched successfully with result " + a),
        f.events.fireEventCallback(SessionEvent.WindowLaunched, a)
    }
      , E = function(a) {
        var b = a.indexOf(f.windowId);
        b && (e.log("[Session] Window order changed to: " + b + " for Window: " + f.windowId),
        f.zOrder = b,
        f.events.fireEventCallback(SessionEvent.WindowZOrderChanged))
    }
      , F = function(a) {
        f.events.fireEventCallback(SessionEvent.Error, f.id, a)
    }
    ;
    return f.state = SessionState.Initialized,
    f.delegate = new SessionDelegate,
    f.connect = function() {
        f.state !== SessionState.Connecting && (f.state = SessionState.Connecting,
        c.delegate.canvasNeeded = j,
        c.delegate.monitorBounds = k,
        c.delegate.viewSizeChanged = l,
        c.delegate.credentialsNeeded = m,
        c.delegate.willConnect = n,
        c.delegate.didConnect = o,
        c.delegate.willDisconnect = p,
        c.delegate.didDisconnect = q,
        c.delegate.loginCompleted = t,
        c.delegate.connectionHealthStateChanged = u,
        c.delegate.mousePointerChanged = v,
        c.delegate.showDefaultMousePointer = w,
        c.delegate.getRemoteClipboardContent = x,
        c.delegate.clipboardContentRequest = y,
        c.delegate.error = F,
        c.events.subscribe(ConnectionEvent.ConnectionConnectFailed, s),
        c.events.subscribe(ConnectionEvent.ConnectionDestroyed, r),
        c.events.subscribe(ConnectionEvent.WindowDeleted, z),
        c.events.subscribe(ConnectionEvent.WindowIconChanged, A),
        c.events.subscribe(ConnectionEvent.WindowTitleChanged, B),
        c.events.subscribe(ConnectionEvent.WindowApplicationIdChanged, C),
        c.events.subscribe(ConnectionEvent.WindowLaunched, D),
        c.events.subscribe(ConnectionEvent.WindowOrderChanged, E),
        c.connect())
    }
    ,
    f.disconnect = function(a) {
        f.state !== SessionState.Disconnecting && (f.state = SessionState.Disconnecting,
        f.windowId && (c.closeWindow(f.windowId),
        f.windowId = null ),
        c.events.unsubscribe(ConnectionEvent.WindowIconChanged, A),
        a !== !0 ? setTimeout(function() {
            c.disconnect()
        }, 1) : setTimeout(function() {
            c.disconnect(!0)
        }, 1))
    }
    ,
    f.mouseMove = function(a, b) {
        c.mouseMove(a, b)
    }
    ,
    f.mouseDown = function(a, b, d) {
        c.mouseDown(a, b, d)
    }
    ,
    f.mouseUp = function(a, b, d) {
        c.mouseUp(a, b, d)
    }
    ,
    f.mouseWheel = function(a, b) {
        c.mouseWheel(a, b)
    }
    ,
    f.keyDown = function(a) {
        c.keyDown(a)
    }
    ,
    f.keyUp = function(a) {
        c.keyUp(a)
    }
    ,
    f.keyUnicodeDown = function(a) {
        c.keyUnicodeDown(a)
    }
    ,
    f.keyUnicodeUp = function(a) {
        c.keyUnicodeUp(a)
    }
    ,
    f.setRemoteClipboardFormats = function() {
        c.clipboardHandler.setRemoteClipboardFormats()
    }
    ,
    f.isClipboardReady = function() {
        return c.isClipboardReady()
    }
    ,
    f.getBookmark = function() {
        return a
    }
    ,
    f.setFocus = function(a) {
        e.log("[Session] Session focus changed to " + a + " id:" + f.id + " window id:" + f.windowId),
        d === SessionType.RemoteApp && a && f.windowId && c.activateWindow(f.windowId),
        c.setFocus(a),
        f.events.fireEventCallback(SessionEvent.FocusChanged, a)
    }
    ,
    f.getFocus = function() {
        return c.getFocus()
    }
    ,
    f.getThumbnail = function() {
        return null  !== g ? g : null  !== a ? a.thumbnail : null 
    }
    ,
    f.getLabel = function() {
        return null  !== h ? h : a.label()
    }
    ,
    f.getApplicationId = function() {
        return null  !== i ? i : f.id
    }
    ,
    f.invalidateCanvas = function() {
        c.invalidateCanvas()
    }
    ,
    f.getConnectionId = function() {
        return c.id
    }
    ,
    f.getSiblingCount = function() {
        return c.getWindowCount()
    }
    ,
    f.changeResolution = function(a, b) {
        c.setMonitorLayout(a, b)
    }
    ,
    f
}
  , BookmarkStore = function() {
    "use strict";
    var a = new Store(StoreTransactionMode.Immediate)
      , b = a.save;
    return a.save = function(a) {
        null  === a.id && (a.id = (new ObjectHelper).createGuid()),
        b(a)
    }
    ,
    a
}
  , GatewayStore = function() {
    "use strict";
    var a = new Store(StoreTransactionMode.Immediate,StoreType.Memory,null ,null ,null )
      , b = new Store(StoreTransactionMode.Immediate,StoreType.Memory,null ,null ,null )
      , c = b.save;
    return b.save = function(a) {
        null  === a.id && (a.id = (new ObjectHelper).createGuid()),
        c(a)
    }
    ,
    b.associateBookmark = function(b, c) {
        a.save({
            id: b,
            value: c
        })
    }
    ,
    b.unassociateBookmark = function(b) {
        a.remove(b)
    }
    ,
    b.gatewayForBookmark = function(c) {
        var d;
        return d = a.find(c),
        d ? b.find(d.value) : null 
    }
    ,
    b
}
  , GlobalSettingsStore = function(a) {
    "use strict";
    var b = function(a) {
        return JSON.stringify(a)
    }
      , c = function(a) {
        return JSON.parse(a)
    }
    ;
    return new Store(StoreTransactionMode.Immediate,StoreType.Persistent,b,c,a)
}
  , RemoteResourceFeedStore = function() {
    "use strict";
    var a = new Store(StoreTransactionMode.Transactional)
      , b = a.save;
    return a.save = function(a) {
        null  === a.id && (a.id = (new ObjectHelper).createGuid()),
        b(a)
    }
    ,
    a
}
  , RemoteResourceInvitationStore = function(a) {
    "use strict";
    var b = new ObjectHelper
      , c = function(a) {
        return JSON.stringify(a)
    }
      , d = function(a) {
        var b = JSON.parse(a)
          , c = new RemoteResourceInvitation;
        return c.id = b.id,
        c.friendlyName = b.friendlyName,
        c.url = b.url,
        c.enabled = b.enabled,
        c.email = b.email,
        c
    }
      , e = new Store(StoreTransactionMode.Transactional,StoreType.Persistent,c,d,a)
      , f = e.save;
    return e.save = function(a) {
        null  === a.id && (a.id = b.createGuid()),
        f(a)
    }
    ,
    e
}
  , SessionStore = function() {
    "use strict";
    var a = new Store(StoreTransactionMode.Immediate,StoreType.Memory,null ,null ,null ,!1)
      , b = a.save;
    return a.save = function(a) {
        null  === a.id && (a.id = (new ObjectHelper).createGuid()),
        b(a)
    }
    ,
    a
}
  , StoreTransactionMode = {
    Immediate: 0,
    Transactional: 1
}
  , StoreType = {
    Memory: 1,
    Persistent: 2
}
  , StoreEvent = {
    RecordAdded: 0,
    RecordRemoved: 1,
    RecordUpdated: 2,
    CommitComplete: 3,
    RollbackComplete: 4
}
  , Store = function(a, b, c, d, e, f) {
    "use strict";
    var g = {
        events: new EventProvider
    }
      , h = function() {
        "function" == typeof c && c || (c = function() {
            return ""
        }
        ),
        "function" == typeof d && c || (d = function() {
            return null 
        }
        ),
        i()
    }
      , i = function() {
        var a, c;
        if (b === StoreType.Persistent) {
            if (!("localStorage" in window) || null  === window.localStorage)
                throw new Error("Local storage is not supported");
            l = {};
            for (a in localStorage)
                localStorage.hasOwnProperty(a) && 0 === a.indexOf(e) && (c = d(localStorage[a]),
                c && (k[c.id] = c,
                l[c.id] = c))
        }
    }
      , j = []
      , k = []
      , l = {}
      , m = function(a) {
        return l.hasOwnProperty(a)
    }
      , n = function(a) {
        b === StoreType.Persistent && delete localStorage[e + a],
        delete l[a],
        g.events.fireEventCallback(StoreEvent.RecordRemoved, a)
    }
      , o = function(a) {
        var d = !1;
        "undefined" != typeof a.id && m(a.id) === !0 && (d = !0),
        b === StoreType.Persistent && (localStorage[e + a.id] = c(a)),
        l[a.id] = a,
        d ? g.events.fireEventCallback(StoreEvent.RecordUpdated, a.id) : g.events.fireEventCallback(StoreEvent.RecordAdded, a.id)
    }
      , p = function(a) {
        var b;
        for (b = j.length - 1; b >= 0; b--)
            j[b].obj.id === a && j.splice(b, 1)
    }
    ;
    return g.findExcludingCommit = function(a) {
        return m(a) ? (new ObjectHelper).cloneObject(l[a]) : null 
    }
    ,
    g.find = function(b) {
        var c;
        return i(),
        c = l,
        a === StoreTransactionMode.Transactional ? (c = k,
        (new ObjectHelper).cloneObject(c[b])) : c.hasOwnProperty(b) ? (new ObjectHelper).cloneObject(c[b]) : null 
    }
    ,
    g.list = function(b) {
        var c, d, e = l, f = [], g = function(a, b) {
            for (c in b)
                b.hasOwnProperty(c) && (d = b[c].id,
                f.hasOwnProperty(d) ? (a.push(f[d]),
                delete f[d]) : a.push((new ObjectHelper).cloneObject(b[c])));
            return a
        }
        ;
        if (i(),
        "undefined" == typeof b || null  === b)
            b = [];
        else {
            for (c in b)
                f[b[c].id] = b[c];
            b.splice(0, b.length)
        }
        return a === StoreTransactionMode.Transactional ? g(b, k) : g(b, e)
    }
    ,
    g.remove = function(b) {
        a === StoreTransactionMode.Transactional ? (p(b),
        m(b) && (j.push({
            obj: {
                id: b
            },
            type: "Delete"
        }),
        delete k[b])) : n(b)
    }
    ,
    g.removeAll = function() {
        var a;
        for (a in l)
            l.hasOwnProperty(a) && g.remove(l[a].id)
    }
    ,
    g.save = function(b) {
        var c;
        c = f ? (new ObjectHelper).cloneObject(b) : b,
        a === StoreTransactionMode.Transactional ? (p(b.id),
        j.push({
            obj: c,
            type: "Add"
        }),
        "undefined" != typeof b.id && (k[c.id] = c)) : o(c)
    }
    ,
    g.commit = function() {
        var b;
        if (a === StoreTransactionMode.Transactional)
            for (b in j)
                if (j.hasOwnProperty(b)) {
                    var c = j[b];
                    "Add" === c.type ? o(c.obj) : n(c.obj.id)
                }
        j = [],
        g.events.fireEventCallback(StoreEvent.CommitComplete)
    }
    ,
    g.rollback = function() {
        var a;
        k = [];
        for (a in l)
            k[l[a].id] = l[a];
        j = [],
        g.events.fireEventCallback(StoreEvent.RollbackComplete)
    }
    ,
    h(),
    g
}
  , RemoteResourceFeedDataSourceType = {
    Production: 0,
    Mock: 1
}
  , RemoteResourceFeedEvent = {
    RemoteResourceFeedDownloaded: 0,
    RemoteResourceFeedDownloadFailed: 1
}
  , RemoteResourceFeedFactory = function(a, b, c) {
    "use strict";
    var d = {}
      , e = "undefined" != typeof a && null  !== a ? a : RemoteResourceFeedDataSourceType.Mock;
    return d.events = new EventProvider,
    d.createRemoteResource = function(a, f, g) {
        switch (e) {
        case RemoteResourceFeedDataSourceType.Mock:
            var h = TestDataProvider.mockRemoteResourceFeedData[a];
            d.events.fireEventCallback(RemoteResourceFeedEvent.RemoteResourceFeedDownloaded, a, f, h);
            break;
        case RemoteResourceFeedDataSourceType.Production:
            var i = function(c, e) {
                e === HttpStatusCodes.Success ? d.events.fireEventCallback(RemoteResourceFeedEvent.RemoteResourceFeedDownloaded, a, f, c) : (b.error("[RemoteResourceFeedFactory] Adal downloader returned status code other than 200: (" + e + ")"),
                d.events.fireEventCallback(RemoteResourceFeedEvent.RemoteResourceFeedDownloadFailed))
            }
            ;
            c.download(g, a, i)
        }
    }
    ,
    d
}
  , RemoteResourceInvitationDataSourceType = {
    Production: 0,
    Mock: 1
}
  , RemoteResourceInvitationFactoryEvent = {
    InvitationDownloaded: 0,
    InvitationDownloadFailed: 1
}
  , RemoteResourceInvitationFactory = function(a, b, c, d) {
    "use strict";
    var e = {}
      , f = "undefined" != typeof a && null  !== a ? a : RemoteResourceInvitationDataSourceType.Mock;
    return e.events = new EventProvider,
    e.createRemoteResourceInvitation = function(a) {
        switch (f) {
        case RemoteResourceInvitationDataSourceType.Mock:
            e.events.fireEventCallback(RemoteResourceInvitationFactoryEvent.InvitationDownloaded, TestDataProvider.mockRemoteResourceInvitationData);
            break;
        case RemoteResourceInvitationDataSourceType.Production:
            var g = function(a, b) {
                b === HttpStatusCodes.Success ? e.events.fireEventCallback(RemoteResourceInvitationFactoryEvent.InvitationDownloaded, a) : (c.error("[RemoteResourceInvitationFactory] Adal downloader returned status code other than 200: (" + b + ")"),
                e.events.fireEventCallback(RemoteResourceInvitationFactoryEvent.InvitationDownloadFailed, b))
            }
            ;
            d.download(a, b, g)
        }
    }
    ,
    e
}
  , SessionFactoryEvent = {
    SessionCreated: 0,
    SessionDestroyed: 1,
    SessionFocused: 2,
    ConnectionCreated: 3,
    ConnectionDestroyed: 4,
    ConnectionCreateFailed: 5
}
  , SessionFactory = function(a, b, c) {
    "use strict";
    var d = []
      , e = {}
      , f = {
        events: new EventProvider
    }
      , g = function(a) {
        f.events.fireEventCallback(SessionFactoryEvent.ConnectionDestroyed, a),
        a.events.unsubscribe(ConnectionEvent.ConnectionDestroyed, g),
        a.events.unsubscribe(ConnectionEvent.WindowCreated, h),
        a.events.unsubscribe(ConnectionEvent.WindowDeleted, i),
        a.events.unsubscribe(ConnectionEvent.WindowActivated, j)
    }
      , h = function(a, c) {
        var g;
        d.length > 0 ? (g = d.pop(),
        g.windowId = c) : (g = new Session(null ,null ,a,SessionType.RemoteApp,b),
        g.windowId = c,
        f.events.fireEventCallback(SessionFactoryEvent.SessionCreated, g)),
        e[c] = g.id
    }
      , i = function(a) {
        var c = e[a];
        c && (b.log("[SessionFactory] Connection destroyed window"),
        f.events.fireEventCallback(SessionFactoryEvent.SessionDestroyed, c),
        delete e[a])
    }
      , j = function(a) {
        var c = e[a];
        c && (b.log("[SessionFactory] Connection activated window"),
        f.events.fireEventCallback(SessionFactoryEvent.SessionFocused, c))
    }
    ;
    return f.createSession = function(e, k, l, m) {
        var n, o = null , p = null ;
        n = new ConnectionProperties(e,k);
        try {
            o = a.createConnection(n)
        } catch (q) {
            return b.error("[SessionFactory] Connection create failed createConnection throw following error."),
            b.error(q),
            f.events.fireEventCallback(SessionFactoryEvent.ConnectionCreateFailed, q),
            null 
        }
        o.events.subscribe(ConnectionEvent.ConnectionDestroyed, g),
        n.remoteApplicationMode ? (b.debug("[SessionFactory] Launching remote app: " + n.remoteApplicationProgram),
        o.events.subscribe(ConnectionEvent.WindowCreated, h),
        o.events.subscribe(ConnectionEvent.WindowDeleted, i),
        o.events.subscribe(ConnectionEvent.WindowActivated, j),
        l || o.launchApplication(n.remoteApplicationProgram, n.remoteApplicationCmdLine, ""),
        o.getState() === ConnectionState.Initialized && (p = new Session(e,k,o,SessionType.RemoteApp,b),
        p.id = (new ObjectHelper).createGuid(),
        d.push(p),
        f.events.fireEventCallback(SessionFactoryEvent.SessionCreated, p))) : (p = new Session(e,k,o,SessionType.Desktop,b),
        f.events.fireEventCallback(SessionFactoryEvent.SessionCreated, p)),
        o.isExistingConnection === !1 && (c && (c.addConnectionStartTimeAndLoc(o.id, m, (new Date).getTime()),
        c.setBookmarkIdForConnection(o.id, e.id)),
        f.events.fireEventCallback(SessionFactoryEvent.ConnectionCreated, e.id, o))
    }
    ,
    f
}
  , BookmarkProviderEvent = {
    BookmarkAdded: 0,
    BookmarkUpdated: 1,
    BookmarkRemoved: 2
}
  , BookmarkProvider = function(a) {
    "use strict";
    var b = {
        events: new EventProvider
    }
      , c = function(a, b) {
        var c = function(a) {
            f(),
            b.fireEventCallback(BookmarkProviderEvent.BookmarkAdded, a)
        }
          , d = function(a) {
            f(),
            b.fireEventCallback(BookmarkProviderEvent.BookmarkUpdated, a)
        }
          , e = function(a) {
            f(),
            b.fireEventCallback(BookmarkProviderEvent.BookmarkRemoved, a)
        }
          , f = function() {
            a.events.unsubscribe(StoreEvent.RecordAdded, c),
            a.events.unsubscribe(StoreEvent.RecordUpdated, d),
            a.events.unsubscribe(StoreEvent.RecordRemoved, e)
        }
        ;
        this.subscribeStoreEvents = function() {
            a.events.subscribe(StoreEvent.RecordAdded, c),
            a.events.subscribe(StoreEvent.RecordUpdated, d),
            a.events.subscribe(StoreEvent.RecordRemoved, e)
        }
    }
      , d = new c(a,b.events);
    return b.bookmarkList = function(b) {
        return a.list(b)
    }
    ,
    b.save = function(b) {
        d.subscribeStoreEvents(),
        a.save(b)
    }
    ,
    b.remove = function(b) {
        d.subscribeStoreEvents(),
        a.remove(b)
    }
    ,
    b.find = function(b) {
        return a.find(b)
    }
    ,
    b
}
  , GatewayProviderEvent = {
    GatewayAdded: 0,
    GatewayUpdated: 1,
    GatewayRemoved: 2,
    BookmarkAssociated: 3,
    BookmarkUnassociated: 4
}
  , GatewayProvider = function(a) {
    "use strict";
    var b = {
        events: new EventProvider
    }
      , c = function(a, b) {
        var c = function(a) {
            f(),
            b.fireEventCallback(GatewayProviderEvent.GatewayAdded, a)
        }
          , d = function(a) {
            f(),
            b.fireEventCallback(GatewayProviderEvent.GatewayUpdated, a)
        }
          , e = function(a) {
            f(),
            b.fireEventCallback(GatewayProviderEvent.GatewayRemoved, a)
        }
          , f = function() {
            a.events.unsubscribe(StoreEvent.RecordAdded, c),
            a.events.unsubscribe(StoreEvent.RecordUpdated, d),
            a.events.unsubscribe(StoreEvent.RecordRemoved, e)
        }
        ;
        this.subscribeStoreEvents = function() {
            a.events.subscribe(StoreEvent.RecordAdded, c),
            a.events.subscribe(StoreEvent.RecordUpdated, d),
            a.events.subscribe(StoreEvent.RecordRemoved, e)
        }
    }
      , d = new c(a,b.events);
    return b.gatewayList = function(b) {
        return a.list(b)
    }
    ,
    b.save = function(b) {
        d.subscribeStoreEvents(),
        a.save(b)
    }
    ,
    b.remove = function(b) {
        d.subscribeStoreEvents(),
        a.remove(b)
    }
    ,
    b.find = function(b) {
        return a.find(b)
    }
    ,
    b.associateBookmark = function(b, c) {
        a.associateBookmark(b, c)
    }
    ,
    b.unassociateBookmark = function(b) {
        a.unassociateBookmark(b)
    }
    ,
    b.gatewayForBookmark = function(b) {
        return a.gatewayForBookmark(b)
    }
    ,
    b
}
  , GlobalUtils = function() {
    "use strict";
    var a = {
        telemetryProvider: null ,
        telemetryManagerProvider: null 
    };
    return function() {
        String.prototype.startsWith || (String.prototype.startsWith = function(a, b) {
            return b = b || 0,
            this.indexOf(a, b) === b
        }
        ),
        String.prototype.endsWith || (String.prototype.endsWith = function(a, b) {
            var c = this.toString();
            ("number" != typeof b || !isFinite(b) || Math.floor(b) !== b || b > c.length) && (b = c.length),
            b -= a.length;
            var d = c.indexOf(a, b);
            return -1 !== d && d === b
        }
        )
    }(),
    a.initTelemetry = function(b, c, d) {
        var e = new TelemetryHttpsTracker(new HTTPHelper,GlobalUtils.settings.trackerPostInterval);
        a.telemetryProvider = new Telemetry(e,b,!0,GlobalUtils.settings.isInProductionMode,GlobalUtils.settings.version,c,GlobalUtils.settings.clientTelemetryHost,GlobalUtils.settings.araTelemetryHost),
        a.telemetryManagerProvider = new TelemetryManager(a.telemetryProvider,e,b,d)
    }
    ,
    a.logger = new Logger,
    a.settings = function() {
        var a = "0.4.1603020535"
          , b = "Live"
          , c = new AppSettingsDevelop;
        return "Live" === b ? c = new AppSettingsLive : "PreLive" === b ? c = new AppSettingsPreLive : "Debug" === b && (c = new AppSettingsTest),
        c.version = c.version || a,
        c.target = c.target || b,
        c
    }(),
    a
}()
  , RemoteResourceFeedProviderEvent = {
    RemoteResourceFeedRefreshComplete: 0,
    RemoteResourceFeedAdded: 1,
    RemoteResourceFeedUpdated: 2,
    RemoteResourceFeedRemoved: 3,
    RemoteResourceFeedRefreshError: 4
}
  , RemoteResourceFeedProvider = function(a, b, c, d, e, f) {
    "use strict";
    var g = {
        events: new EventProvider
    }
      , h = []
      , i = function(a, b) {
        var c, d = function() {
            a.events.unsubscribe(StoreEvent.RecordAdded, e),
            a.events.unsubscribe(StoreEvent.RecordUpdated, f),
            a.events.unsubscribe(StoreEvent.RecordRemoved, g),
            a.events.unsubscribe(StoreEvent.CommitComplete, h)
        }
        , e = function(a) {
            b.fireEventCallback(RemoteResourceFeedProviderEvent.RemoteResourceFeedAdded, a)
        }
        , f = function(a) {
            b.fireEventCallback(RemoteResourceFeedProviderEvent.RemoteResourceFeedUpdated, a)
        }
        , g = function(a) {
            b.fireEventCallback(RemoteResourceFeedProviderEvent.RemoteResourceFeedRemoved, a)
        }
        , h = function() {
            d(),
            b.fireEventCallback(RemoteResourceFeedProviderEvent.RemoteResourceFeedRefreshComplete, c)
        }
        ;
        this.subscribe = function(b) {
            c = b,
            a.events.subscribe(StoreEvent.RecordAdded, e),
            a.events.subscribe(StoreEvent.RecordUpdated, f),
            a.events.subscribe(StoreEvent.RecordRemoved, g),
            a.events.subscribe(StoreEvent.CommitComplete, h)
        }
    }
      , j = function(a, b, c, d, g, h) {
        var i, j = new Bookmark, k = new Gateway, l = new HTTPHelper, m = function(b, c, d) {
            a.push({
                id: b,
                name: j.label()
            }),
            h.events.unsubscribe(BookmarkProviderEvent.BookmarkAdded, m),
            h.events.unsubscribe(BookmarkProviderEvent.BookmarkUpdated, m),
            f.debug("[RemoteResourceFeedProvider] onBookmarkSaved id: " + b),
            null  !== c.hostName ? (e.events.subscribe(GatewayProviderEvent.GatewayAdded, n, b, d),
            e.events.subscribe(GatewayProviderEvent.GatewayUpdated, n, b, d),
            e.save(c)) : d()
        }
        , n = function(a, b, c) {
            e.events.unsubscribe(GatewayProviderEvent.GatewayAdded, n),
            e.events.unsubscribe(GatewayProviderEvent.GatewayUpdated, n),
            e.associateBookmark(b, a),
            c()
        }
        ;
        "undefined" != typeof b._ID && (j.id = b._ID),
        j.friendlyName = b._Title,
        j.thumbnail = b.Icons.Icon32._FileURL,
        j.tenantId = c,
        i = b.HostingTerminalServers.HostingTerminalServer.ResourceFile._URL,
        f.debug("[RemoteResourceFeedProvider] Downloading " + i),
        function(a, b, c, d) {
            l.onComplete = function(e, f) {
                f === HttpStatusCodes.Success ? (a.rdpFileString = e,
                h.events.subscribe(BookmarkProviderEvent.BookmarkAdded, m, b, c),
                h.events.subscribe(BookmarkProviderEvent.BookmarkUpdated, m, b, c),
                h.save(a)) : d(f)
            }
            ,
            l.get(i, null )
        }(j, k, d, g)
    }
      , k = function(a, c, d, e) {
        var g, i = this, k = 0, l = function() {
            0 >= g && (i.unsubscribe(),
            k > 0 ? (d.fireEventCallback(RemoteResourceFeedProviderEvent.RemoteResourceFeedRefreshError, k),
            c.rollback()) : c.commit())
        }
        , m = function() {
            --g,
            k += 1,
            l()
        }
        , n = function(a, i, m) {
            var n, o, p = new X2JS, q = p.xml_str2json(m), r = q.ResourceCollection.Publisher, s = p.asArray(r.Resources.Resource), t = new RemoteResourceFeed, u = null , v = function() {
                t.bookmarks.sort(function(a, b) {
                    return a = a.name.toLowerCase(),
                    b = b.name.toLowerCase(),
                    b > a ? -1 : a > b ? 1 : 0
                })
            }
            , w = function() {
                --o <= 0 && (v(),
                g--,
                l())
            }
            , x = function(a) {
                k++,
                f.log("[RemoteResourceFeedProvider] Bookmark download failed with status code: " + a),
                d.fireEventCallback(RemoteResourceFeedProviderEvent.RemoteResourceFeedRefreshError, k)
            }
            ;
            if (f.log("[RemoteResourceFeedProvider] Downloading feed " + a),
            t.id = r._ID,
            t.url = a,
            t.friendlyName = r._Name,
            "undefined" != typeof s && s.length >= 1 && "undefined" != typeof s[0]) {
                o = s.length;
                for (n in s)
                    j(t.bookmarks, s[n], i, w, x, e)
            } else
                --g;
            c.save(t),
            u = h.shift(),
            u && b.createRemoteResource(u.url, u.id, u.token),
            l()
        }
        ;
        this.subscribe = function(b) {
            k = 0,
            g = b,
            a.events.subscribe(RemoteResourceFeedEvent.RemoteResourceFeedDownloaded, n),
            a.events.subscribe(RemoteResourceFeedEvent.RemoteResourceFeedDownloadFailed, m)
        }
        ,
        this.unsubscribe = function() {
            a.events.unsubscribe(RemoteResourceFeedEvent.RemoteResourceFeedDownloaded, n),
            a.events.unsubscribe(RemoteResourceFeedEvent.RemoteResourceFeedDownloadFailed, m)
        }
    }
      , l = new k(b,a,g.events,d)
      , m = new i(a,g.events);
    return g.refreshAllFeeds = function(d) {
        var e, f, g, i;
        f = c.list(),
        a.removeAll(),
        g = f.filter(function(a) {
            return a.enabled === !0
        }),
        l.subscribe(g.length),
        m.subscribe(g.length);
        for (e in g)
            g.hasOwnProperty(e) && h.push({
                url: g[e].url,
                id: g[e].id,
                token: d
            });
        i = h.shift(),
        i && b.createRemoteResource(i.url, i.id, i.token),
        0 === g.length && (l.unsubscribe(),
        a.commit())
    }
    ,
    g.refresh = function(c, d) {
        a.remove(c.id),
        m.subscribe(1),
        l.subscribe(1),
        b.createRemoteResource(c.url, c.id, d)
    }
    ,
    g
}
  , RemoteResourceInvitationProviderEvent = {
    RemoteResourceInvitationRefreshComplete: 0,
    RemoteResourceInvitationAdded: 1,
    RemoteResourceInvitationUpdated: 2,
    RemoteResourceInvitationRemoved: 3,
    RemoteResourceInvitationRefreshFailed: 4
}
  , RemoteResourceInvitationProvider = function(a, b, c, d) {
    "use strict";
    var e = {
        events: new EventProvider
    }
      , f = function(a, b) {
        var c = function() {
            a.events.unsubscribe(StoreEvent.RecordAdded, d),
            a.events.unsubscribe(StoreEvent.RecordUpdated, e),
            a.events.unsubscribe(StoreEvent.RecordRemoved, f),
            a.events.unsubscribe(StoreEvent.CommitComplete, g)
        }
          , d = function(a) {
            b.fireEventCallback(RemoteResourceInvitationProviderEvent.RemoteResourceInvitationAdded, a)
        }
          , e = function(a) {
            b.fireEventCallback(RemoteResourceInvitationProviderEvent.RemoteResourceInvitationUpdated, a)
        }
          , f = function(a) {
            b.fireEventCallback(RemoteResourceInvitationProviderEvent.RemoteResourceInvitationRemoved, a)
        }
          , g = function() {
            c(),
            b.fireEventCallback(RemoteResourceInvitationProviderEvent.RemoteResourceInvitationRefreshComplete)
        }
        ;
        this.subscribe = function() {
            a.events.subscribe(StoreEvent.RecordAdded, d),
            a.events.subscribe(StoreEvent.RecordUpdated, e),
            a.events.subscribe(StoreEvent.RecordRemoved, f),
            a.events.subscribe(StoreEvent.CommitComplete, g)
        }
    }
      , g = function(a, b, d) {
        var e = new f(b,d)
          , g = function() {
            a.events.unsubscribe(RemoteResourceInvitationFactoryEvent.InvitationDownloaded, h),
            a.events.unsubscribe(RemoteResourceInvitationFactoryEvent.InvitationDownloadFailed, i)
        }
          , h = function(a) {
            var d, e = new X2JS, f = e.xml_str2json(a), h = e.asArray(f.TenantFeedURLs.TenantFeedURL);
            for (d in h)
                if (h.hasOwnProperty(d) && void 0 !== h[d]) {
                    var i, j, k;
                    void 0 === h[d]._demo ? (i = h[d]._TenantId,
                    j = new RemoteResourceInvitation,
                    k = b.findExcludingCommit(i),
                    j.id = h[d]._TenantId,
                    j.friendlyName = h[d]._WorkspaceName,
                    j.url = h[d]._FeedURL,
                    j.email = h[d]._ContactEmail,
                    null  !== k && (j.enabled = k.enabled),
                    c && (j.enabled = "Accepted" === h[d]._ConsentStatus)) : "true" === h[d]._demo && (i = h[d]._TenantId || (new ObjectHelper).createGuid(),
                    j = new RemoteResourceInvitation,
                    k = b.findExcludingCommit(i),
                    j.id = i,
                    j.friendlyName = "Demo Feed",
                    j.url = h[d]._FeedURL,
                    j.email = "Demo Feed",
                    j.enabled = !0),
                    b.save(j)
                }
            g(),
            b.commit()
        }
          , i = function(a) {
            d.fireEventCallback(RemoteResourceInvitationProviderEvent.RemoteResourceInvitationRefreshFailed, a)
        }
        ;
        this.subscribe = function() {
            e.subscribe(),
            a.events.subscribe(RemoteResourceInvitationFactoryEvent.InvitationDownloaded, h),
            a.events.subscribe(RemoteResourceInvitationFactoryEvent.InvitationDownloadFailed, i)
        }
    }
      , h = new g(b,a,e.events);
    return e.refresh = function(c) {
        a.removeAll(),
        h.subscribe(),
        b.createRemoteResourceInvitation(c)
    }
    ,
    e.updateConsent = function(b) {
        var c = []
          , e = {
            Authorization: "MS-WARA-CLAIMS ADAL-OOB=" + b,
            "Content-Type": "application/xml",
            Accept: "application/xml"
        }
          , f = function() {
            for (var a, b, f, g = "<?xml version='1.0' encoding='UTF-8' standalone='yes' ?><UpdateStatus xmlns=\"http://schemas.microsoft.com/ts/2014/03/tswfdiscovery\">", h = null , i = 0; i < c.length; i++)
                f = c[i],
                a = f.enabled ? "Accepted" : "Rejected",
                b = f.id,
                null  === h && (h = f.url.indexOf("https") > -1 ? "https://" + f.url.substring(8).split("/")[0] + "/Api/FeedDiscoveryLogin/Consent/UpdateConsent" : f.url.split("/")[0] + "/Api/FeedDiscoveryLogin/Consent/UpdateConsent"),
                g += '<Status ConsentStatus="' + a + '" TenantId="' + b + '" />';
            g += "</UpdateStatus>",
            d.post(h, e, g)
        }
        ;
        a.list(c),
        d.onComplete = function() {}
        ,
        f()
    }
    ,
    e
}
  , SessionProviderEvent = {
    SessionCreated: 0,
    SessionDestroyed: 1,
    SessionFocused: 2,
    SessionCreateFailed: 3
}
  , SessionProviderDelegate = function() {
    "use strict";
    this.canvasNeeded = null ,
    this.monitorBounds = null 
}
  , SessionProvider = function(a, b, c, d, e, f, g) {
    "use strict";
    var h = {
        events: new EventProvider
    }
      , i = function(a) {
        return c.save(a),
        a.delegate.canvasNeeded = j,
        a.delegate.monitorBounds = k,
        a.events.subscribe(SessionEvent.DidDisconnect, n, a.id),
        h.events.fireEventCallback(SessionProviderEvent.SessionCreated, a.id),
        a.id
    }
      , j = function() {
        return h.delegate.canvasNeeded ? h.delegate.canvasNeeded() : null 
    }
      , k = function() {
        return h.delegate.monitorBounds ? h.delegate.monitorBounds() : null 
    }
      , l = function() {
        h.activeSession && h.activeSession.setFocus(!1)
    }
      , m = function(a) {
        g.log("[SessionProvider] Session created received in provider"),
        i(a),
        h.activeSession = a,
        h.events.fireEventCallback(SessionProviderEvent.SessionFocused, a.id),
        a.events.subscribe(SessionEvent.DidDisconnect, r)
    }
      , n = function(a) {
        var b = c.find(a);
        b && (g.log("[SessionProvider] Session disconnect received in provider"),
        c.remove(a),
        h.events.fireEventCallback(SessionProviderEvent.SessionDestroyed, a))
    }
      , o = function(a, b) {
        var c = d.find(a);
        g.log("[SessionProvider] Connection created event received. Updating app state."),
        f.save({
            id: c.tenantId,
            bookmarkId: a,
            connectionId: b.id,
            tokenExpired: !1,
            connected: !0
        })
    }
      , p = function() {
        g.log("[SessionProvider] Connection create failed event received."),
        h.events.fireEventCallback(SessionProviderEvent.SessionCreateFailed)
    }
      , q = function(a) {
        var b, c, d = h.sessionList(), e = f.list();
        d.length > 0 && (b = d[0],
        b.setFocus(!0)),
        g.log("[SessionProvider] Connection destroyed event received. Updating app state.");
        for (c in e)
            e.hasOwnProperty(c) && (e[c].connectionId !== a.id || e[c].tokenExpired || f.remove(e[c].id))
    }
      , r = function(a) {
        var b = c.find(a);
        b && (g.log("[SessionProvider] Session disconnected received in provider"),
        c.remove(a),
        h.events.fireEventCallback(SessionProviderEvent.SessionDestroyed, a))
    }
      , s = function(a) {
        var b = c.find(a);
        b && (g.log("[SessionProvider] Session focused received in provider"),
        h.activeSession = b,
        h.events.fireEventCallback(SessionProviderEvent.SessionFocused, a))
    }
      , t = function() {
        a.events.subscribe(SessionFactoryEvent.SessionCreated, m),
        a.events.subscribe(SessionFactoryEvent.SessionDestroyed, r),
        a.events.subscribe(SessionFactoryEvent.SessionFocused, s),
        a.events.subscribe(SessionFactoryEvent.ConnectionCreated, o),
        a.events.subscribe(SessionFactoryEvent.ConnectionCreateFailed, p),
        a.events.subscribe(SessionFactoryEvent.ConnectionDestroyed, q)
    }
    ;
    return t(),
    h.sessionList = function(a) {
        return c.list(a)
    }
    ,
    h.sessionListGrouped = function(a) {
        var b, d, e, f, g, h = c.list();
        if ("undefined" == typeof a || null  === a)
            a = {};
        else
            for (b in a)
                a.hasOwnProperty(b) && delete a[b];
        for (b in h)
            h.hasOwnProperty(b) && (d = h[b],
            e = d.getApplicationId(),
            g = a[e],
            "undefined" == typeof g && (g = {},
            g.thumbnail = d.getThumbnail(),
            a[e] = g),
            f = g.sessionList,
            "undefined" == typeof f && (f = [],
            g.sessionList = f),
            f.length > 0 && d.zOrder < f[0].zOrder ? f.unshift(d) : f.push(d));
        return a
    }
    ,
    h.disconnect = function() {
        c.removeAll(),
        b.disconnectAllConnections()
    }
    ,
    h.activeSession = null ,
    h.delegate = new SessionProviderDelegate,
    h.createSession = function(b, c, f) {
        var g, h;
        g = d.find(b),
        g && (h = e.gatewayForBookmark(b),
        a.createSession(g, h, c, f))
    }
    ,
    h.find = function(a) {
        return c.find(a)
    }
    ,
    h.focusToSession = function(a) {
        var b = c.find(a);
        b && (l(),
        b.setFocus(!0),
        h.activeSession = b,
        h.events.fireEventCallback(SessionProviderEvent.SessionFocused, b.id))
    }
    ,
    h.restoreSessions = function() {
        var a, b, c, e, i = f.list(), j = !1;
        g.log("[SessionProvider] Restoring app state. There are total " + i.length + " connections to be launched");
        for (a in i)
            i.hasOwnProperty(a) && (b = i[a].id,
            c = i[a].bookmarkId,
            e = i[a].connected || !1,
            d.find(c) ? (g.log("[SessionProvider] Restoring app state for bookmark: " + c),
            h.createSession(c, e)) : f.remove(b),
            j = !0);
        return j
    }
    ,
    h.tokenExpiredForConnection = function(a) {
        var b, c = f.list();
        for (b in c)
            c.hasOwnProperty(b) && c[b].connectionId === a && (c[b].tokenExpired = !0,
            c[b].connected = !1,
            f.save(c[b]))
    }
    ,
    h.invalidateCanvasForActiveConnections = function() {
        b.invalidateCanvasForActiveConnections()
    }
    ,
    h.hasActiveConnections = function() {
        return b.hasActiveConnections()
    }
    ,
    h
}
  , Module = {
    logger: GlobalUtils.logger,
    preRun: [],
    postRun: [],
    print: function(a) {
        "use strict";
        a = Array.prototype.slice.call(arguments).join(" "),
        this.logger.log("[EmscriptenModule] " + a)
    },
    printErr: function(a) {
        "use strict";
        a = Array.prototype.slice.call(arguments).join(" "),
        this.logger.error("[EmscriptenModule] " + a)
    }
}
  , CanvasGraphicsSinkFactory = function(a) {
    "use strict";
    var b = {};
    return b.createGraphicsSink = function(b, c) {
        var d = function(b) {
            var d = b
              , e = document.createElement("canvas");
            e.width = d.width,
            e.height = d.height;
            var f = null 
              , g = null ;
            this.isFocused = c,
            this.setCanvas = function(a) {
                f = a
            }
            ,
            this.Destroy = function() {
                d && (d["delete"](),
                d = null ),
                g && (g["delete"](),
                g = null ),
                e && (e = null )
            }
            ,
            this.GetCanvas = function(a) {
                return a ? f : e
            }
            ,
            this.Present = function(b) {
                if (e && f && g) {
                    for (var c = b.get(0), d = 1; d < b.size(); d++) {
                        var h = b.get(d);
                        c.extend_rect(h),
                        h["delete"]()
                    }
                    c.intersects(g) && (c.clip(g),
                    this.refreshCanvas(c, g)),
                    c["delete"]()
                } else
                    a.error("[CanvasGraphicsSinkFactory] Not attached to a canvas");
                b["delete"]()
            }
            ,
            this.refreshCanvas = function(a, b) {
                if (this.isFocused) {
                    var c = f.getContext("2d");
                    c.drawImage(e, a.left, a.top, a.width(), a.height(), a.left - b.left, a.top - b.top, a.width(), a.height())
                }
            }
            ,
            this.refreshWholeCanvas = function() {
                e && f && g && this.refreshCanvas(g, g)
            }
            ,
            this.GetDescriptor = function() {
                return d
            }
            ,
            this.SetViewport = function(b) {
                b ? a.debug("[CanvasGraphicsSinkFactory] Setting graphics sink viewport: width = " + b.width() + " height = " + b.height()) : a.debug("[CanvasGraphicsSinkFactory] Removing graphics sink viewport"),
                g = b
            }
        }
        ;
        return new d(b)
    }
    ,
    b
}
  , ConnectionState = {
    OpeningRemotePort: 0,
    EstablishingSecureConnection: 1,
    ConfiguringRemoteConnection: 2,
    DetectingNetworkQuality: 3,
    SessionBrokerFindingDestination: 4,
    SessionBrokerLoadingDestination: 5,
    SessionBrokerBringingSessionOnline: 6,
    SessionBrokerRedirectingToDestination: 7,
    VirtualMachineLoading: 8,
    VirtualMachineWaking: 9,
    VirtualMachineStarting: 10,
    VirtualMachineStartingSessionMonitoring: 11,
    VirtualMachineRetryingSessionMonitoring: 12,
    Connected: 13,
    Disconnected: 14,
    Initialized: 15
}
  , ConnectionEvent = {
    ConnectionDestroyed: 0,
    WindowIconChanged: 1,
    WindowDeleted: 2,
    WindowActivated: 3,
    WindowTitleChanged: 4,
    WindowCreated: 5,
    WindowApplicationIdChanged: 6,
    WindowLaunched: 7,
    ConnectionConnectFailed: 8,
    WindowOrderChanged: 9
}
  , MouseButton = {
    Left: 0,
    Right: 1,
    Middle: 2,
    Button4: 3,
    Button5: 4
}
  , ConnectionDelegate = function() {
    "use strict";
    this.canvasNeeded = null ,
    this.viewSizeChanged = null ,
    this.credentialsNeeded = null ,
    this.willConnect = null ,
    this.didConnect = null ,
    this.willDisconnect = null ,
    this.didDisconnect = null ,
    this.loginCompleted = null ,
    this.connectionHealthStateChanged = null ,
    this.mousePointerChanged = null ,
    this.showDefaultMousePointer = null ,
    this.mousePositionChanged = null ,
    this.multiTouchEnabled = null ,
    this.error = null ,
    this.getRemoteClipboardContent = null ,
    this.clipboardContentRequest = null ,
    this.monitorBounds = null 
}
  , ClipboardHandler = function(a, b) {
    "use strict";
    var c, d = {};
    return d.onClipboardContentRequest = function(b) {
        a.clipboardContentRequest(b)
    }
    ,
    d.setRemoteClipboardFormats = function() {
        var a = new Module.ClipboardFormatList;
        a.push_back(new Module.ClipboardFormat(Module.ClipboardFormatType.Text)),
        a.push_back(new Module.ClipboardFormat(Module.ClipboardFormatType.UnicodeText)),
        c.SetRemoteClipboardFormats(a),
        a["delete"]()
    }
    ,
    d.getRemoteClipboardContent = function(a) {
        c.GetRemoteClipboardContent(a)
    }
    ,
    d.getRemoteClipboardContentComplete = function(c, d, e) {
        if (c.value === Module.ClipboardResponse.ResponseOk.value)
            switch (d.value) {
            case Module.ClipboardFormatType.Text.value:
            case Module.ClipboardFormatType.UnicodeText.value:
                a.getRemoteClipboardContent(d, e);
                break;
            default:
                b.debug("[Connection] Unknown clipboard format received!")
            }
        else
            b.debug("[Connection] Clipboard getClipboardContent result invalid.")
    }
    ,
    d.remoteClipboardChanged = function(a) {
        for (var b = 0; b < a.size(); b++) {
            var c = a.get(b);
            switch (c.Type && c.Type.value) {
            case Module.ClipboardFormatType.UnicodeText.value:
                d.getRemoteClipboardContent(Module.ClipboardFormatType.UnicodeText);
                break;
            case Module.ClipboardFormatType.Text.value:
                d.getRemoteClipboardContent(Module.ClipboardFormatType.Text)
            }
        }
        a["delete"]()
    }
    ,
    d.setRemoteClipboardFormatsComplete = function() {}
    ,
    d.setClipboardController = function(a) {
        c = a
    }
    ,
    d
}
  , Connection = function(a, b, c) {
    "use strict";
    var d, e, f, g, h, i, j = {
        id: null ,
        tenantId: null ,
        eventLogUploadAddress: null ,
        isExistingConnection: !1,
        events: new EventProvider
    }, k = ConnectionState.Initialized, l = !0, m = 0, n = 4e3, o = null , p = !1, q = [], r = [], s = GlobalUtils.telemetryManagerProvider, t = function(c) {
        var d = {
            code: Module.DisconnectCode.UnknownError
        };
        b.debug("[Connection] Cleaning up connection"),
        k = ConnectionState.Disconnected,
        j.events && (c || (d = null ),
        j.events.fireEventCallback(ConnectionEvent.ConnectionDestroyed, j, d),
        j.events = null ),
        i && i.cancel(),
        a && a["delete"](),
        S()
    }
    , u = function(a) {
        switch (a) {
        case Module.ConnectionStatusUpdates.OpeningRemotePort:
            k = ConnectionState.OpeningRemotePort,
            b.debug("[Connection] Connection state changed to: Opening remote port");
            break;
        case Module.ConnectionStatusUpdates.EstablishingSecureConnection:
            k = ConnectionState.EstablishingSecureConnection,
            b.debug("[Connection] Connection state changed to: Establishing secure connection");
            break;
        case Module.ConnectionStatusUpdates.ConfiguringRemoteConnection:
            k = ConnectionState.ConfiguringRemoteConnection,
            b.debug("[Connection] Connection state changed to: Configuring remote connection");
            break;
        case Module.ConnectionStatusUpdates.DetectingNetworkQuality:
            k = ConnectionState.DetectingNetworkQuality,
            b.debug("[Connection] Connection state changed to: Detecting network quality");
            break;
        case Module.ConnectionStatusUpdates.SessionBrokerFindingDestination:
            k = ConnectionState.SessionBrokerFindingDestination,
            b.debug("[Connection] Connection state changed to: Session broker finding session");
            break;
        case Module.ConnectionStatusUpdates.SessionBrokerLoadingDestination:
            k = ConnectionState.SessionBrokerLoadingDestination,
            b.debug("[Connection] Connection state changed to: Session broker loading destination");
            break;
        case Module.ConnectionStatusUpdates.SessionBrokerBringingSessionOnline:
            k = ConnectionState.SessionBrokerBringingSessionOnline,
            b.debug("[Connection] Connection state changed to: Session broker bringing session online");
            break;
        case Module.ConnectionStatusUpdates.SessionBrokerRedirectingToDestination:
            k = ConnectionState.SessionBrokerRedirectingToDestination,
            b.debug("[Connection] Connection state changed to: Session broker redirecting to destination");
            break;
        case Module.ConnectionStatusUpdates.VirtualMachineLoading:
            k = ConnectionState.VirtualMachineLoading,
            b.debug("[Connection] Connection state changed to: Virtual machine loading");
            break;
        case Module.ConnectionStatusUpdates.VirtualMachineWaking:
            k = ConnectionState.VirtualMachineWaking,
            b.debug("[Connection] Connection state changed to: Virtual machine waking");
            break;
        case Module.ConnectionStatusUpdates.VirtualMachineStarting:
            k = ConnectionState.VirtualMachineStarting,
            b.debug("[Connection] Connection state changed to: Virtual machine starting");
            break;
        case Module.ConnectionStatusUpdates.VirtualMachineRetryingSessionMonitoring:
            k = ConnectionState.VirtualMachineRetryingSessionMonitoring,
            b.debug("[Connection] Connection state changed to: Virtual machine retrying session monitoring");
            break;
        case Module.ConnectionStatusUpdates.VirtualMachineStartingSessionMonitoring:
            k = ConnectionState.VirtualMachineStartingSessionMonitoring,
            b.debug("[Connection] Connection state changed to: Virtual machine starting session monitoring")
        }
        j.delegate.willConnect && j.delegate.willConnect(k, m)
    }
    , v = function() {
        b.debug("[Connection] Connected"),
        S(),
        s && s.setArcFinishTime(j.id, (new Date).getTime()),
        k = ConnectionState.Connected,
        j.delegate.didConnect && j.delegate.didConnect()
    }
    , w = function() {
        b.debug("[Connection] Disconnecting"),
        j.delegate.willDisconnect && j.delegate.willDisconnect()
    }
    , x = function(c) {
        20 > m && (c && c.code && c.code.value === Module.DisconnectCode.ConnectionBroken.value || c && c.code && c.code.value === Module.DisconnectCode.GatewayProtocolError.value) ? (m++,
        b.debug("[Connection] Autoreconnecting... " + m + " / 20"),
        s && s.setArcCountAndTime(j.id, m, (new Date).getTime()),
        o = setTimeout(function() {
            a.Reconnect()
        }, n)) : (b.debug("[Connection] Disconnected"),
        s && s.setConnectionDisconnected(j.id, c, (new Date).getTime()),
        j.delegate.didDisconnect && j.delegate.didDisconnect(c),
        t(!1))
    }
    , y = function(a, c, d, e) {
        b.debug("[Connection] Login completed for server: " + a + ":" + c + " username: " + e + "\\" + d),
        j.delegate.loginCompleted && j.delegate.loginCompleted()
    }
    , z = function(a) {
        b.debug("[Connection] Connection health state changed: " + a),
        j.delegate.connectionHealthStateChanged && j.delegate.connectionHealthStateChanged(a)
    }
    , A = function(a) {
        b.debug("[Connection] Auth challenge"),
        a.getAuthType() !== Module.IAuthCompletion_AuthType.UsernameAndPassword && a.getAuthType() !== Module.IAuthCompletion_AuthType.ClaimsToken && (b.error("Only username & password authentication is currently supported."),
        j.delegate.error && j.delegate.error("Only username & password authentication is currently supported."),
        t(!1)),
        i = new CredentialRequest(a),
        j.delegate.credentialsNeeded && j.delegate.credentialsNeeded(i, j.id)
    }
    , B = function(a) {
        b.debug("[Connection] Request graphics sink delegate");
        var c = a.getSinkDescriptor();
        try {
            c.sinkType !== Module.GraphicsSinkDescriptor_SinkType.Canvas && (b.error("Only canvas graphics sinks are currently supported."),
            j.delegate.error && j.delegate.error("Only canvas graphics sinks are currently supported."));
            var d = new CanvasGraphicsSinkFactory(b);
            h = d.createGraphicsSink(c, l),
            h.isFocused = l,
            j.invalidateCanvas(),
            a.complete(h)
        } catch (e) {
            j.delegate.error && (b.error(e.message),
            j.delegate.error && j.delegate.error(e.message)),
            c["delete"](),
            t(!0)
        } finally {
            a["delete"]()
        }
    }
    , C = function(a, c, d) {
        b.debug("[Connection] Associating graphics sink with monitor");
        try {
            0 !== c && (b.error("Only one monitor is implemented"),
            j.delegate.error && j.delegate.error("Only one monitor is implemented.")),
            j.delegate.viewSizeChanged && j.delegate.viewSizeChanged(d.width(), d.height()),
            a.SetViewport(d)
        } catch (e) {
            b.error(e.message),
            j.delegate.error && j.delegate.error(e.message),
            t(!0)
        }
    }
    , D = function(a, c) {
        b.debug("[Connection] Unassociating graphics sink with monitor");
        try {
            0 !== c && (b.error("Only one monitor is implemented."),
            j.delegate.error && j.delegate.error("Only one monitor is implemented")),
            a.SetViewport(null )
        } catch (d) {
            b.error(d.message),
            j.delegate.error && j.delegate.error(d.message),
            t(!0)
        }
    }
    , E = function(a) {
        var c;
        if (b.log("[Connection] Rail activated message received: " + a),
        p = a,
        a)
            for (; q.length > 0; )
                c = q.pop(),
                b.log("[Connection] Launching pending app: " + c.applicationName),
                j.launchApplication(c.applicationName, c.applicationArguments, c.applicationWorkingDirectory)
    }
    , F = function(a) {
        r.push(a),
        e.RequestApplicationId(a),
        j.events.fireEventCallback(ConnectionEvent.WindowCreated, j, a)
    }
    , G = function(a) {
        var b = r.indexOf(a);
        b > -1 && r.splice(b, 1),
        j.events.fireEventCallback(ConnectionEvent.WindowDeleted, a)
    }
    , H = function(a, b, c) {
        j.events.fireEventCallback(ConnectionEvent.WindowIconChanged, a, b, c)
    }
    , I = function(a) {
        j.events.fireEventCallback(ConnectionEvent.WindowActivated, a)
    }
    , J = function(a, b) {
        j.events.fireEventCallback(ConnectionEvent.WindowTitleChanged, a, b)
    }
    , K = function(a, c) {
        b.debug("[Connection] Server reports that " + a + " has been launched with result " + c.value),
        j.events.fireEventCallback(ConnectionEvent.WindowLaunched, c),
        s && s.setConnectionConnected(j.id, (new Date).getTime(), c),
        0 !== c.value && j.delegate.error && j.delegate.error("Launching application failed with code " + c.value)
    }
    , L = function(a, c) {
        b.debug("[Connection] Window ID: " + a + " belongs to application id: " + c),
        j.events.fireEventCallback(ConnectionEvent.WindowApplicationIdChanged, a, c)
    }
    , M = function() {
        return c
    }
    , N = function(a) {
        b.debug("[Connection] ZOrder changed"),
        b.debug(a),
        j.events.fireEventCallback(ConnectionEvent.WindowOrderChanged, a)
    }
    , O = function(a) {
        b.debug("[Connection] Audio state changed to " + a)
    }
    , P = function() {
        j.delegate.showDefaultMousePointer && j.delegate.showDefaultMousePointer(!0)
    }
    , Q = function() {
        j.delegate.showDefaultMousePointer && j.delegate.showDefaultMousePointer(!1)
    }
    , R = function(a) {
        var b = 0;
        return a === MouseButton.Left ? b = Module.ButtonMask.Left : a === MouseButton.Middle ? b = Module.ButtonMask.Middle : a === MouseButton.Right ? b = Module.ButtonMask.Right : a === MouseButton.Button4 ? b = Module.ButtonMask.Button4 : a === MouseButton.Button5 && (b = Module.ButtonMask.Button5),
        b
    }
    , S = function() {
        m = 0,
        null  !== o && clearTimeout(o),
        o = null 
    }
    ;
    return j.delegate = new ConnectionDelegate,
    function() {
        a.SetOnConnecting(u),
        a.SetOnConnected(v),
        a.SetOnDisconnecting(w),
        a.SetOnDisconnected(x),
        a.SetOnLoginCompleted(y),
        a.SetOnConnectionHealthStateChanged(z),
        a.SetOnAuthChallenge(A),
        a.SetRequestGraphicsSinkDelegate(B),
        a.SetAssociateGraphicsSinkWithMonitorDelegate(C),
        a.SetUnassociateGraphicsSinkWithMonitor(D)
    }(),
    j.setMonitorLayout = function(b, c) {
        var d = new Module.MonitorList
          , e = new Module.Monitor
          , f = new Module.MonitorBounds;
        f.left = 0,
        f.top = 0,
        f.width = b,
        f.height = c,
        e.monitorBounds = f,
        e.fPrimary = !0,
        d.push_back(e),
        e["delete"](),
        f["delete"](),
        a.SetMonitorLayout(d),
        d["delete"]()
    }
    ,
    j.connect = function() {
        var c = {
            width: 800,
            height: 450
        };
        if (b.debug("[Connection] Connection.connect called"),
        k === ConnectionState.Disconnected || k === ConnectionState.Initialized) {
            s && (s.addTelemetryEntryForId(j.id),
            s.addMohorohost(j.id, j.eventLogUploadAddress),
            s.addTenantId(j.id, j.tenantId));
            try {
                j.delegate.monitorBounds ? c = j.delegate.monitorBounds() || c : b.log("[Connection] Monitorbounds delegate not found, falling back to default monitor bounds"),
                j.setMonitorLayout(c.width, c.height),
                j.clipboardHandler = new ClipboardHandler(j.delegate,b),
                d = a.QueryInputController({
                    OnMousePointerPositionChanged: j.delegate.mousePositionChanged,
                    OnMousePointerShapeChanged: j.delegate.mousePointerChanged,
                    OnShowDefaultMousePointer: P,
                    OnHideDefaultMousePointer: Q,
                    OnMultiTouchEnabled: j.delegate.multiTouchEnabled
                }),
                e = a.QueryRailController({
                    OnWindowCreated: F,
                    OnWindowDeleted: G,
                    OnWindowIconChanged: H,
                    OnWindowTitleChanged: J,
                    OnWindowActivated: I,
                    OnRailActivated: E,
                    OnApplicationLaunched: K,
                    OnWindowIdToApplicationIdChanged: L,
                    OnZOrderChanged: N
                }),
                g = null ,
                GlobalUtils.settings.featureSettings.enableClipboard && (g = a.QueryClipboardController({
                    OnRemoteClipboardChanged: j.clipboardHandler.remoteClipboardChanged,
                    OnGetRemoteClipboardContentComplete: j.clipboardHandler.getRemoteClipboardContentComplete,
                    OnSetRemoteClipboardFormatsComplete: j.clipboardHandler.setRemoteClipboardFormatsComplete,
                    OnClipboardContentRequest: j.clipboardHandler.onClipboardContentRequest
                })),
                f = null ,
                GlobalUtils.settings.featureSettings.enableAudio && (f = a.QueryAudioController({
                    GetAudioContext: M,
                    OnAudioStateChanged: O
                })),
                j.clipboardHandler.setClipboardController(g),
                a.Connect()
            } catch (h) {
                b.error("[Connection] Connection connect throws following exception"),
                b.error(h),
                j.events.fireEventCallback(ConnectionEvent.ConnectionConnectFailed, j, {
                    code: Module.DisconnectCode.UnknownError
                })
            }
        } else
            b.log("[Connection] Not calling rdpConnection.Connect since connection is in state: " + k)
    }
    ,
    j.disconnect = function(c) {
        0 === r.length || c ? a.Disconnect() && t(!1) : b.log("[Connection] Connection has open windows, skipping disconnection until all windows closed")
    }
    ,
    j.mouseMove = function(a, b) {
        d.SendMouseMove(a, b)
    }
    ,
    j.mouseDown = function(a, b, c) {
        d.SendMouseButton(a, b, R(c), Module.MouseEvent.Down)
    }
    ,
    j.mouseUp = function(a, b, c) {
        d.SendMouseButton(a, b, R(c), Module.MouseEvent.Up)
    }
    ,
    j.mouseWheel = function(a, b) {
        d.SendMouseWheel(a, b)
    }
    ,
    j.keyDown = function(a) {
        d.SendKeycode(a, Module.KeyEvent.Press)
    }
    ,
    j.keyUp = function(a) {
        d.SendKeycode(a, Module.KeyEvent.Release)
    }
    ,
    j.keyUnicodeDown = function(a) {
        d.SendUnicode(a, Module.KeyEvent.Press)
    }
    ,
    j.keyUnicodeUp = function(a) {
        d.SendUnicode(a, Module.KeyEvent.Release)
    }
    ,
    j.setRemoteClipboardsFormats = function(a) {
        g.SetRemoteClipboardFormats(a)
    }
    ,
    j.getRemoteClipboardContent = function(a) {
        g.GetRemoteClipboardContent(a)
    }
    ,
    j.isClipboardReady = function() {
        return g.IsClipboardProtocolReady()
    }
    ,
    j.setFocus = function(a) {
        l = a,
        h ? (h.isFocused = l,
        l && h.refreshWholeCanvas()) : b.log("[Connection] Graphics sink not set yet, cannot set focus to: " + l)
    }
    ,
    j.getFocus = function() {
        return l
    }
    ,
    j.launchApplication = function(a, c, d) {
        var f = {};
        p ? e.LaunchApplication(a, c, d) : (b.log("[Connection] Rail is not active adding application to pending list: " + a),
        f.applicationName = a,
        f.applicationArguments = c,
        f.applicationWorkingDirectory = d,
        q.push(f))
    }
    ,
    j.maximizeWindow = function(a) {
        e.WindowAction(a, Module.RailAction.Maximize)
    }
    ,
    j.minimizeWindow = function(a) {
        e.WindowAction(a, Module.RailAction.Minimize)
    }
    ,
    j.restoreWindow = function(a) {
        e.WindowAction(a, Module.RailAction.Restore)
    }
    ,
    j.closeWindow = function(a) {
        e.WindowAction(a, Module.RailAction.Close)
    }
    ,
    j.activateWindow = function(a) {
        e.WindowAction(a, Module.RailAction.Activate)
    }
    ,
    j.getState = function() {
        return k
    }
    ,
    j.invalidateCanvas = function() {
        var a;
        j.delegate.canvasNeeded && (a = j.delegate.canvasNeeded(),
        h && (h.setCanvas(a),
        h.refreshWholeCanvas()))
    }
    ,
    j.getWindowCount = function() {
        return r.length
    }
    ,
    j
}
  , ConnectionFactoryType = {
    RdpConnection: 0,
    MockConnection: 1,
    MockDefectConnection: 2
}
  , ConnectionFactory = function(a, b, c) {
    "use strict";
    var d = this
      , e = []
      , f = function(a) {
        var b, c;
        for (c in e)
            if (e.hasOwnProperty(c) && (b = e[c].properties,
            b.isEqual(a)))
                return e[c].connection;
        return null 
    }
      , g = function(a) {
        d.removeConnection(a)
    }
      , h = function(a) {
        d.removeConnection(a)
    }
    ;
    this.createConnection = function(d) {
        var i, j, k, l = null ;
        if (b.debug("[ConnectionFactory] Creating connection to: "),
        b.debug(d),
        i = f(d),
        null  === i) {
            if (a === ConnectionFactoryType.RdpConnection)
                k = Module.CorrelationID.CreateRandomCorrelationID(),
                j = Module.IConnection.Create(d.connectionSettings, k),
                l = new Connection(j,b,c),
                l.id = (new ObjectHelper).createGuid(),
                l.tenantId = d.tenantId,
                d.connectionSettings && (l.eventLogUploadAddress = d.connectionSettings.EventLogUploadAddress);
            else if (a === ConnectionFactoryType.MockConnection)
                j = new MockRdpConnection(d.connectionSettings),
                l = new MockConnection(j,b);
            else {
                if (a !== ConnectionFactoryType.MockDefectConnection)
                    return b.error("[ConnectionFactory] unexpected connection factory type"),
                    null ;
                j = new MockRdpConnection(d.connectionSettings),
                j.Connect = function() {
                    throw "Mock connection failure"
                }
                ,
                l = new MockConnection(j,b,c)
            }
            e.push({
                connection: l,
                properties: d
            }),
            l.events.subscribe(ConnectionEvent.ConnectionDestroyed, h),
            l.events.subscribe(ConnectionEvent.ConnectionConnectFailed, g),
            l.isExistingConnection = !1
        } else
            b.log("[ConnectionFactory] Existing connection found "),
            l = i,
            l.isExistingConnection = !0;
        return l
    }
    ,
    this.disconnectAllConnections = function() {
        for (var a = e.shift(); a && a.connection; )
            a.connection.disconnect(!0),
            a = e.shift()
    }
    ,
    this.removeConnection = function(a) {
        var b;
        for (b in e)
            if (e.hasOwnProperty(b) && e[b].connection === a) {
                e.splice(b, 1);
                break
            }
    }
    ,
    this.invalidateCanvasForActiveConnections = function() {
        var a;
        for (a in e)
            e.hasOwnProperty(a) && e[a].connection.invalidateCanvas()
    }
    ,
    this.hasActiveConnections = function() {
        return 0 !== e.length
    }
}
  , SessionDisconnectCode = function() {
    "use strict";
    var a = {};
    return a.string = function(a) {
        var b = Module.DisconnectCode.UnknownError;
        switch (a && a.code && (b = a.code),
        b) {
        case Module.DisconnectCode.AccountDisabled:
            return Strings.string.SESSION_DISCONNECT_CODE_ACCOUNT_DISABLED;
        case Module.DisconnectCode.AccountExpired:
            return Strings.string.SESSION_DISCONNECT_CODE_ACCOUNT_EXPIRED;
        case Module.DisconnectCode.AccountLockedOut:
            return Strings.string.SESSION_DISCONNECT_CODE_ACCOUNT_LOCKED_OUT;
        case Module.DisconnectCode.AccountRestriction:
            return Strings.string.SESSION_DISCONNECT_CODE_ACCOUNT_RESTRICTED;
        case Module.DisconnectCode.ArcFailed:
            return Strings.string.SESSION_DISCONNECT_CODE_AUTO_RECONNECT_FAILED;
        case Module.DisconnectCode.CantUpgradeLicense:
            return Strings.string.SESSION_DISCONNECT_CODE_CANT_UPGRADE_LICENSE;
        case Module.DisconnectCode.CertExpired:
            return Strings.string.SESSION_DISCONNECT_CODE_CERT_EXPIRED;
        case Module.DisconnectCode.CertMismatch:
            return Strings.string.SESSION_DISCONNECT_CODE_CERT_MISMATCH;
        case Module.DisconnectCode.CertValidationFailed:
            return Strings.string.SESSION_DISCONNECT_CODE_GENERIC_PROTOCOL_ERROR;
        case Module.DisconnectCode.ConnectionBroken:
            return Strings.string.SESSION_DISCONNECT_CODE_CONNECTION_BROKEN;
        case Module.DisconnectCode.ConnectionTimeout:
            return Strings.string.SESSION_DISCONNECT_CODE_CONNECTION_TIMEOUT;
        case Module.DisconnectCode.DecompressionFailed:
            return Strings.string.SESSION_DISCONNECT_CODE_DECOMPRESSION_FAILED;
        case Module.DisconnectCode.EncryptionFailed:
            return Strings.string.SESSION_DISCONNECT_CODE_ENCRYPTION_FAILED;
        case Module.DisconnectCode.GenericByServer:
            return Strings.string.SESSION_DISCONNECT_CODE_GENERIC_BY_SERVER;
        case Module.DisconnectCode.GenericLicenseError:
            return Strings.string.SESSION_DISCONNECT_CODE_GENERIC_LICENSE_ERROR;
        case Module.DisconnectCode.GenericNetworkError:
            return Strings.string.SESSION_DISCONNECT_CODE_GENERIC_NETWORK_ERROR;
        case Module.DisconnectCode.GenericProtocolError:
            return Strings.string.SESSION_DISCONNECT_CODE_GENERIC_PROTOCOL_ERROR;
        case Module.DisconnectCode.GenericSecurityError:
            return Strings.string.SESSION_DISCONNECT_CODE_GENERIC_SECURITY_ERROR;
        case Module.DisconnectCode.HybridRequired:
            return Strings.string.SESSION_DISCONNECT_HYBRID_REQUIRED;
        case Module.DisconnectCode.IdleTimeout:
            return Strings.string.SESSION_DISCONNECT_CODE_IDLE_TIMEOUT;
        case Module.DisconnectCode.InitFipsFailed:
            return Strings.string.SESSION_DISCONNECT_CODE_INIT_FIPS_FAILED;
        case Module.DisconnectCode.InvalidLicense:
            return Strings.string.SESSION_DISCONNECT_CODE_INVALID_LICENSE;
        case Module.DisconnectCode.InvalidLogonHours:
            return Strings.string.SESSION_DISCONNECT_CODE_INVALID_LOGON_HOURS;
        case Module.DisconnectCode.InvalidWorkStation:
            return Strings.string.SESSION_DISCONNECT_CODE_INVALID_WORK_STATION;
        case Module.DisconnectCode.KrbUser2UserRequired:
            return Strings.string.SESSION_DISCONNECT_CODE_KERBEROS_USER_2_USER_REQUIRED;
        case Module.DisconnectCode.LogonTimeout:
            return Strings.string.SESSION_DISCONNECT_CODE_LOGON_TIMEOUT;
        case Module.DisconnectCode.LogonTypeNotGranted:
            return Strings.string.SESSION_DISCONNECT_CODE_LOGON_TYPE_NOT_GRANTED;
        case Module.DisconnectCode.LoopbackUnsupported:
            return Strings.string.SESSION_DISCONNECT_CODE_LOOPBACK_UNSUPPORTED;
        case Module.DisconnectCode.NoLicenseAvailable:
            return Strings.string.SESSION_DISCONNECT_CODE_NO_LICENSE_AVAILABLE;
        case Module.DisconnectCode.NoLicenseServer:
            return Strings.string.SESSION_DISCONNECT_CODE_NO_LICENSE_SERVER;
        case Module.DisconnectCode.NoRemoteConnectionLicense:
            return Strings.string.SESSION_DISCONNECT_CODE_NO_REMOTE_CONNECTION_LICENSE;
        case Module.DisconnectCode.NoSuchUser:
            return Strings.string.SESSION_DISCONNECT_CODE_NO_SUCH_USER;
        case Module.DisconnectCode.PasswordExpired:
            return Strings.string.SESSION_DISCONNECT_CODE_PASSWORD_EXPIRED;
        case Module.DisconnectCode.PasswordMustChange:
            return Strings.string.SESSION_DISCONNECT_CODE_PASSWORD_MUST_CHANGE;
        case Module.DisconnectCode.RemotingDisabled:
            return Strings.string.SESSION_DISCONNECT_CODE_REMOTING_DISABLED;
        case Module.DisconnectCode.ReplacedByOtherConnection:
            return Strings.string.SESSION_DISCONNECT_CODE_REPLACED_BY_OTHER_CONNECTION;
        case Module.DisconnectCode.ServerDeniedConnection:
            return Strings.string.SESSION_DISCONNECT_CODE_SERVER_DENIED_CONNECTION;
        case Module.DisconnectCode.ServerInsufficientPrivileges:
            return Strings.string.SESSION_DISCONNECT_CODE_SERVER_INSUFFICIENT_PRIVILEGES;
        case Module.DisconnectCode.ServerNameLookupFailed:
            return Strings.string.SESSION_DISCONNECT_CODE_SERVER_NAME_LOOPUP_FAILED;
        case Module.DisconnectCode.ServerOutOfMemory:
            return Strings.string.SESSION_DISCONNECT_CODE_SERVER_OUT_OF_MEMORY;
        case Module.DisconnectCode.ServerTool:
            return Strings.string.SESSION_DISCONNECT_CODE_SERVER_TOOL;
        case Module.DisconnectCode.SSLHandshakeFailed:
            return Strings.string.SESSION_DISCONNECT_CODE_SSL_HANDSHAKE_FAILED;
        case Module.DisconnectCode.TimeSkew:
            return Strings.string.SESSION_DISCONNECT_CODE_TIME_SKEW;
        case Module.DisconnectCode.UnknownError:
            return Strings.string.SESSION_DISCONNECT_CODE_UNKNOWN_ERROR;
        case Module.DisconnectCode.UserInitiated:
            return Strings.string.SESSION_DISCONNECT_CODE_USER_INITIATED;
        case Module.DisconnectCode.VersionMismatch:
            return Strings.string.SESSION_DISCONNECT_CODE_VERSION_MISMATCH;
        case Module.DisconnectCode.GatewayProtocolError:
            return Strings.string.SESSION_DISCONNECT_CODE_GATEWAY_PROTOCOL_ERROR;
        case Module.DisconnectCode.GatewayTimeout:
            return Strings.string.SESSION_DISCONNECT_CODE_GATEWAY_TIMEOUT;
        default:
            return Strings.string.SESSION_DISCONNECT_CODE_UNKNOWN_ERROR
        }
    }
    ,
    a
}()
  , AdalType = {
    Mock: 0,
    Production: 1
}
  , AdalTokenCompletion = function(a, b, c) {
    "use strict";
    this.complete = function() {
        a && a()
    }
    ,
    this.cancel = function() {
        b && b()
    }
    ,
    this.getToken = function() {
        return c
    }
}
  , Adal = function(a, b, c, d, e) {
    "use strict";
    var f = {}
      , g = {}
      , h = null 
      , i = ""
      , j = null 
      , k = ""
      , l = null 
      , m = !1
      , n = function(a) {
        return a.indexOf("#/") > -1 ? a = a.substring(a.indexOf("#/") + 2) : a.indexOf("#") > -1 && (a = a.substring(1)),
        a
    }
      , o = function(a) {
        return e.instance + "/authorize?response_type=token&client_id=" + e.clientId + "&resource=" + encodeURIComponent(e.resource) + "&redirect_uri=" + encodeURIComponent(e.redirectUri) + "&state=" + a
    }
      , p = function() {
        return e.instance + "/logout?post_logout_redirect_uri=" + encodeURIComponent(e.postLogoutUri)
    }
      , q = function() {
        return Math.round((new Date).getTime() / 1e3)
    }
      , r = function(a) {
        var b, c = /\+/g, d = /([^&=]+)=?([^&]*)/g, e = function(a) {
            return decodeURIComponent(a.replace(c, " "))
        }
        , f = {};
        for (b = d.exec(a); b; )
            f[e(b[1])] = e(b[2]),
            b = d.exec(a);
        return f
    }
      , s = function(a) {
        var b = /^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/
          , d = b.exec(a);
        if (!d || d.length < 4)
            return c.debug("[Adal] The returned id_token is not parseable."),
            null ;
        var e = {
            header: d[1],
            JWSPayload: d[2],
            JWSSig: d[3]
        };
        return e
    }
      , t = function(b) {
        return b = b.replace(/-/g, "+").replace(/_/g, "/"),
        a.atob ? decodeURIComponent(encodeURI(a.atob(b))) : (c.error("[Adal] Browser is not supported"),
        null )
    }
      , u = function(a) {
        var b = s(a);
        if (null  === b)
            return null ;
        try {
            var d = b.JWSPayload
              , e = t(d);
            return null  === e ? (c.error("[Adal] The returned id_token could not be base64 url safe decoded."),
            null ) : JSON.parse(e)
        } catch (f) {
            c.error("[Adal] The returned id_token could not be decoded: ")
        }
        return null 
    }
      , v = function() {
        var a = d.find("token_state");
        if (a) {
            var b = d.find("start_page");
            c.debug("[Adal] Start page is " + b.value),
            b && (c.debug("[Adal] Login completed redirecting to " + b.value),
            f.onRouteRedirect && f.onRouteRedirect(b.value)),
            d.remove("token_state"),
            d.remove("start_page")
        }
    }
    ;
    return f.onRouteRedirect = null ,
    f.onFullPageRedirect = null ,
    f.onCurrentPage = null ,
    f.login = function(a) {
        var e, g;
        c.log("[Adal] Adal login called for start page: " + a),
        e = (new ObjectHelper).createGuid(),
        g = o(e),
        c.debug("[Adal] Getting access token from " + g),
        b === AdalType.Production ? f.onFullPageRedirect && f.onFullPageRedirect(g) : c.log("[Adal] ADAL Library is in Mock mode, no redirection and actual login will happen"),
        d.save({
            id: "token_state",
            value: e
        }),
        d.save({
            id: "start_page",
            value: a
        }),
        d.save({
            id: "logging_in",
            value: !0
        })
    }
    ,
    f.logout = function() {
        var a;
        f.clearCache(),
        a = p(),
        c.debug("[Adal] Logging out using " + a),
        b === AdalType.Production && f.onFullPageRedirect && f.onFullPageRedirect(a)
    }
    ,
    f.getCachedToken = function() {
        return b !== AdalType.Production && (h = "MockToken",
        l = q() + 500),
        l && l <= q() + 120 ? (c.debug("[Adal] Token expired, removing cache"),
        d.remove("token_state"),
        null ) : h ? h : null 
    }
    ,
    f.getCachedUser = function() {
        var a = !1;
        return i && (a = !0),
        b === AdalType.Mock && (a = !0),
        {
            email: i,
            isAuthenticated: a,
            userName: k,
            idType: j
        }
    }
    ,
    f.getError = function() {
        var a = d.find("adal_error");
        return a ? a.value : null 
    }
    ,
    f.clearCache = function() {
        h = null ,
        i = "",
        j = null ,
        k = "",
        l = null ,
        d.remove("adal_error"),
        d.remove("start_page"),
        d.remove("token_state"),
        d.remove("logging_in")
    }
    ,
    f.analyzePath = function(a) {
        "?" === a[0] ? a = a.substring(1) : "#" === a[0] && (a = n(a)),
        g = r(a)
    }
    ,
    f.isRedirectedFromLoginPage = function() {
        return g.hasOwnProperty("error_description") || g.hasOwnProperty("access_token") || g.hasOwnProperty("id_token")
    }
    ,
    f.completeLogin = function() {
        var a = null ;
        d.remove("logging_in"),
        c.debug("[Adal] saving hash"),
        c.debug(g),
        g.hasOwnProperty("error_description") ? (c.error("[Adal] Error " + g.error + " " + g.error_description),
        f.clearCache(),
        d.save({
            id: "adal_error",
            value: g.error + " " + g.error_description
        })) : g.hasOwnProperty("access_token") && (c.debug("[Adal] Access token is " + g.access_token),
        h = g.access_token,
        i = "",
        k = "",
        d.remove("adal_error"),
        l = q() + parseInt(g.expires_in, 10),
        a = u(g.access_token),
        c.debug("[Adal] Token will expire in " + new Date(1e3 * l)),
        a && (i = a.upn || a.email,
        j = a.oid ? "OrgId" : "LiveId",
        a.given_name && a.family_name ? k = a.given_name + " " + a.family_name : a.name && (k = a.name)),
        b === AdalType.Production && v())
    }
    ,
    f.acquireToken = function() {
        var b = f.getCachedToken()
          , c = a.location.pathname
          , d = function() {
            b || f.isLoginInterrupted() || (f.onCurrentPage && (c = f.onCurrentPage()),
            f.login(c))
        }
        ;
        return new AdalTokenCompletion(d,function() {}
        ,b)
    }
    ,
    f.expireToken = function() {
        console.log("Expiring token"),
        l = Math.round((new Date).getTime() / 1e3) + parseInt(-3599, 10)
    }
    ,
    f.isLoginInterrupted = function() {
        var a = d.find("logging_in");
        return a && (m = a.value,
        d.remove("logging_in")),
        m
    }
    ,
    f
}
  , AdalDownloader = function(a, b) {
    "use strict";
    this.download = function(c, d, e) {
        var f, g = function(a, c) {
            b.debug("[AdalDownloader] Download completed for " + d + " with status code: " + c),
            e && e(a, c)
        }
        , h = function(c, f) {
            b.debug("[AdalDownloader] Resource downloaded for " + d),
            f === HttpStatusCodes.Success ? (a.onComplete = g,
            a.get(d, null , !0)) : (b.error("[AdalDownloader] Download failed with status code: " + f),
            e && e(null , f))
        }
        ;
        f = d.toLowerCase().indexOf("webfeed.aspx") > -1 ? d.replace(/Feed/gi, "FeedLogin") : d.replace(/FeedDiscovery/gi, "FeedDiscoveryLogin"),
        b.log("[AdalDownloader] Downloading resource url: " + f),
        a.onComplete = h,
        a.get(f, {
            Authorization: "MS-WARA-CLAIMS ADAL-OOB=" + c
        }, !0)
    }
}
  , DataConverter = function() {
    "use strict";
    var a = {}
      , b = 0;
    return a.getUint16LE = function(a) {
        return new Uint16Array([new DataView(a.buffer).getUint16(b, !0)])
    }
    ,
    a.getUint32LE = function(a) {
        return new Uint32Array([new DataView(a.buffer).getUint32(b, !0)])
    }
    ,
    a
}
  , DeviceInfo = function(a) {
    "use strict";
    var b, c, d = {};
    return function(a) {
        b = void 0 === a ? new UAParser : new UAParser(a),
        c = b.getResult()
    }(a),
    d.getResultObject = function() {
        return c
    }
    ,
    d.getBrowserInfo = function() {
        return c.browser
    }
    ,
    d.getDeviceInfo = function() {
        return c.device
    }
    ,
    d.getOSInfo = function() {
        return c.os
    }
    ,
    d.getEngineInfo = function() {
        return c.engine
    }
    ,
    d.getUAString = function() {
        return c.ua
    }
    ,
    d
}
  , Telemetry = function(a, b, c, d, e, f, g, h) {
    "use strict";
    function i() {
        var a = q.getCachedUser();
        a && (a = a.email);
        var b = sha256(a || "defaultuser@defaultemail.com");
        return m.setActivityId(b),
        b
    }
    var j, k, l, m, n, o, p, q, r, s, t, u, v = {}, w = 0, x = 0;
    return function(a, b, c, d, e) {
        o = 0,
        p = 0,
        k = new DeviceInfo,
        r = e,
        u = "undefined" != typeof d ? d : !1,
        s = "undefined" != typeof c ? c : !0,
        q = b,
        l = void 0 === k.getDeviceInfo().type ? "unknown" : k.getDeviceInfo().type,
        m = new Envelope,
        n = new DomainEnvelope(l),
        j = a,
        t = []
    }(a, b, c, d, e),
    v.setAraFeedAppCountForTelemetry = function(a, b) {
        w = a,
        x = b
    }
    ,
    v.sendUsage = function(a) {
        i();
        var b = new TelemetryEvent;
        b.parameter("sendUsage", a),
        v.collect(b)
    }
    ,
    v.collectInitialSubscriptionRefresh = function(a) {
        var b = i().substring(32).match(/.{1,2}/g)
          , c = new TelemetryEvent;
        m.setId(),
        m.setChannel(),
        b = b.slice(0, 4).join("") + "-" + b.slice(4, 6).join("") + "-" + b.slice(6, 8).join("") + "-" + b.slice(8, 10).join("") + "-" + b.slice(10, b.length).join(""),
        c.type = "IFXEvent",
        c.host = h.slice(0, h.indexOf("mohoroId") + 9) + a.tenantId,
        c.parameter("MetricType", "QoS,MDM").parameter("OperationName", "Subscription").parameter("ResultType", a.resultType).parameter("LatencyMS", a.endTime - a.startTime).parameter("ActivityId", b).parameter("TenantId", a.tenantId).parameter("ErrorType", "None").parameter("SubscriptionType", "Initial").parameter("AppId", "html5").parameter("AppVer", r),
        v.collect(c)
    }
    ,
    v.collectSubsequentSubscriptionRefresh = function(a) {
        var b = i().substring(32).match(/.{1,2}/g)
          , c = new TelemetryEvent;
        m.setId(),
        m.setChannel(),
        b = b.slice(0, 4).join("") + "-" + b.slice(4, 6).join("") + "-" + b.slice(6, 8).join("") + "-" + b.slice(8, 10).join("") + "-" + b.slice(10, b.length).join(""),
        c.type = "IFXEvent",
        c.host = h.slice(0, h.indexOf("mohoroId") + 9) + a.tenantId,
        c.parameter("MetricType", "QoS,MDM").parameter("OperationName", "Subscription").parameter("ResultType", a.resultType).parameter("LatencyMS", a.endTime - a.startTime).parameter("ActivityId", b).parameter("TenantId", a.tenantId).parameter("ErrorType", "None").parameter("SubscriptionType", "Subsequent").parameter("AppId", "html5").parameter("AppVer", r),
        v.collect(c)
    }
    ,
    v.collectIFXSessionLaunch = function(a) {
        i();
        var b = new TelemetryEvent;
        m.setId(),
        m.setChannel(),
        b.type = "IFXEvent",
        b.host = a.mohoroHost;
        var c = a.finishTime - a.credTime;
        0 === a.credTime && (c = a.finishTime - a.startTime),
        b.parameter("MetricType", "QoS,MDM").parameter("OperationName", "Connection").parameter("ResultType", 0 === a.success ? "Failure" : "Success").parameter("LatencyMS", c).parameter("ActivityId", a.connectionId).parameter("TenantId", a.tenantId).parameter("ErrorType", "None").parameter("ErrorCode", a.disconnectCode).parameter("ExtendedErrorCode", a.extendedErrorCode).parameter("UserInitiatedDisconnect", a.userInitiated).parameter("AppId", "html5").parameter("AppVer", r),
        v.collect(b)
    }
    ,
    v.collectFeedback = function(a) {
        i();
        var b = new TelemetryEvent("feedback","1");
        b.parameter("Feedback", a),
        v.collect(b)
    }
    ,
    v.collectSessionLaunch = function(a) {
        i();
        var b = new TelemetryEvent("sessionLaunch","1")
          , c = a.finishTime - a.credTime
          , d = a.bookmarkId.match(/.{1,2}/g)
          , e = 6e4
          , f = a.durationFinishTime - a.durationStartTime;
        d = d.slice(0, 4).join("") + "-" + d.slice(4, 6).join("") + "-" + d.slice(6, 8).join("") + "-" + d.slice(8, 10).join("") + "-" + d.slice(10, d.length).join(""),
        0 === a.credTime && (c = a.finishTime - a.startTime),
        (0 > f || 0 === a.durationStartTime || 0 === a.durationFinishTime) && (f = 0),
        b.parameter("success", a.success).parameter("sourceType", a.sourceType).parameter("simpleDisconnectCode", a.simpleDisconnectCode).parameter("userInitiated", a.userInitiated).parameter("networkType", a.networkType).parameter("clientStackDisconnectCode", a.clientStackDisconnectCode).parameter("serverStackDisconnectCode", a.serverStackDisconnectCode).parameter("hostAddressType", a.hostAddressType).parameter("samev4subnet", a.samev4subnet).parameter("connectionId", d).parameter("hostCreds", a.hostCreds).parameter("gwyCreds", a.gwyCreds).parameter("launchTime", c).parameter("correlationId", a.connectionId).parameter("disconnectError", a.disconnectError).parameter("gwCredentialSource", a.gwCredentialSource).parameter("Source", a.Source).parameter("howCreated", a.sourceType).parameter("howLaunched", a.launchType).parameter("minutes", Math.floor(f / e)).parameter("arcTriggered", a.arcTriggered).parameter("arcSuccess", a.arcSuccess).parameter("arcAvgTimeToConnect", a.avgTimeToConnect),
        v.collect(b)
    }
    ,
    v.collectFullscreenEnabled = function(a) {
        i();
        var b = new TelemetryEvent("uiInteractions","2");
        b.parameter("name", "fullscreenInfo").parameter("enabled", "1").parameter("duration", a + "s"),
        v.collect(b)
    }
    ,
    v.collectAppLaunchLocation = function(a) {
        i();
        var b = new TelemetryEvent("uiInteractions","2");
        b.parameter("name", "appLaunchLocation").parameter("location", a),
        v.collect(b)
    }
    ,
    v.collectDisconnectClicked = function() {
        i();
        var a = new TelemetryEvent("uiInteractions","2");
        a.parameter("name", "backToHome").parameter("initiated", "1"),
        v.collect(a)
    }
    ,
    v.collectClipboardTelemetry = function(a, b) {
        i();
        var c = new TelemetryEvent("uiInteractions","2");
        c.parameter("name", "clipboardInfo").parameter("clipboardClicked", a).parameter("clipboardUsed", b),
        v.collect(c)
    }
    ,
    v.collectDailyDeviceInfo = function() {
        i();
        var a = new TelemetryEvent("dailyDeviceInfo","1")
          , b = k.getDeviceInfo().model || window.navigator.platform
          , c = k.getDeviceInfo().vendor || window.navigator.vendor;
        void 0 === b && (b = "nonTouchDevice"),
        void 0 === c && (c = "nonTouchDevice"),
        a.parameter("model", b).parameter("manufacturer", c).parameter("osName", k.getOSInfo().name).parameter("osVersion", k.getOSInfo().version).parameter("browserName", k.getBrowserInfo().name).parameter("browserVersion", k.getBrowserInfo().version),
        v.collect(a)
    }
    ,
    v.collectDailyResourceInfo = function() {
        i();
        var a = new TelemetryEvent("dailyResourceInfo","1");
        a.parameter("localDesktopCount", "N/A").parameter("feedCount", "N/A").parameter("publishedDesktopCount", "N/A").parameter("publishedAppCount", "N/A").parameter("feedCountAra", x).parameter("feedCountAraDemo", "N/A").parameter("araDesktopCount", "N/A").parameter("araAppCount", w).parameter("isMDMMAMmanaged", "N/A").parameter("requirePIN", "N/A"),
        v.collect(a)
    }
    ,
    v.collectQOEEvent = function(a) {
        i();
        var b = new TelemetryEvent("araConnectionQuality",2).parameter("action", a.action).parameter("experience", a.experience).parameter("audioIssues", a.audioIssues).parameter("touchAndMouseIssues", a.touchAndMouseIssues).parameter("delays", a.delays).parameter("screenResolutionIssues", a.screenResolutionIssues).parameter("others", a.others).parameter("details", a.details);
        v.collect(b)
    }
    ,
    v.collectTrace = function(a, b, c, d, e) {
        m.setLevel(c),
        m.setCorrelationId(d);
        var f = new TelemetryEvent(a,"1").parameter("eventTrace", b);
        v.collect(f, e)
    }
    ,
    v.collectNow = function(a, b) {
        var c, d, e = ++o, h = null ;
        "IFXEvent" === a.type ? (c = n.IFXWrap(a),
        h = a.host ? a.host : "https://telemetry.remoteapp.windowsazure.com/webupload?mohoroId=00000000-0000-0000-0000-000000000000") : (c = n.wrap(a, p, e),
        h = "undefined" != typeof b ? b : g),
        d = m.encodeEvent(new Date, c),
        f.debug("[Telemetry] Telemetry event received for\n" + c + "\nto " + h),
        u === !0 && (j.collect(d, h),
        f.debug("[Telemetry] Telemetry event sent."))
    }
    ,
    v.collect = function(a, b) {
        null  === s ? t.push({
            event: a,
            host: b
        }) : v.collectNow(a, b)
    }
    ,
    v.setEnabled = function(a, b) {
        var c, d = s;
        if (s = a,
        d !== s && b !== !0 && (u = !0,
        v.sendUsage(s)),
        u = a,
        null  === d && a) {
            for (c = 0; c < t.length; c++)
                v.collectNow(t[c].event, t[c].host);
            t = []
        }
    }
    ,
    v
}
  , TelemetryEvent = function(a, b) {
    "use strict";
    var c = {
        type: null 
    }
      , d = {
        eventName: a,
        eventVer: b
    };
    return c.parameter = function(a, b) {
        return "undefined" == typeof b ? d[a] = d[a] ? d[a] : "" : "boolean" == typeof b ? d[a] = b ? "1" : "0" : b.description ? d[a] = b.description : d[a] = b,
        c
    }
    ,
    c.description = function(a) {
        var b, c = "", e = !0, f = a || ",";
        for (b in d)
            d.hasOwnProperty(b) && "undefined" != typeof b && ("eventName" !== b && "eventVer" !== b || void 0 !== d[b]) && (e || (c += f),
            e = !1,
            c += b + "=" + d[b]);
        return c
    }
    ,
    c
}
  , DomainEnvelope = function(a) {
    "use strict";
    var b = {}
      , c = 2
      , d = "html5";
    return b.wrap = function(b, e, f) {
        return "ver=" + c + ",sessionID=" + e + ",uploadId=" + f + ",appId=" + d + ",screenType=" + a + "," + b.description(",")
    }
    ,
    b.IFXWrap = function(a) {
        return a.description(";")
    }
    ,
    b
}
  , Envelope = function(a) {
    "use strict";
    function b(a, b) {
        return (a + b).slice(-a.length)
    }
    function c(a) {
        var c = 1e7
          , d = 11644473600
          , e = (Math.floor(a.getTime() / 1e3) + d) * c
          , f = e.toString(16)
          , g = b("0000000000000000", f);
        return g.match(/.{1,2}/g).reverse().map(function(a) {
            return "0x" + a
        })
    }
    function d(a) {
        var b = a.substring(32).match(/.{1,2}/g);
        return new Uint8Array(b.map(function(a) {
            return "0x" + a
        }))
    }
    function e(a) {
        var b, c = new Uint16Array(a.length);
        for (b = 0; b < a.length; b++)
            c[b] = a.charCodeAt(b);
        return c
    }
    var f, g, h, i, j, k, l, m, n, o, p, q = {}, r = {
        ClientEvents: {
            RCEId: 1501,
            channel: 17
        },
        IFXEvents: {
            RCEId: 2e3,
            channel: 16
        }
    };
    return function(a) {
        n = new DataConverter,
        o = "application/octet-stream",
        p = {
            type: o
        },
        f = new Uint8Array([4]),
        g = new Uint8Array(["0x28", "0xaa", "0x95", "0xbb", "0xd4", "0x44", "0x47", "0x19", "0xa3", "0x6f", "0x40", "0x46", "0x21", "0x68", "0x12", "0x7e"]),
        h = new Uint16Array([r.ClientEvents.RCEId]),
        i = new Uint8Array([0, r.ClientEvents.channel, 4, 0]),
        j = new Uint16Array([100]),
        m = null ,
        k = new Uint32Array([0, 0]),
        void 0 !== a && (l = a)
    }(a),
    q.encodeEvent = function(a, b) {
        var d, o = new Uint32Array([2 * (b.length + 1)]), r = n.getUint32LE(o), s = n.getUint16LE(h), t = n.getUint16LE(j), u = n.getUint32LE(new Uint32Array([1])), v = new Uint8Array([1]), w = new Uint16Array([0]), x = n.getUint16LE(w), y = new Uint8Array(c(a)), z = m;
        return null  === m && (z = l),
        d = new Blob([f, g, s, i, t, k, y, z, u, v, r, e(b), x],p),
        q.resetEnvelopeFields(),
        d
    }
    ,
    q.resetEnvelopeFields = function() {
        i[1] = r.ClientEvents.channel,
        i[2] = 4,
        h[0] = r.ClientEvents.RCEId,
        m = null 
    }
    ,
    q.setActivityId = function(a) {
        l = d(a)
    }
    ,
    q.setCorrelationId = function(a) {
        var b = a.split("-").join("").match(/.{1,2}/g).map(function(a) {
            return "0x" + a
        })
          , c = b.slice(0, 4)
          , d = b.slice(4, 6)
          , e = b.slice(6, 8)
          , f = c.reverse().concat(d.reverse(), e.reverse(), b.slice(8));
        m = new Uint8Array(f)
    }
    ,
    q.setLevel = function(a) {
        i[2] = a
    }
    ,
    q.setChannel = function(a) {
        "undefined" == typeof a || null  === a ? i[1] = r.IFXEvents.channel : i[1] = a
    }
    ,
    q.setId = function(a) {
        "undefined" == typeof a || null  === a ? h[0] = r.IFXEvents.RCEId : h[0] = a
    }
    ,
    q
}
  , TelemetryHttpsTracker = function(a, b) {
    "use strict";
    function c() {
        var b = f.shift();
        void 0 !== b && a.post(b.url || e, b.headers, b.data)
    }
    var d = {}
      , e = "https://telemetry.remoteapp.windowsazure.com/webupload?mohoroId=00000000-0000-0000-0000-000000000000&tmtType=1"
      , f = [];
    return function() {
        window.setInterval(function() {
            c()
        }, b)
    }(),
    a.onComplete = function() {
        window.setTimeout(function() {
            c()
        }, 250)
    }
    ,
    a.onError = function() {}
    ,
    d.collect = function(a, b) {
        f.push({
            url: b,
            headers: {
                "Content-type": "application/octet-stream"
            },
            data: a
        })
    }
    ,
    d.flush = function() {
        c()
    }
    ,
    d
}
  , TelemetryManager = function(a, b, c, d) {
    "use strict";
    var e, f, g = {}, h = 108e5, i = 864e5, j = "lastCollectTimestamp", k = "telemetryConsentStatus" + c.getCachedUser().email, l = !0, m = "initialSubscription", n = 0, o = {
        id: j,
        timestamp: 0
    }, p = {}, q = {
        time: 0
    }, r = function(b) {
        var c = g.getSubscriptionRefreshStatus(m);
        c.value === !0 ? a.collectInitialSubscriptionRefresh(b) : a.collectSubsequentSubscriptionRefresh(b)
    }
    ;
    return g.getTelemetryConsentStatus = function(a) {
        var b = d.find(a);
        return b ? b.value : !0
    }
    ,
    g.setTelemetryConsentStatus = function(a) {
        d.save(a)
    }
    ,
    g.getTelemetryCollectTime = function(a) {
        return d.find(a)
    }
    ,
    g.saveTelemetryCollectTime = function(a) {
        d.save(a)
    }
    ,
    g.setEnabled = function(b, c) {
        a.setEnabled(b, c)
    }
    ,
    g.getSubscriptionRefreshStatus = function(a) {
        var b = d.find(a);
        return null  === b || void 0 === b || b === !0 ? (d.save({
            id: a,
            value: !1
        }),
        {
            value: !0
        }) : b
    }
    ,
    g.setRefreshStartTime = function(a) {
        q.time = a
    }
    ,
    g.setRefreshStartTimeForInvitation = function(a, b) {
        for (var c = 0; c < a.length; c++)
            q[a[c].id] = {
                startTime: b,
                endTime: 0,
                resultType: "Failure",
                tenantId: ""
            }
    }
    ,
    g.setInvitationRefreshError = function() {
        var a = {};
        a.endTime = 0,
        a.startTime = 0,
        a.resultType = "Failure",
        a.tenantId = 0,
        r(a)
    }
    ,
    g.setFeedRefreshCompleteTime = function(a, b) {
        q[a] ? (q[a].endTime = b,
        q[a].resultType = "Success",
        q[a].tenantId = a) : (q[a] = {},
        q[a].startTime = q.time,
        q[a].endTime = b,
        q[a].resultType = "Success",
        q[a].tenantId = a),
        r(q[a]),
        delete q[a]
    }
    ,
    g.addTelemetryEntryForId = function(a) {
        p[a] = {},
        p[a].success = 0,
        p[a].sourceType = "publishedAppAra",
        p[a].simpleDisconnectCode = "None",
        p[a].userInitiated = 1,
        p[a].networkType = "None",
        p[a].clientStackDisconnectCode = 0,
        p[a].serverStackDisconnectCode = 0,
        p[a].hostAddressType = "None",
        p[a].samev4subnet = "None",
        p[a].connectionId = a,
        p[a].hostCreds = "None",
        p[a].gwyCreds = "None",
        p[a].gwCredentialSource = "None",
        p[a].startTime = 0,
        p[a].credTime = 0,
        p[a].finishTime = 0,
        p[a].durationStartTime = 0,
        p[a].durationFinishTime = 0,
        p[a].bookmarkId = "None",
        p[a].disconnectError = "None",
        p[a].extendedErrorCode = "None",
        p[a].Source = "None",
        p[a].arcTriggered = 0,
        p[a].arcSuccess = 0,
        p[a].avgTimeToConnect = 0,
        p[a].arcStartTime = 0
    }
    ,
    g.setArcCountAndTime = function(a, b, c) {
        p[a] && (p[a].arcTriggered++,
        0 === p[a].arcStartTime && (p[a].arcStartTime = c))
    }
    ,
    g.setArcFinishTime = function(a, b) {
        p[a] && (p[a].arcTriggered > 0 ? (p[a].arcSuccess++,
        p[a].avgTimeToConnect += (b - p[a].arcStartTime) / 100) : 1 !== p[a].success && (p[a].success = 1,
        p[a].finishTime = b,
        p[a].durationStartTime = b),
        p[a].arcStartTime = 0)
    }
    ,
    g.addConnectionStartTimeAndLoc = function(a, b, c) {
        p[a] && (p[a].startTime = c,
        p[a].launchType = 1 === b ? "connectionCenter" : 2 === b ? "quickAction" : "restoredSession")
    }
    ,
    g.addTenantId = function(a, b) {
        p[a] && (p[a].tenantId = b)
    }
    ,
    g.addMohorohost = function(a, b) {
        p[a] && (p[a].mohoroHost = b)
    }
    ,
    g.setBookmarkIdForConnection = function(a, b) {
        p[a] && (p[a].bookmarkId = b)
    }
    ,
    g.addCredentialTime = function(a, b) {
        p[a] && (p[a].credTime = b)
    }
    ,
    g.setConnectionConnected = function(a, b, c) {
        p[a] && (p[a].finishTime = b,
        p[a].durationStartTime = b,
        0 === c.value && (p[a].success = 1))
    }
    ,
    g.collectAndSendAllEvents = function() {
        for (var c in p)
            p.hasOwnProperty(c) && (p[c].finishTime = (new Date).getTime(),
            a.collectSessionLaunch(p[c]),
            a.collectIFXSessionLaunch(p[c]));
        b.flush()
    }
    ,
    g.setConnectionDisconnected = function(b, c, d) {
        p[b] && (c && c.code && 47 !== c.code.value && (p[b].userInitiated = 0,
        p[b].clientStackDisconnectCode = c.code.value),
        p[b].durationFinishTime = d,
        0 === p[b].finishTime && (p[b].finishTime = d),
        a.collectSessionLaunch(p[b]),
        a.collectIFXSessionLaunch(p[b]),
        delete p[b])
    }
    ,
    g.checkAndCollectDailyEvents = function() {
        var b = g.getTelemetryCollectTime(j)
          , c = (new Date).getTime();
        null  !== b && void 0 !== b && (b = b.timestamp),
        (null  === b || void 0 === b || c - b > i) && (o.timestamp = c,
        g.saveTelemetryCollectTime(o),
        a.collectDailyDeviceInfo(),
        a.collectDailyResourceInfo())
    }
    ,
    g.sendFullSreenTelemetry = function(b) {
        0 === n ? n = b : (a.collectFullscreenEnabled(Math.floor((b - n) / 1e3)),
        n = 0)
    }
    ,
    g.sendClipboardTelemetry = function(b, c) {
        a.collectClipboardTelemetry(b, c)
    }
    ,
    g.sendAppLaunchLocation = function(b) {
        switch (b) {
        case 1:
            a.collectAppLaunchLocation("connectioncenter");
            break;
        case 2:
            a.collectAppLaunchLocation("insession")
        }
    }
    ,
    g.sendDisconnectClicked = function() {
        a.collectDisconnectClicked()
    }
    ,
    function(a) {
        e = "undefined" != typeof a ? a : new Telemetry(new TelemetryHttpsTracker(new HTTPHelper),""),
        f = g.getTelemetryConsentStatus(k),
        f === !1 && g.setEnabled(!1, l),
        g.checkAndCollectDailyEvents(),
        window.setInterval(g.checkAndCollectDailyEvents, h)
    }(a),
    g
}
;
!function() {
    "use strict";
    function a(a, b, c, d, e, f, g, h) {
        Error.stackTraceLimit = 1 / 0;
        var i = GlobalUtils.logger;
        i.setLogLevel(GlobalUtils.settings.logLevel);
        var j = new Adal(window,GlobalUtils.settings.isInProductionMode ? AdalType.Production : AdalType.Mock,i,new Store(StoreTransactionMode.Immediate,StoreType.Persistent,JSON.stringify,JSON.parse,"AdalStoreDomain."),GlobalUtils.settings.adalSettings);
        i.log("[App] Client Version: " + GlobalUtils.settings.version),
        i.log("[App] Build Target: " + GlobalUtils.settings.target),
        h.init(j, i),
        g.init(b, j, i),
        a.html5Mode({
            enabled: !0,
            requireBase: !1
        }).hashPrefix("!"),
        d.otherwise("/"),
        c.state("login", {
            url: "/",
            controller: ["$location", function(a) {
                a.path("/connectioncenter")
            }
            ]
        }),
        c.state("cc", {
            url: "/connectioncenter?enableAudio&enableClipboard&enableDynamicResolution",
            templateUrl: "app/ConnectionCenter/ConnectionCenter.html",
            requireADLogin: !0
        }),
        f.state("session", {
            url: "/session",
            params: {
                id: {
                    value: "",
                    squash: !0
                }
            },
            controller: "SessionCtrl",
            backdrop: !1,
            keyboard: !1,
            templateUrl: "app/Session/Session.html",
            windowTemplateUrl: "app/Session/SessionTemplate.html",
            requireADLogin: !0,
            animation: !0
        }),
        e.setTriggers({
            openTrigger: "closeTrigger"
        })
    }
    function b(a, b) {
        var c, d = this;
        d.$get = function() {
            return d
        }
        ,
        d.state = function(e, f) {
            var g;
            return a.state(e, {
                url: f.url,
                params: f.params,
                onEnter: ["$uibModal", "$state", function(a, d) {
                    var h = b.$get().Adal;
                    if (h.getCachedUser().isAuthenticated && null  !== h.getCachedToken())
                        g = a.open(f),
                        g.result.then(function(a) {
                            c = a
                        })["finally"](function() {
                            d.get("^").modalResult = c,
                            g = c = null ,
                            d.$current.name === e && d.go("^")
                        });
                    else {
                        var i = h.acquireToken();
                        i.complete()
                    }
                }
                ],
                onExit: function() {
                    g && g.close()
                }
            }),
            d
        }
    }
    function c(a) {
        var b = a.Logger;
        try {
            Module.Tracing.Register(a.TelemetryProvider.collectTrace)
        } catch (c) {
            b.log("Tried to register telemetry collect trace function with RdCore but failed")
        }
    }
    a.$inject = ["$locationProvider", "$httpProvider", "$stateProvider", "$urlRouterProvider", "$uibTooltipProvider", "modalStateProvider", "remoteDesktopAdalServiceProvider", "remoteDesktopObjectsServiceProvider"],
    c.$inject = ["remoteDesktopObjectsService"],
    angular.module("arahtml5App", ["ngAnimate", "ngAside", "ui.router", "ui.bootstrap", "duScroll", "remoteDesktop"]).provider("modalState", ["$stateProvider", "remoteDesktopObjectsServiceProvider", b]).config(a).run(c)
}(),
function() {
    "use strict";
    function a(a) {
        return {
            restrict: "A",
            scope: {},
            link: function(b, c) {
                c.text(""),
                a.userInfo.isAuthenticated && c.text(a.userInfo.userName)
            }
        }
    }
    function b(a) {
        return {
            restrict: "A",
            scope: {},
            link: function(b, c) {
                c.text("Log In"),
                a.userInfo.isAuthenticated && c.text("")
            }
        }
    }
    function c(a, b) {
        return {
            restrict: "A",
            scope: {},
            link: function(c, d) {
                var e = b.AdalHelper;
                d.text(""),
                a.userInfo.isAuthenticated && d.text("Sign Out"),
                d.on("click", function() {
                    e.logout()
                })
            }
        }
    }
    function d(a) {
        return {
            restrict: "A",
            scope: {},
            link: function(b, c) {
                c.text(""),
                a.userInfo.isAuthenticated && c.text("ConnectionCenter")
            }
        }
    }
    function e() {
        return {
            compile: function(a, b) {
                return b.ngClick = "!(" + b.anchorDisabled + ") && (" + b.ngClick + ")",
                function(a, b, c) {
                    a.$watch(c.anchorDisabled, function(a) {
                        void 0 !== a && b.toggleClass("disabled", a)
                    }),
                    b.on("click", function(b) {
                        a.$eval(c.anchorDisabled) && b.preventDefault()
                    })
                }
            }
        }
    }
    function f(a, b) {
        function c(a, b, c) {
            if (angular.isArray(a))
                for (var d = a.length; d--; )
                    if (c(a[d], b))
                        return !0;
            return !1
        }
        function d(a, b, d) {
            return a = angular.isArray(a) ? a : [],
            c(a, b, d) || a.push(b),
            a
        }
        function e(a, b, c) {
            if (angular.isArray(a))
                for (var d = a.length; d--; )
                    if (c(a[d], b)) {
                        a.splice(d, 1);
                        break
                    }
            return a
        }
        function f(f, g, h) {
            function i(a) {
                f.checked = c(a, m, n)
            }
            b(g)(f);
            var j = a(h.checklistModel)
              , k = j.assign
              , l = a(h.checklistChange)
              , m = a(h.checklistValue)(f.$parent)
              , n = angular.equals;
            h.hasOwnProperty("checklistComparator") && (n = a(h.checklistComparator)(f.$parent)),
            f.$watch("checked", function(a, b) {
                if (a !== b) {
                    var c = j(f.$parent);
                    a === !0 ? k(f.$parent, d(c, m, n)) : k(f.$parent, e(c, m, n)),
                    l && l(f)
                }
            }),
            angular.isFunction(f.$parent.$watchCollection) ? f.$parent.$watchCollection(h.checklistModel, i) : f.$parent.$watch(h.checklistModel, i, !0)
        }
        return {
            restrict: "A",
            priority: 1e3,
            terminal: !0,
            scope: !0,
            compile: function(a, b) {
                if ("INPUT" !== a[0].tagName || "checkbox" !== b.type)
                    throw 'checklist-model should be applied to `input[type="checkbox"]`.';
                if (!b.checklistValue)
                    throw "You should provide `checklist-value`.";
                return a.removeAttr("checklist-model"),
                a.attr("ng-model", "checked"),
                f
            }
        }
    }
    function g() {
        return {
            scope: {
                ratingStars: "="
            },
            restrict: "AE",
            templateUrl: "app/Common/starsTemplate.html",
            link: function(a, b) {
                var c, d, e, f = {
                    starNumber: 5,
                    defaultValue: 0,
                    normalPosition: 0,
                    activePosition: 1,
                    onSetValue: null ,
                    onUnset: null 
                }, g = null , h = b, i = null , j = null , k = function() {
                    for (g = n(),
                    c = 0; c < f.starNumber; c++)
                        e = f.normalPosition,
                        g - 1 >= c && (e = f.activePosition),
                        l(e, h.find("ul").children().eq(c))
                }
                , l = function(a, b) {
                    switch (a) {
                    case 1:
                        b.removeClass("mdl-EmptyStar"),
                        b.addClass("mdl-FullStar");
                        break;
                    case 0:
                        b.removeClass("mdl-FullStar"),
                        b.addClass("mdl-EmptyStar")
                    }
                }
                , m = function(a) {
                    n() === a && 0 !== a ? (f.onUnset && f.onUnset(h, a),
                    m(0)) : (f.onSetValue && f.onSetValue(h, a),
                    h.find("input").val(a))
                }
                , n = function() {
                    return h.find("input").val()
                }
                ;
                m(f.defaultValue),
                k(),
                d = b.find(".ratingStar"),
                angular.forEach(d, function(b) {
                    var c = angular.element(b);
                    c.unbind().bind({
                        mouseover: function() {
                            c.css("cursor", "pointer")
                        },
                        click: function() {
                            m(c.attr("data-value")),
                            k(),
                            i = j,
                            j = n(),
                            a.ratingStars = j
                        }
                    })
                })
            }
        }
    }
    function h() {
        return {
            restrict: "AE",
            scope: {
                emailId: "=",
                contactSender: "=",
                feedbackBody: "=",
                ratingStars: "=",
                sendFeedback: "="
            },
            template: '<button class="btn btn-primary">&nbsp;&nbsp;Send&nbsp;&nbsp;</button>',
            link: function(a, b) {
                b.on("click", function() {
                    a.sendFeedback(a.emailId, a.ratingStars, a.feedbackBody)
                })
            }
        }
    }
    function i() {
        return {
            restrict: "EA",
            scope: {
                loaderType: "@"
            },
            templateUrl: "app/Common/loadingSpinner.html",
            link: function(a, b) {
                "sessionLoader" === a.loaderType && b[0].removeChild(b.children()[1])
            }
        }
    }
    function j(a, b, c, d) {
        return {
            restrict: "A",
            scope: {},
            link: function(e) {
                function f() {
                    for (var a = b.getTop(); a && !a.value.modalScope.sendQOE && b.dismiss(a.key, ""); )
                        a = b.getTop()
                }
                function g(a, b) {
                    "/connectioncenter" == b.url && f(),
                    (c[0].fullscreenElement || c[0].webkitFullscreenElement || c[0].mozFullScreenElement || c[0].msFullscreenElement) && (c[0].exitFullscreen ? c[0].exitFullscreen() : c[0].webkitExitFullscreen ? c[0].webkitExitFullscreen() : c[0].mozCancelFullScreen ? c[0].mozCancelFullScreen() : c[0].msExitFullscreen && c[0].msExitFullscreen())
                }
                d.is("cc") && f();
                var h = a.$on("$routeChangeStart", g)
                  , i = a.$on("$stateChangeStart", g)
                  , j = a.$on("$locationChangeStart", g);
                e.$on("$destroy", function() {
                    h(),
                    i(),
                    j()
                })
            }
        }
    }
    angular.module("arahtml5App").directive("anchorDisabled", [e]).directive("checklistModel", ["$parse", "$compile", f]).directive("feedbackStars", [g]).directive("loadingSpinner", [i]).directive("navbarUsernameDisplay", ["userAuthInfoService", a]).directive("navbarLoginButton", ["userAuthInfoService", b]).directive("navbarLogoutButton", ["userAuthInfoService", "remoteDesktopObjectsService", c]).directive("navbarConncenterLink", ["userAuthInfoService", d]).directive("routeChangeHandler", ["$rootScope", "$uibModalStack", "$document", "$state", j]).directive("sendFeedbackButton", [h])
}(),
function() {
    "use strict";
    function a(a, b, c) {
        a.vm = new FeedbackViewModel(c.TelemetryProvider),
        a.cancel = function() {
            b.dismiss("cancel")
        }
        ,
        a.sendFeedback = function(c, d, e) {
            a.vm.sendFeedback(c, d, e),
            b.close("Feedback sent")
        }
        ,
        a.option = "sendEmail",
        a.isOptionChecked = []
    }
    angular.module("arahtml5App").controller("FeedbackCtrl", ["$scope", "$uibModalInstance", "remoteDesktopObjectsService", a])
}();
var FeedbackViewModel = function(a) {
    "use strict";
    var b = {};
    return b.sendFeedback = function(b, c, d) {
        var e = (d || "No feedback entered") + ";rating=" + c;
        b && (e += ";emailId=" + b),
        a.collectFeedback(e)
    }
    ,
    b
}
;
!function() {
    "use strict";
    function a(a, b, c) {
        a.cancel = function() {
            b.dismiss("cancel")
        }
        ;
        var d = new HTTPHelper;
        d.onComplete = function(b) {
            a.licenseText = c.trustAsHtml(b)
        }
        ,
        d.get("assets/license/license.txt")
    }
    angular.module("arahtml5App").controller("LegalCtrl", ["$scope", "$uibModalInstance", "$sce", a])
}(),
function() {
    "use strict";
    function a(a, b, c) {
        var d = this
          , e = !1
          , f = function(a, c) {
            if (e === !1) {
                e = !0;
                var d = b.open({
                    templateUrl: "app/Session/errorDialogTemplate.html",
                    controller: "errorTemplateCtrl",
                    windowClass: "rdhtml5-loader",
                    backdrop: "static",
                    keyboard: !1,
                    resolve: {
                        params: function() {
                            return {
                                errorTitle: c,
                                errorMessage: a
                            }
                        }
                    }
                });
                d.result.then(function() {
                    e = !1
                })
            }
        }
        ;
        return function() {
            d.vm = new BookmarkViewModel(c.RemoteResourceFeedStore,c.FeedRefreshHelper,c.BookmarkStore,c.Logger,c.TelemetryProvider,c.TelemetryManagerProvider),
            d.vm.delegate.showError = f,
            a.$parent.cc && (d.vm.delegate.showMessage = a.$parent.cc.showEmptyMessage,
            d.vm.delegate.hideMessage = a.$parent.cc.hideEmptyMessage,
            d.vm.delegate.showLoadingAnimation = a.$parent.cc.showAnimation,
            d.vm.delegate.hideLoadingAnimation = a.$parent.cc.hideAnimation),
            d.vm.init()
        }(),
        a.$on("$destroy", function() {
            d.vm.unsubscribeAll()
        }),
        d
    }
    angular.module("arahtml5App").controller("BookmarkCtrl", ["$scope", "$uibModal", "remoteDesktopObjectsService", a])
}();
var BookmarkViewModelDelegate = function() {
    "use strict";
    this.hideMessage = null ,
    this.showMessage = null ,
    this.showLoadingAnimation = null ,
    this.hideLoadingAnimation = null ,
    this.showError = null 
}
  , BookmarkViewModel = function(a, b, c, d, e, f) {
    "use strict";
    var g = {
        events: new EventProvider,
        feedList: []
    }
      , h = function() {
        for (var a = 0, b = 0; b < g.feedList.length; b++)
            a += g.bookmarkList(g.feedList[b].id).length;
        e && e.setAraFeedAppCountForTelemetry(a, g.feedList.length)
    }
      , i = function(a) {
        if (f)
            for (var b = 0; b < a.length; b++)
                f.setFeedRefreshCompleteTime(a[b].id, (new Date).getTime())
    }
      , j = function(b) {
        d.log("[BookmarkViewModel] Feed refresh completed for total feeds: " + b),
        a.list(g.feedList),
        h(),
        i(g.feedList),
        g.delegate.hideLoadingAnimation && g.delegate.hideLoadingAnimation(),
        0 === b && g.delegate.showMessage ? g.delegate.showMessage() : 0 !== b && g.delegate.hideMessage && g.delegate.hideMessage()
    }
      , k = function(a) {
        g.delegate.hideLoadingAnimation && g.delegate.hideLoadingAnimation(),
        d.log("[BookmarkViewModel] Total failed feed count is: " + a),
        g.delegate.showError && g.delegate.showError(Strings.string.FEED_DOWNLOAD_FAILED, Strings.string.FEED_DOWNLOAD_ERROR_DIALOG_TITLE),
        f.setInvitationRefreshError()
    }
      , l = function() {
        g.delegate.hideMessage && g.delegate.hideMessage()
    }
    ;
    return g.delegate = new BookmarkViewModelDelegate,
    g.init = function() {
        g.delegate.hideMessage && g.delegate.hideMessage(),
        g.delegate.showLoadingAnimation && g.delegate.showLoadingAnimation(),
        b.events.subscribe(FeedRefreshHelperEvent.FeedRefreshStart, l),
        b.events.subscribe(FeedRefreshHelperEvent.FeedRefreshComplete, j),
        b.events.subscribe(FeedRefreshHelperEvent.FeedRefreshError, k),
        b.events.subscribe(FeedRefreshHelperEvent.InvitationRefreshError, k),
        b.refresh()
    }
    ,
    g.bookmarkList = function(b) {
        var d, e = a.find(b), f = [];
        for (d in e.bookmarks)
            if (e.bookmarks.hasOwnProperty(d)) {
                var g = c.find(e.bookmarks[d].id);
                f.push(g)
            }
        return f
    }
    ,
    g.unsubscribeAll = function() {
        b.events.unsubscribe(FeedRefreshHelperEvent.FeedRefreshStart, l),
        b.events.unsubscribe(FeedRefreshHelperEvent.FeedRefreshComplete, j),
        b.events.unsubscribe(FeedRefreshHelperEvent.FeedRefreshError, k),
        b.events.unsubscribe(FeedRefreshHelperEvent.InvitationRefreshError, k)
    }
    ,
    g
}
;
!function() {
    "use strict";
    function a(a, b, c) {
        a.message = c.message,
        a.supportedBrowserMsg = Strings.string.TOAST_SUPPORTED_BROWSER,
        a.dismiss = function() {
            b.close()
        }
    }
    angular.module("arahtml5App").controller("BrowserUnsupportedDialogCtrl", ["$scope", "$uibModalInstance", "params", a])
}(),
function() {
    "use strict";
    function a(a, b, c, d, e, f) {
        function g(a) {
            b.open({
                animation: !0,
                templateUrl: "app/ConnectionCenter/BrowserUnsupportedDialogTemplate.html",
                windowClass: "rdhtml5-unsupported",
                controller: "BrowserUnsupportedDialogCtrl",
                resolve: {
                    params: function() {
                        return {
                            message: a
                        }
                    }
                }
            })
        }
        var h = this
          , i = new ConnectionCenterViewModel(f.Adal,f.SessionProvider,f.GlobalSettingsStore,f.Logger);
        h.showEmptyCCMessage = !0,
        h.showLoadingAnimation = !1,
        function() {
            h.vm = i,
            i.handleUrlParams(e)
        }(),
        h.vm.delegate.showUnsupportedBrowserDialog = g,
        h.vm.init(),
        h.goHome = function() {
            a.path("/home")
        }
        ,
        h.showInvitationsPanel = function() {
            return !i.isIdTypeOrgId()
        }
        ,
        h.showBackToSessionElement = function() {
            return i.shouldShowBackToSession()
        }
        ,
        h.showAnimation = function() {
            d.$evalAsync(function() {
                h.showLoadingAnimation = !0
            })
        }
        ,
        h.hideAnimation = function() {
            d.$evalAsync(function() {
                h.showLoadingAnimation = !1
            })
        }
        ,
        h.hideEmptyMessage = function() {
            d.$evalAsync(function() {
                h.showEmptyCCMessage = !1
            })
        }
        ,
        h.showEmptyMessage = function() {
            d.$evalAsync(function() {
                h.showEmptyCCMessage = !0
            })
        }
        ,
        h.openInvitationsModal = function() {
            var a = i.checkAndDismissIfExistingModal("invitations");
            a ? a.dismiss() : (a = c.open({
                animation: !0,
                templateUrl: "app/ConnectionCenter/Invitations.html",
                controller: "InvitationsCtrl",
                windowClass: "rdhtml5-sidepanel",
                placement: "right",
                backdrop: !0,
                keyboard: !0,
                resolve: {
                    params: function() {
                        return {
                            hideMessage: h.hideEmptyMessage,
                            showMessage: h.showEmptyMessage
                        }
                    }
                }
            }),
            i.addModalInstanceForType("invitations", a),
            a.result.then(function(a) {
                a > 0 && h.showAnimation(),
                i.checkAndDismissIfExistingModal("invitations")
            }, function() {
                i.checkAndDismissIfExistingModal("invitations")
            }))
        }
        ,
        h.openOptionsModal = function() {
            var a = i.checkAndDismissIfExistingModal("options");
            a ? a.dismiss() : (a = c.open({
                templateUrl: "app/ConnectionCenter/Options.html",
                controller: "OptionsCtrl",
                windowClass: "rdhtml5-sidepanel",
                placement: "right",
                backdrop: !0,
                keyboard: !0
            }),
            i.addModalInstanceForType("options", a),
            a.result.then(function() {
                i.checkAndDismissIfExistingModal("options")
            }, function() {
                i.checkAndDismissIfExistingModal("options")
            }))
        }
        ,
        h.openLegalModal = function() {
            var a = i.checkAndDismissIfExistingModal("legal");
            a ? a.dismiss() : (a = b.open({
                animation: !0,
                templateUrl: "app/Common/Legal.html",
                controller: "LegalCtrl",
                windowClass: "rdhtml5-feedback"
            }),
            i.addModalInstanceForType("legal", a),
            a.result.then(function() {
                i.checkAndDismissIfExistingModal("legal")
            }, function() {
                i.checkAndDismissIfExistingModal("legal")
            }))
        }
        ,
        h.sendFeedback = function() {
            var a = i.checkAndDismissIfExistingModal("feedback");
            a ? a.dismiss() : (a = b.open({
                animation: !0,
                templateUrl: "app/Common/FeedbackTemplate.html",
                controller: "FeedbackCtrl",
                windowClass: "rdhtml5-feedback"
            }),
            i.addModalInstanceForType("feedback", a),
            a.result.then(function() {
                i.checkAndDismissIfExistingModal("feedback")
            }, function() {
                i.checkAndDismissIfExistingModal("feedback")
            }))
        }
    }
    angular.module("arahtml5App").controller("ConnectionCenterCtrl", ["$location", "$uibModal", "$aside", "$scope", "$stateParams", "remoteDesktopObjectsService", a])
}(),
function() {
    "use strict";
    function a(a) {
        var b = this;
        return b.userInfo = a.Adal.getCachedUser(),
        b
    }
    angular.module("arahtml5App").service("userAuthInfoService", ["remoteDesktopObjectsService", a])
}();
var ConnectionCenterViewModelDelegate = function() {
    "use strict";
    this.showUnsupportedBrowserDialog = null 
}
  , ConnectionCenterViewModel = function(a, b, c, d) {
    "use strict";
    var e = {}
      , f = "showBrowserUnsupportedModal" + a.getCachedUser().email
      , g = {
        invitations: [],
        options: [],
        feedback: [],
        legal: []
    }
      , h = function() {
        return !(void 0 === window.AudioContext && void 0 === window.webkitAudioContext)
    }
    ;
    return e.delegate = new ConnectionCenterViewModelDelegate,
    e.init = function() {
        b.disconnect();
        var a = c.find(f);
        h() || null  !== a && void 0 !== a || (c.save({
            id: f,
            value: !0
        }),
        e.delegate.showUnsupportedBrowserDialog && e.delegate.showUnsupportedBrowserDialog(Strings.string.TOAST_AUDIO_UNSUPPORTED))
    }
    ,
    e.handleUrlParams = function(a) {
        if ("Live" !== GlobalUtils.settings.target && a) {
            var b = GlobalUtils.settings.featureSettings;
            d.log("[ConnectionCenterController] Global app settings override found. Here is the old settings"),
            d.log(GlobalUtils.settings.featureSettings),
            "undefined" != typeof a.enableAudio && (b.enableAudio = "true" === a.enableAudio),
            "undefined" != typeof a.enableClipboard && (b.enableClipboard = "true" === a.enableClipboard),
            "undefined" != typeof a.enableDynamicResolution && (b.enableDynamicResolution = "true" === a.enableDynamicResolution),
            GlobalUtils.settings.featureSettings = b,
            d.log("[ConnectionCenterController] Global app settings override applied. Here is the new settings"),
            d.log(GlobalUtils.settings.featureSettings)
        }
    }
    ,
    e.isUserAuthenticated = function() {
        return a.getCachedUser().isAuthenticated
    }
    ,
    e.isIdTypeOrgId = function() {
        return "OrgId" === a.getCachedUser().idType
    }
    ,
    e.shouldShowBackToSession = function() {
        var a = null ;
        return b.sessionList(a).length > 0
    }
    ,
    e.checkAndDismissIfExistingModal = function(a) {
        return g[a].length > 0 ? g[a].shift() : null 
    }
    ,
    e.addModalInstanceForType = function(a, b) {
        g[a].push(b)
    }
    ,
    e
}
;
!function() {
    "use strict";
    function a(a, b, c, d) {
        var e = null 
          , f = new InvitationsViewModel(d.RemoteResourceInvitationStore,d.RemoteResourceInvitationProvider,d.FeedRefreshHelper,d.Adal,d.Logger,d.TelemetryManagerProvider)
          , g = null 
          , h = d.Logger;
        a.vm = f,
        a.showSpinner = !0,
        a.isRefreshRunning = !1,
        a.refreshInvitations = function() {
            return e = c.defer(),
            f.refreshInvitations(),
            e.promise
        }
        ,
        function() {
            g = function() {
                h.debug("[InvitationsCtrl] Remote resource invitation refresh complete received in controller"),
                a.$evalAsync(function() {
                    a.showSpinner = !1
                }),
                e.resolve("Invitations Refresh")
            }
            ,
            f.events.subscribe(ConnectionCenterViewModelEvent.RemoteResourceInvitationRefreshComplete, g),
            a.refreshInvitations()
        }(),
        a.invitationSelectionChanged = function(a, b) {
            f.toggleInvitation(a, b)
        }
        ,
        a.accept = function() {
            f.onAcceptButtonClick(),
            b.close(f.invitationList.checked.length)
        }
        ,
        a.cancel = function() {
            f.onCancelButtonClick(),
            b.dismiss("cancel")
        }
        ,
        a.$on("$destroy", function() {
            a.vm.unsubscribeAll(),
            f.events.unsubscribe(ConnectionCenterViewModelEvent.RemoteResourceInvitationRefreshComplete, g)
        })
    }
    angular.module("arahtml5App").controller("InvitationsCtrl", ["$scope", "$modalInstance", "$q", "remoteDesktopObjectsService", a])
}();
var ConnectionCenterViewModelEvent = {
    RemoteResourceInvitationRefreshComplete: 0,
    RemoteResourceFeedRefreshComplete: 1
}
  , InvitationsViewModel = function(a, b, c, d, e, f) {
    "use strict";
    var g = {}
      , h = function() {
        a.list(g.invitationList),
        g.invitationList.checked = g.invitationList.filter(function(a) {
            return a.enabled === !0
        }),
        f.setRefreshStartTimeForInvitation(g.invitationList.checked, (new Date).getTime())
    }
      , i = function() {
        h(),
        g.events.fireEventCallback(ConnectionCenterViewModelEvent.RemoteResourceInvitationRefreshComplete)
    }
      , j = function(a) {
        g.events.fireEventCallback(ConnectionCenterViewModelEvent.RemoteResourceFeedRefreshComplete, a)
    }
      , k = function() {
        c.events.subscribe(FeedRefreshHelperEvent.InvitationRefreshComplete, i),
        c.events.subscribe(FeedRefreshHelperEvent.FeedRefreshComplete, j)
    }
    ;
    return k(),
    g.events = new EventProvider,
    g.invitationList = [],
    g.invitationList.checked = [],
    g.unsubscribeAll = function() {
        c.events.unsubscribe(FeedRefreshHelperEvent.InvitationRefreshComplete, i),
        c.events.unsubscribe(FeedRefreshHelperEvent.FeedRefreshComplete, j)
    }
    ,
    g.toggleInvitation = function(b) {
        b.enabled = !b.enabled,
        a.save(b)
    }
    ,
    g.onAcceptButtonClick = function() {
        g.unsubscribeAll(),
        a.commit(),
        c.updateConsent(),
        h(),
        g.refreshAllFeeds()
    }
    ,
    g.onCancelButtonClick = function() {
        g.unsubscribeAll(),
        a.rollback()
    }
    ,
    g.refreshAllFeeds = function() {
        a.rollback(),
        c.refreshAllFeeds()
    }
    ,
    g.refreshInvitations = function() {
        e.debug("[InvitationsViewModel] Refreshing Invitations for the invitations side panel"),
        f.setRefreshStartTime((new Date).getTime()),
        c.refresh()
    }
    ,
    g.logout = function() {
        d.logout()
    }
    ,
    g
}
;
!function() {
    "use strict";
    function a(a, b, c) {
        var d = c.Adal.getCachedUser().email
          , e = new OptionsViewModel(c.Logger,c.TelemetryManagerProvider,d);
        a.vm = e,
        a.accept = function() {
            b.close(e.optionsList.checked),
            e.onAcceptButtonClick()
        }
        ,
        a.cancel = function() {
            b.dismiss("cancel")
        }
    }
    angular.module("arahtml5App").controller("OptionsCtrl", ["$scope", "$modalInstance", "remoteDesktopObjectsService", a])
}();
var OptionsViewModel = function(a, b, c) {
    "use strict";
    var d, e = {}, f = "telemetryConsentStatus" + c;
    return e.optionsList = [],
    e.optionsList.checked = [],
    function() {
        e.optionsList = [{
            name: "Send anonymous data to Microsoft.",
            value: 0
        }],
        d = b.getTelemetryConsentStatus(f),
        null  !== d && d === !0 && (e.optionsList.checked = ["Send anonymous data to Microsoft."],
        b.setTelemetryConsentStatus({
            id: f,
            value: !0
        }))
    }(),
    e.onAcceptButtonClick = function() {
        a.log("[OptionsViewModel] " + e.optionsList.checked),
        void 0 !== e.optionsList.checked && (1 === e.optionsList.checked.length ? (b.setEnabled(!0),
        b.setTelemetryConsentStatus({
            id: f,
            value: !0
        })) : 0 === e.optionsList.checked.length && (b.setEnabled(!1),
        b.setTelemetryConsentStatus({
            id: f,
            value: !1
        })))
    }
    ,
    e
}
;
!function() {
    "use strict";
    function a(a, b, c) {
        var d = new InvitationsViewModel(c.RemoteResourceInvitationStore,c.RemoteResourceInvitationProvider,c.FeedRefreshHelper,c.Adal,c.Logger,c.TelemetryManagerProvider)
          , e = null ;
        a.vm = d,
        a.refreshInvitations = function() {
            d.refreshInvitations()
        }
        ,
        function() {
            e = function() {}
            ,
            d.events.subscribe(ConnectionCenterViewModelEvent.RemoteResourceInvitationRefreshComplete, e),
            a.refreshInvitations()
        }(),
        a.invitationSelectionChanged = function(a, b) {
            d.toggleInvitation(a, b)
        }
        ,
        a.logout = function() {
            a.vm.logout(),
            a.$destroy(),
            b.go("home")
        }
        ,
        a.accept = function() {
            a.$parent.$parent.showFirstTime = !1,
            d.onAcceptButtonClick(),
            a.$destroy()
        }
        ,
        a.cancel = function() {
            a.$parent.$parent.showFirstTime = !1,
            d.onCancelButtonClick(),
            a.$destroy()
        }
        ,
        a.$on("$destroy", function() {
            a.vm.unsubscribeAll(),
            d.events.unsubscribe(ConnectionCenterViewModelEvent.RemoteResourceInvitationRefreshComplete, e)
        })
    }
    angular.module("arahtml5App").controller("firstTimeInvitationsCtrl", ["$scope", "$state", "remoteDesktopObjectsService", a])
}(),
function() {
    "use strict";
    function a() {
        return {
            restrict: "A",
            scope: {},
            link: function(a) {
                a.$evalAsync(function() {
                    var a = localStorage.getItem("currentTheme");
                    null  === a && (a = "Default"),
                    a = a.toString().charAt(0).toLowerCase() + a.toString().slice(1)
                })
            }
        }
    }
    function b(a) {
        return {
            restrict: "A",
            scope: {
                showFirstTime: "&"
            },
            link: function(b, c) {
                var d = angular.element(a[0].getElementById("rdhtml5-FI"))
                  , e = angular.element(a[0].getElementsByClassName("skip-button")[0])
                  , f = !1;
                c.on("click", function() {
                    d.remove()
                }),
                e.on("click", function() {
                    d.remove()
                }),
                b.$watch(function() {
                    return b.$parent.$parent.showFirstTime
                }, function() {
                    f = !0,
                    b.$parent.$parent.showFirstTime === !1 && f && d.remove()
                })
            }
        }
    }
    function c() {
        return {
            restrict: "AE",
            scope: {
                emailId: "=",
                sessionId: "=",
                messageBody: "=",
                isDisabled: "=",
                closeModal: "="
            },
            template: '<button class="btn btn-primary" style="padding: 7px 13px">      <i class="mdl mdl-fw mdl-Mail" style="position: relative; top: 3px"></i> Share</button>',
            link: function(a, b) {
                b.on("click", function() {
                    a.$evalAsync(function() {
                        var b = "Would you like to try my session running MS Word? I have some docs createdand saved for you and would like you to access them."
                          , c = "My Session Link: https://localhost:44320/session/{" + a.sessionId + "}\n"
                          , d = void 0 === a.messageBody ? b : a.messageBody;
                        document.body && document.body.insertAdjacentHTML && document.body.insertAdjacentHTML("beforeEnd", '<iframe src="mailto:' + a.emailId + "?subject=Checkout this session&amp;body=" + escape(c) + d + '"style="display:none;"></iframe>'),
                        a.closeModal()
                    })
                })
            }
        }
    }
    angular.module("arahtml5App").directive("ngThemeswitcher", [a]).directive("dismissElement", ["$document", b]).directive("sendEmailButton", [c])
}(),
function() {
    "use strict";
    function a() {
        return {
            restrict: "A",
            scope: !0,
            link: function(a, b) {
                b.on({
                    keypress: function(b) {
                        a.vm.keyPress(b.which) && b.preventDefault()
                    },
                    focus: function() {
                        a.vm.canvasFocus()
                    },
                    blur: function() {
                        a.vm.canvasLostFocus()
                    },
                    keydown: function(b) {
                        a.vm.keyDown(b.keyCode) && b.preventDefault()
                    },
                    keyup: function(b) {
                        a.vm.keyUp(b.keyCode) && b.preventDefault()
                    },
                    mousedown: function(b) {
                        a.vm.mouseDown(b.pageX, b.pageY, b.which),
                        b.preventDefault()
                    },
                    mouseup: function(b) {
                        a.vm.mouseUp(b.pageX, b.pageY, b.which),
                        b.preventDefault()
                    },
                    mousemove: function(b) {
                        a.vm.mouseMove(b.pageX, b.pageY),
                        b.preventDefault()
                    },
                    mouseleave: function(b) {
                        a.vm.mouseLeave(b.pageX, b.pageY)
                    },
                    mouseenter: function() {
                        a.vm.mouseEnter()
                    },
                    wheel: function(b) {
                        a.vm.mouseWheel(-b.originalEvent.deltaX, -b.originalEvent.deltaY),
                        b.preventDefault()
                    },
                    contextmenu: function(a) {
                        return a.preventDefault(),
                        !1
                    }
                })
            }
        }
    }
    angular.module("arahtml5App").directive("rdInput", [a])
}(),
function() {
    "use strict";
    function a() {
        var a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v = {};
        return v.init = function(v, w) {
            a = w;
            try {
                e = new (window.AudioContext || window.webkitAudioContext)
            } catch (x) {
                a.error("Failed to create audio context")
            }
            b = v,
            u = new GlobalSettingsStore("GlobalSettingsStoreDomain"),
            GlobalUtils.initTelemetry(b, a, u),
            c = new AdalHelper(b,GlobalUtils.telemetryManagerProvider),
            d = new Store(StoreTransactionMode.Immediate,StoreType.Persistent,JSON.stringify,JSON.parse,"SessionProviderAppState."),
            g = new BookmarkStore,
            f = new BookmarkProvider(g),
            k = new RemoteResourceInvitationStore("RemoteResourceInvitationStoreDomain"),
            i = new RemoteResourceInvitationFactory(GlobalUtils.settings.isInProductionMode ? RemoteResourceInvitationDataSourceType.Production : RemoteResourceInvitationDataSourceType.Mock,GlobalUtils.settings.feedDiscoveryUrl,a,new AdalDownloader(new HTTPHelper,a)),
            j = new RemoteResourceInvitationProvider(k,i,GlobalUtils.settings.isInProductionMode,new HTTPHelper),
            n = new RemoteResourceFeedStore,
            h = new ConnectionFactory(ConnectionFactoryType.RdpConnection,a,e),
            q = new SessionStore,
            o = new SessionFactory(h,a,GlobalUtils.telemetryManagerProvider),
            r = new GatewayStore,
            s = new GatewayProvider(r),
            p = new SessionProvider(o,h,q,g,r,d,a),
            l = new RemoteResourceFeedFactory(GlobalUtils.settings.isInProductionMode ? RemoteResourceFeedDataSourceType.Production : RemoteResourceFeedDataSourceType.Mock,a,new AdalDownloader(new HTTPHelper,a)),
            m = new RemoteResourceFeedProvider(n,l,k,f,s,a),
            t = new FeedRefreshHelper(j,m,b,a)
        }
        ,
        v.$get = function() {
            return {
                Logger: function() {
                    return a
                }(),
                Adal: function() {
                    return b
                }(),
                AdalHelper: function() {
                    return c
                }(),
                BookmarkProvider: function() {
                    return f
                }(),
                BookmarkStore: function() {
                    return g
                }(),
                ConnectionFactory: function() {
                    return h
                }(),
                FeedRefreshHelper: function() {
                    return t
                }(),
                GatewayProvider: function() {
                    return s
                }(),
                GatewayStore: function() {
                    return r
                }(),
                RemoteResourceFeedProvider: function() {
                    return m
                }(),
                RemoteResourceFeedStore: function() {
                    return n
                }(),
                RemoteResourceInvitationProvider: function() {
                    return j
                }(),
                RemoteResourceInvitationStore: function() {
                    return k
                }(),
                SessionFactory: function() {
                    return o
                }(),
                SessionProvider: function() {
                    return p
                }(),
                SessionStore: function() {
                    return q
                }(),
                TelemetryProvider: function() {
                    return GlobalUtils.telemetryProvider
                }(),
                TelemetryManagerProvider: function() {
                    return GlobalUtils.telemetryManagerProvider
                }(),
                GlobalSettingsStore: function() {
                    return u
                }()
            }
        }
        ,
        v
    }
    angular.module("remoteDesktop", []).provider("remoteDesktopObjectsService", a)
}(),
function() {
    "use strict";
    var a = angular.module("remoteDesktop");
    a.provider("remoteDesktopAdalService", function() {
        var a = null 
          , b = null ;
        this.init = function(c, d, e) {
            a = d,
            b = e,
            c && c.interceptors && c.interceptors.push("ProtectedResourceInterceptor")
        }
        ,
        this.$get = ["$rootScope", "$window", "$q", "$location", "$timeout", function(c, d, e, f, g) {
            var h = function() {
                var e = d.location.hash.toString();
                b.debug("[RemoteDesktopAdalProvider] Location change hit "),
                d.location.search.length > 0 && (e = d.location.search),
                a.analyzePath(e),
                a.isRedirectedFromLoginPage() && (a.completeLogin(),
                null  !== a.getError() && g(function() {
                    c.$broadcast("adal:error", a.getError())
                }, 1))
            }
              , i = function(c) {
                b.debug("[RemoteDesktopAdalProvider] Route change event for:" + f.path()),
                a.getCachedUser().isAuthenticated && null  !== a.getCachedToken() ? b.log("[RemoteDesktopAdalProvider] User is authenticated") : (c.preventDefault(),
                b.log("[RemoteDesktopAdalProvider] User is not authenticated or token has expired"),
                b.debug("[RemoteDesktopAdalProvider] Login event for:" + f.path()),
                b.debug("[RemoteDesktopAdalProvider] Start login at:" + window.location.href),
                b.debug("[RemoteDesktopAdalProvider] Start page is: " + f.url()),
                a.login(f.url()))
            }
              , j = function(b, c) {
                c && c.requireADLogin && !a.isLoginInterrupted() && i(b, c.url)
            }
            ;
            a.onRouteRedirect = function(a) {
                f.url(a)
            }
            ,
            a.onFullPageRedirect = function(a) {
                d.location.href = a
            }
            ,
            a.onCurrentPage = function() {
                return f.url()
            }
            ,
            c.$on("$stateChangeStart", j),
            c.$on("$locationChangeStart", h),
            this.userInfo = function() {
                var c = a.getCachedUser();
                return b.debug("[RemoteDesktopAdalProvider] User information"),
                b.debug(c),
                c
            }
        }
        ]
    }),
    a.factory("ProtectedResourceInterceptor", ["$q", "$rootScope", "remoteDesktopAdalService", function(a) {
        return {
            request: function(a) {
                return a ? a : void 0
            },
            responseError: function(b) {
                return a.reject(b)
            }
        }
    }
    ])
}(),
function() {
    "use strict";
    function a(a, b, c) {
        a.modalType = c.type,
        a.keyShortcut = navigator.platform.indexOf("Mac") > -1 ? "Cmd" : "Ctrl",
        a.contentChanged = function() {
            c.setLocalClipboardContent && (c.setLocalClipboardContent(Module.ClipboardFormatType.Text, a.copyText),
            c.setLocalClipboardContent(Module.ClipboardFormatType.UnicodeText, a.copyText)),
            c.setRemoteClipboardFormats && c.setRemoteClipboardFormats()
        }
        ,
        a.close = function(a) {
            b.close(a)
        }
        ,
        a.dismiss = function() {
            b.close()
        }
        ,
        "copy" === c.type && (a.copyText = c.clipboard[Module.ClipboardFormatType.Text]),
        c.telemetryDelegate && "copy" === a.modalType && c.telemetryDelegate(a.modalType, void 0 !== a.copyText)
    }
    angular.module("arahtml5App").controller("ClipboardCtrl", ["$scope", "$uibModalInstance", "params", a])
}(),
function() {
    "use strict";
    function a(a, b, c) {
        a.vm = new QoeViewModel(c.TelemetryProvider),
        a.cancel = function() {
            a.qoeOption && a.vm.sendQOE(a.qoeOption.selected, a.qoeMessage, "cancel"),
            b.dismiss("cancel")
        }
        ,
        a.sendQOE = function() {
            a.vm.sendQOE(a.qoeOption.selected, a.qoeMessage, "submit"),
            b.close("QOE sent")
        }
    }
    angular.module("arahtml5App").controller("qoeCtrl", ["$scope", "$uibModalInstance", "remoteDesktopObjectsService", a])
}();
var QoeViewModel = function(a) {
    "use strict";
    var b = {}
      , c = {
        audioIssues: 0,
        touchAndMouseIssues: 0,
        delays: 0,
        screenResolutionIssues: 0,
        others: 0,
        details: "",
        action: ""
    };
    return b.qoeOptionList = [{
        id: "audioIssues",
        option: Strings.string.QOE_OPTION1_AUDIO
    }, {
        id: "touchAndMouseIssues",
        option: Strings.string.QOE_OPTION2_TOUCHANDMOUSE
    }, {
        id: "delays",
        option: Strings.string.QOE_OPTION3_DELAY
    }, {
        id: "screenResolutionIssues",
        option: Strings.string.QOE_OPTION4_SCREENRES
    }, {
        id: "others",
        option: Strings.string.QOE_OPTION5_OTHERS
    }],
    b.qoeOptionList.checked = [],
    b.sendQOE = function(d, e, f) {
        c.action = f,
        c.experience = d,
        void 0 !== e && (c.details = e);
        for (var g = 0; g < b.qoeOptionList.checked.length; g++)
            c[b.qoeOptionList.checked[g].id] = 1;
        a.collectQOEEvent(c)
    }
    ,
    b.optionChanged = function(a, c) {
        "others" === a.id && c ? b.qoeOptionList.checked = [{
            id: "others",
            option: Strings.string.QOE_OPTION5_OTHERS
        }] : "others" !== a.id && c && (b.qoeOptionList.checked = b.qoeOptionList.checked.filter(function(a) {
            return "others" !== a.id
        }),
        0 === b.qoeOptionList.checked.length && b.qoeOptionList.checked.push(a))
    }
    ,
    b
}
;
!function() {
    "use strict";
    function a(a, b, c, d, e, f, g, h) {
        function i() {
            var a = Math.random();
            return a <= GlobalUtils.settings.showQoeProbability && !B
        }
        function j() {
            f.go("cc", f.params, {
                reload: !0,
                inherit: !1,
                notify: !0
            }),
            i() && (B = !0,
            w())
        }
        function k(b, c) {
            a.openCredentialPromptModal(b, c)
        }
        function l(b, c) {
            a.vm.disconnectSession(b, c)
        }
        function m() {
            e(function() {
                a.$$phase || a.$apply()
            }, 100)
        }
        function n(b, d, e) {
            var f = c.open({
                animation: !1,
                templateUrl: "app/Session/loaderTemplate.html",
                controller: "loaderTemplateCtrl",
                windowClass: "rdhtml5-loader",
                backdrop: "static",
                keyboard: !1,
                resolve: {
                    params: function() {
                        return {
                            appPackageName: e,
                            sessionId: b,
                            connState: d
                        }
                    }
                }
            });
            a.vm.addModalInstanceForId(b, f, A.modalTypes.LOADER_MODAL),
            f.result.then(function(a) {
                a && (B = !0,
                l(a, !1))
            })
        }
        function o(b) {
            var c = a.vm.getModalInstanceForId(b, A.modalTypes.LOADER_MODAL);
            c && c.dismiss(),
            a.vm.resetModalInstanceForId(b, A.modalTypes.LOADER_MODAL)
        }
        function p(b, d) {
            var e = c.open({
                animation: !1,
                templateUrl: "app/Session/autoreconDialogTemplate.html",
                controller: "autoreconCtrl",
                windowClass: "rdhtml5-loader",
                backdrop: "static",
                keyboard: !1,
                resolve: {
                    params: function() {
                        return {
                            sessionId: b,
                            retryState: d
                        }
                    }
                }
            });
            a.vm.addModalInstanceForId(b, e, A.modalTypes.AUTORECON_MODAL),
            e.result.then(function(a) {
                a && l(a, !0)
            })
        }
        function q(b) {
            var c = a.vm.getModalInstanceForId(b, A.modalTypes.AUTORECON_MODAL);
            c && c.dismiss(),
            a.vm.resetModalInstanceForId(b, A.modalTypes.AUTORECON_MODAL)
        }
        function r(b) {
            B = !0;
            var d = c.open({
                templateUrl: "app/Session/errorDialogTemplate.html",
                controller: "errorTemplateCtrl",
                windowClass: "rdhtml5-loader",
                backdrop: "static",
                keyboard: !1,
                resolve: {
                    params: function() {
                        return {
                            errorMessage: b
                        }
                    }
                }
            });
            d.result.then(function() {
                a.vm.postErrorDialogCleanup()
            })
        }
        function s() {
            a.$evalAsync(function() {
                a.showEmptyMessage = !1
            })
        }
        function t() {
            a.$evalAsync(function() {
                a.showEmptyMessage = !0
            })
        }
        function u() {
            a.$evalAsync(function() {
                a.showWindowLoader = !0
            })
        }
        function v() {
            a.$evalAsync(function() {
                a.showWindowLoader = !1
            })
        }
        function w() {
            c.open({
                templateUrl: "app/Session/qoeDialogTemplate.html",
                controller: "qoeCtrl",
                windowClass: "rdhtml5-qoe",
                backdrop: !0,
                keyboard: !0
            })
        }
        function x(a, b) {
            return c.open({
                animation: !0,
                templateUrl: "app/Session/toast.html",
                windowClass: "rdhtml5-toast",
                controller: "toastCtrl",
                resolve: {
                    params: function() {
                        return {
                            message: a,
                            toastType: b
                        }
                    }
                }
            })
        }
        function y(a, b) {
            var c = x(a, b)
              , d = 3e3;
            e(function() {
                c.close()
            }, d)
        }
        var z, A, B;
        z = h.TelemetryManagerProvider,
        A = new SessionViewModel(h.RemoteResourceFeedStore,h.FeedRefreshHelper,h.BookmarkStore,h.SessionProvider,h.SessionStore,h.Logger,h.Adal,h.TelemetryManagerProvider),
        B = !1,
        a.vm = A,
        a.vm.delegate.allSessionsDisconnected = j,
        a.vm.delegate.onCredentialsNeeded = k,
        a.vm.delegate.openLoaderModal = n,
        a.vm.delegate.closeLoaderModal = o,
        a.vm.delegate.openAutoreconDialog = p,
        a.vm.delegate.closeAutoreconDialog = q,
        a.vm.delegate.updateAngularInterface = m,
        a.vm.delegate.openGenericErrorDialog = r,
        a.vm.delegate.showMessage = t,
        a.vm.delegate.hideMessage = s,
        a.vm.delegate.showWindowLoader = u,
        a.vm.delegate.hideWindowLoader = v,
        a.vm.delegate.showToast = y,
        a.currentOpenAppGroup = [],
        a.vm.init(),
        a.isPaneOpen = !1,
        a.showEmptyMessage = !0,
        a.showWindowLoader = !1,
        a.clipboardEnabled = GlobalUtils.settings.featureSettings.enableClipboard,
        a.backToCC = function() {
            a.vm.cancelLoadingSessions(),
            f.go("cc", f.params, {
                reload: !0,
                inherit: !1,
                notify: !0
            })
        }
        ,
        a.$on("$destroy", function() {
            a.vm.dismissed()
        }),
        a.sendFullScreenTelemetry = function(a) {
            z.sendFullSreenTelemetry(a)
        }
        ,
        a.disconnectAllSessions = function() {
            a.vm.disconnectAllSessions()
        }
        ,
        a.focusToSession = function(b) {
            a.vm.focusToSession(b)
        }
        ,
        b.opened.then(function() {
            g.id && "" !== g.id ? a.vm.launchBookmark(g.id, 1) : a.vm.restoreSessions(function(b) {
                b || a.backToCC()
            }),
            a.vm.shown()
        }),
        a.cancelConnection = function() {
            b.dismiss("cancel")
        }
        ,
        a.openPopover = function(b) {
            e(function() {
                a.vm.openPopover(b),
                a.currentOpenAppGroup = a.vm.getAppListForId(b)
            })
        }
        ,
        a.closePopover = function(b) {
            e(function() {
                a.vm.closePopover(b)
            })
        }
        ,
        a.openInvitationsModal = function() {
            a.isPaneOpen = !0;
            var b = d.open({
                animation: !0,
                templateUrl: "app/ConnectionCenter/Invitations.html",
                controller: "InvitationsCtrl",
                windowClass: "rdhtml5-insession-sidepanel",
                placement: "right",
                backdrop: !0,
                keyboard: !0,
                resolve: {
                    params: function() {
                        return {
                            hideMessage: s,
                            showMessage: t
                        }
                    }
                }
            });
            b.result.then(function() {
                a.isPaneOpen = !1
            }, function() {
                a.isPaneOpen = !1
            })
        }
        ,
        a.openCredentialPromptModal = function(b, d) {
            a.isPaneOpen = !0;
            var e = c.open({
                animation: !0,
                templateUrl: "app/Session/credentialPromptTemplate.html",
                windowClass: "rdhtml5-credPrompt",
                controller: "credPromptCtrl",
                backdrop: "static",
                keyboard: !0,
                resolve: {
                    params: function() {
                        return {
                            credRequest: b
                        }
                    }
                }
            })
              , f = new Credential;
            e.result.then(function(c) {
                a.isPaneOpen = !1,
                f.userName = c.username,
                f.password = c.password,
                b.complete(f),
                z.addCredentialTime(d, (new Date).getTime())
            }, function() {
                a.isPaneOpen = !1,
                B = !0,
                b.cancel(),
                z.addCredentialTime(d, (new Date).getTime())
            })
        }
        ,
        a.openOptionsModal = function() {
            a.isPaneOpen = !0;
            var b = d.open({
                templateUrl: "app/ConnectionCenter/Options.html",
                controller: "OptionsCtrl",
                windowClass: "rdhtml5-insession-sidepanel",
                placement: "right",
                backdrop: !0,
                keyboard: !0
            });
            b.result.then(function() {
                a.isPaneOpen = !1
            }, function() {
                a.isPaneOpen = !1
            })
        }
        ,
        a.shareSession = function() {
            a.isPaneOpen = !0;
            var b = c.open({
                animation: !0,
                templateUrl: "app/Session/SessionShare.html",
                controller: "SessionShareCtrl",
                resolve: {
                    params: function() {
                        return {
                            url: "{123ebc-617eea-534bca-009abc}"
                        }
                    }
                }
            });
            b.result.then(function() {
                a.isPaneOpen = !1
            }, function() {
                a.isPaneOpen = !1
            })
        }
        ,
        a.sendFeedback = function() {
            a.isPaneOpen = !0;
            var b = c.open({
                animation: !0,
                templateUrl: "app/Common/FeedbackTemplate.html",
                controller: "FeedbackCtrl",
                windowClass: "rdhtml5-feedback"
            });
            b.result.then(function() {
                a.isPaneOpen = !1
            }, function() {
                a.isPaneOpen = !1
            })
        }
        ,
        a.openCopyModal = function() {
            a.isPaneOpen = !0;
            var b = c.open({
                animation: !0,
                templateUrl: "app/Session/clipboardTemplate.html",
                controller: "ClipboardCtrl",
                windowClass: "rdhtml5-clipboard",
                resolve: {
                    params: function() {
                        return {
                            type: "copy",
                            clipboard: a.vm.clipboard,
                            telemetryDelegate: z.sendClipboardTelemetry
                        }
                    }
                }
            });
            b.result.then(function() {
                a.isPaneOpen = !1
            }, function() {
                a.isPaneOpen = !1
            })
        }
        ,
        a.openPasteModal = function() {
            a.isPaneOpen = !0;
            var b = 1500
              , d = c.open({
                animation: !0,
                templateUrl: "app/Session/clipboardTemplate.html",
                controller: "ClipboardCtrl",
                windowClass: "rdhtml5-clipboard",
                resolve: {
                    params: function() {
                        return {
                            type: "paste",
                            setLocalClipboardContent: a.vm.setLocalClipboardContent,
                            setRemoteClipboardFormats: a.vm.setRemoteClipboardFormats
                        }
                    }
                }
            });
            d.result.then(function(c) {
                if (a.isPaneOpen = !1,
                "showToast" === c) {
                    z.sendClipboardTelemetry("paste", 1);
                    var d = x(Strings.string.TOAST_MESSAGE_PASTE, "pasteToast");
                    e(function() {
                        d.close()
                    }, b)
                } else
                    z.sendClipboardTelemetry("paste", 0)
            }, function() {
                a.isPaneOpen = !1
            })
        }
        ,
        a.hasBookmarks = function(b) {
            return a.vm.hasBookmarks(b.id)
        }
    }
    angular.module("arahtml5App").controller("SessionCtrl", ["$scope", "$uibModalInstance", "$uibModal", "$aside", "$timeout", "$state", "$stateParams", "remoteDesktopObjectsService", a])
}(),
function() {
    "use strict";
    function a() {
        return {
            restrict: "A",
            link: function(a, b) {
                a.vm.canvas = b[0]
            }
        }
    }
    function b() {
        return {
            restrict: "A",
            link: function() {}
        }
    }
    function c(a) {
        return {
            restrict: "A",
            link: function(b, c) {
                c.on("click", function() {
                    for (var b = [].slice.call(a[0].getElementsByClassName("tooltip")), c = 0; c < b.length; c++) {
                        var d = angular.element(b[c]);
                        d.remove()
                    }
                })
            }
        }
    }
    function d(a) {
        return {
            restrict: "A",
            scope: {
                isStarterOpen: "="
            },
            link: function(b, c) {
                function d(c) {
                    function h() {
                        e.off(g, h),
                        e.css("display", "none"),
                        e.removeClass("slideOutT"),
                        f.css("display", "none"),
                        f.removeClass("slideOutT")
                    }
                    var i = angular.element(c.target) || angular.element(c.srcElement);
                    (i.parents(".rdhtml5-nav-menu").length <= 0 && !i.hasClass("rdhtml5-nav-menu") || i.parents(".rdhtml5-nav-menu").length >= 0 && (i.is("img") || i.is("h6") || i.is("div") && i.hasClass("centered"))) && (b.isStarterOpen = !1,
                    a.off("click", d),
                    e.removeClass("slideInT"),
                    f.removeClass("slideInT"),
                    e.addClass("slideOutT"),
                    f.addClass("slideOutT"),
                    e.on(g, h))
                }
                var e = null 
                  , f = null 
                  , g = "animationend oAnimationEnd webkitAnimationEnd";
                c.on("click", function(c) {
                    function h() {
                        e.off(g, h),
                        e.removeClass("slideInT"),
                        f.removeClass("slideInT")
                    }
                    a.on("click", d),
                    b.isStarterOpen === !1 && (b.isStarterOpen = !0,
                    c.stopPropagation()),
                    e = angular.element(a[0].getElementsByClassName("rdhtml5-nav-menu")[0]),
                    f = angular.element(a[0].getElementsByClassName("rdhtml5-nav-menuBeak")[0]),
                    e.css("display", "block"),
                    f.css("display", "block"),
                    f.addClass("slideInT"),
                    e.addClass("slideInT"),
                    e.on(g, h)
                })
            }
        }
    }
    function e(a) {
        return {
            restrict: "A",
            scope: !0,
            priority: 500,
            link: function(b, c) {
                b.$watch(function() {
                    return b.vm.activeSessionId()
                }, function() {
                    a(function() {
                        for (var a = c[0].getElementsByClassName("rdhtml5-insession-appicons"), d = 0; d < a.length; d++) {
                            var e = angular.element(a[d])
                              , f = e.attr("sessionid");
                            f != b.vm.getAppIdForActiveSession() ? e.hasClass("rdhtml5-insession-activeicon") && e.removeClass("rdhtml5-insession-activeicon") : e.hasClass("rdhtml5-insession-activeicon") || e.addClass("rdhtml5-insession-activeicon")
                        }
                    })
                })
            }
        }
    }
    function f() {
        return {
            restrict: "A",
            link: function(a, b) {
                function c(a) {
                    var b = void 0 !== a.originalEvent.deltaY ? -1 * a.originalEvent.deltaY : void 0 !== a.originalEvent.wheelDelta ? a.originalEvent.wheelDelta : a.originalEvent.detail;
                    return 0 > b ? "down" : b > 0 ? "up" : null 
                }
                var d = "onwheel" in document ? "wheel" : "onmousewheel" in document ? "mousewheel" : "DOMMouseScroll"
                  , e = 40
                  , f = 0
                  , g = 0;
                b.bind(d, function(a) {
                    var d = b[0].scrollHeight
                      , h = c(a);
                    switch (h) {
                    case "up":
                        if (a.preventDefault(),
                        0 !== b.scrollTop()) {
                            switch (b.scrollTop() % e) {
                            case 0:
                                b.scrollTop(b.scrollTop() - e);
                                break;
                            default:
                                g = b.scrollTop() - e * Math.floor(b.scrollTop() / e),
                                b.scrollTop(b.scrollTop() - g)
                            }
                            b.scrollTop(b.scrollTop() + f)
                        }
                        break;
                    case "down":
                        if (a.preventDefault(),
                        b.scrollTop() < d)
                            switch (b.scrollTop() % e) {
                            case 0:
                                b.scrollTop(b.scrollTop() + e);
                                break;
                            default:
                                g = e * Math.ceil(b.scrollTop() / e) - b.scrollTop(),
                                b.scrollTop(b.scrollTop() + g)
                            }
                        b.scrollTop(b.scrollTop() - f)
                    }
                })
            }
        }
    }
    function g() {
        return {
            restrict: "A",
            scope: !0,
            priority: 500,
            link: function(a, b) {
                b.on("click", function(c) {
                    a.$evalAsync(function() {
                        var d = b.children().first()
                          , e = angular.element(d).attr("sessionid")
                          , f = angular.element(c.target) || angular.element(c.srcElement);
                        f.is("div") && (f = f.children().first()),
                        a.vm.checkAndSwitchActiveWindow(e, f)
                    })
                })
            }
        }
    }
    function h(a) {
        return {
            restrict: "A",
            scope: {
                isFullscreenEnabled: "=",
                telemetryDelegate: "&"
            },
            link: function(b, c) {
                function d() {
                    b.isFullscreenEnabled = !b.isFullscreenEnabled,
                    b.telemetryDelegate({
                        timestamp: (new Date).getTime()
                    })
                }
                var e = a[0].getElementById("session-container")
                  , f = a[0].body;
                a.on("webkitfullscreenchange mozfullscreenchange fullscreenchange", d),
                b.$on("$destroy", function() {
                    a.off("webkitfullscreenchange mozfullscreenchange fullscreenchange", d)
                }),
                c.on("click", function() {
                    a[0].fullscreenElement || a[0].webkitFullscreenElement || a[0].mozFullScreenElement || a[0].msFullscreenElement ? a[0].exitFullscreen ? a[0].exitFullscreen() : a[0].webkitExitFullscreen ? a[0].webkitExitFullscreen() : a[0].mozCancelFullScreen ? a[0].mozCancelFullScreen() : a[0].msExitFullscreen && a[0].msExitFullscreen() : (a[0].fullscreenEnabled || a[0].webkitFullscreenEnabled || a[0].mozFullScreenEnabled || a[0].msFullscreenEnabled) && (e.webkitRequestFullscreen && f.webkitRequestFullscreen ? f.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT) : e.requestFullscreen && f.requestFullscreen ? f.requestFullscreen() : e.mozRequestFullScreen && f.mozRequestFullScreen ? f.mozRequestFullScreen() : e.msRequestFullscreen && f.msRequestFullscreen && f.msRequestFullscreen())
                })
            }
        }
    }
    function i(a) {
        return {
            restrict: "A",
            scope: !0,
            link: function(b, c) {
                b.$watch(function() {
                    return b.isPaneOpen
                }, function() {
                    b.isPaneOpen === !1 ? c.focus() : c.blur()
                }),
                c.on("click", function() {
                    c.focus()
                }),
                c.on("blur", function() {
                    b.isPaneOpen || a(function() {
                        c.focus()
                    }, 1)
                })
            }
        }
    }
    function j(a, b, c) {
        return {
            restrict: "A",
            scope: !0,
            link: function(d, e) {
                function f(a, c, d) {
                    var e;
                    return function() {
                        var f = this
                          , g = arguments
                          , h = function() {
                            e = null ,
                            d || a.apply(f, g)
                        }
                          , i = d && !e;
                        b.cancel(e),
                        e = b(h, c),
                        i && a.apply(f, g)
                    }
                }
                function g(a) {
                    var c = d.vm.getMonitorBounds();
                    j = c.width,
                    k = c.height;
                    var f = function() {
                        var a = (e.parent().width() - e.width()) / 2
                          , b = (e.parent().height() - e.height()) / 2;
                        a = 0 > a ? 0 : a,
                        b = 0 > b ? 0 : b,
                        e.css({
                            "margin-left": a + "px",
                            "margin-top": b + "px"
                        })
                    }
                      , g = function() {
                        return !(e[0].width === q.minWidth && j <= q.minWidth || null  !== r.width && r.width === e.parent().width())
                    }
                      , h = function() {
                        return !(e[0].height === q.minHeight && k <= q.minHeight || e[0].height === q.maxHeight && k >= q.maxHeight || null  !== r.height && r.height === e.parent().height())
                    }
                      , i = function() {
                        e[0].width = j
                    }
                      , l = function() {
                        e[0].height = k
                    }
                      , m = function() {
                        o.css("display", "block"),
                        o.addClass("animatefadein")
                    }
                      , s = function(a) {
                        b(function() {
                            o.removeClass("animatefadein"),
                            o.addClass("animatefadeout"),
                            b(function() {
                                o.css("display", "none"),
                                o.removeClass("animatefadeout")
                            }, a)
                        }, a)
                    }
                    ;
                    if (a === p.INITIAL_RESIZE)
                        i(),
                        l(),
                        f();
                    else if (a === p.WINDOW_RESIZE) {
                        if (GlobalUtils.settings.featureSettings.enableDynamicResolution) {
                            var t = !1;
                            g() && (i(),
                            t = !0),
                            h() && (l(),
                            t = !0),
                            t && (d.vm.windowSizeChanged(j, k),
                            m(),
                            s(n))
                        }
                        f()
                    }
                    r.width = e.parent().width(),
                    r.height = e.parent().height()
                }
                function h() {
                    b(function() {
                        g(p.WINDOW_RESIZE)
                    }, 500)
                }
                var i, j, k, l = angular.element(a), m = 300, n = 1e3, o = angular.element(c[0].getElementById("background-loader")), p = {
                    INITIAL_RESIZE: 1,
                    WINDOW_RESIZE: 2
                }, q = d.vm.getCanvasBounds(), r = {
                    width: null ,
                    height: null 
                };
                g(p.INITIAL_RESIZE),
                i = f(function() {
                    g(p.WINDOW_RESIZE)
                }, m),
                l.on("resize", i),
                c.on("webkitfullscreenchange mozfullscreenchange fullscreenchange", h),
                d.$on("$destroy", function() {
                    l.off("resize", i),
                    c.off("webkitfullscreenchange mozfullscreenchange fullscreenchange", h)
                })
            }
        }
    }
    function k(a) {
        return {
            restrict: "A",
            scope: !1,
            link: function(b, c) {
                var d, e, f;
                c.bind("mouseenter", function() {
                    a(function() {
                        d = c.next(),
                        d && d[0] && d[0].offsetLeft < 0 && (f = d[0].offsetLeft,
                        d.css("left", "3px"),
                        e = d[0].querySelector(".tooltip-arrow"),
                        e = angular.element(e),
                        e.css("margin-left", f + -8 + "px"))
                    })
                })
            }
        }
    }
    function l(a) {
        return {
            restrict: "A",
            scope: {
                modalType: "@",
                closeModal: "&",
                textContent: "@"
            },
            link: function(b, c) {
                function d() {
                    a(function() {
                        b.closeModal({
                            result: "showToast"
                        })
                    }, e)
                }
                var e = 50;
                switch (b.modalType) {
                case "copy":
                    a(function() {
                        angular.element(c).attr("readonly", "readonly"),
                        c[0].select()
                    }, e);
                    break;
                case "paste":
                    c.on("paste", d)
                }
            }
        }
    }
    function m(a) {
        return {
            restrict: "A",
            scope: {
                closePopover: "&",
                focusToSession: "&"
            },
            link: function(b, c) {
                function d() {
                    null  !== k && (a.cancel(k),
                    k = null )
                }
                function e() {
                    l = a(function() {
                        b.closePopover({
                            id: j
                        }),
                        l = null 
                    }, m)
                }
                function f() {
                    null  !== l && (a.cancel(l),
                    l = null )
                }
                function g() {
                    k = a(function() {
                        b.closePopover({
                            id: j
                        }),
                        k = null 
                    }, m)
                }
                var h, i, j, k = null , l = null , m = 0, n = angular.element(c.parent().parent().parent().parent().children()[0]), o = angular.element(n.children().first());
                j = n.attr("sessionId"),
                o.addClass("hover-class"),
                c.on("click", function(a) {
                    h = angular.element(a.target).parent(),
                    h.is("li") && (h = angular.element(h.children())),
                    i = h.attr("sessionId"),
                    b.focusToSession({
                        id: i
                    }),
                    b.closePopover({
                        id: j
                    }),
                    k = null ,
                    l = null 
                }),
                c.on("mouseenter", d),
                c.on("mouseleave", e),
                n.on("mouseenter", f),
                n.on("mouseleave", g),
                b.$on("$destroy", function() {
                    c.off("mouseenter", d),
                    c.off("mouseleave", e),
                    n.off("mouseenter", f),
                    n.off("mouseleave", g),
                    o.removeClass("hover-class")
                })
            }
        }
    }
    function n(a) {
        return {
            restrict: "A",
            scope: {
                userName: "=",
                password: "="
            },
            link: function(b) {
                b.userName = a.Adal.getCachedUser().email
            }
        }
    }
    angular.module("arahtml5App").directive("appGrouperPopover", ["$timeout", m]).directive("canvasFocusHandler", ["$timeout", i]).directive("canvasPositionHandler", ["$window", "$timeout", "$document", j]).directive("connectionIndicator", [b]).directive("insessionActiveappcontrolOuterDirective", ["$timeout", e]).directive("inSessionActiveAppsList", [g]).directive("inSessionAppStarter", ["$document", d]).directive("inSessionFullScreenMode", ["$document", h]).directive("positionTooltip", ["$timeout", k]).directive("removeTooltips", ["$document", c]).directive("rdCanvas", [a]).directive("scrollHandler", [f]).directive("textareaHandler", ["$timeout", l]).directive("usernameAutofill", ["remoteDesktopObjectsService", n])
}();
var SessionViewModelDelegate = function() {
    "use strict";
    this.allSessionsDisconnected = null ,
    this.onCredentialsNeeded = null ,
    this.openLoaderModal = null ,
    this.closeLoaderModal = null ,
    this.openAutoreconDialog = null ,
    this.closeAutoreconDialog = null ,
    this.updateAngularInterface = null ,
    this.openGenericErrorDialog = null ,
    this.showMessage = null ,
    this.hideMessage = null ,
    this.showWindowLoader = null ,
    this.hideWindowLoader = null ,
    this.showToast = null 
}
  , SessionViewModel = function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i, j, k = {
        feedList: [],
        sessionList: {},
        events: new EventProvider,
        connectionState: "Initializing Remote Connection",
        canvas: null ,
        clipboard: {},
        modalTypes: {
            LOADER_MODAL: 1,
            AUTORECON_MODAL: 2
        }
    }, l = 0, m = {}, n = {}, o = !1, p = {}, q = {}, r = 500, s = 825, t = 3840, u = 2160, v = 50, w = 25, x = function() {
        k.feedList.length > 0 ? k.delegate.hideMessage && k.delegate.hideMessage() : k.delegate.showMessage && k.delegate.showMessage()
    }
    , y = function() {
        a.list(k.feedList)
    }
    , z = function() {
        d.sessionListGrouped(k.sessionList),
        k.delegate.updateAngularInterface && k.delegate.updateAngularInterface()
    }
    , A = function() {
        d.hasActiveConnections() || (d.events.unsubscribe(SessionProviderEvent.SessionCreated, W),
        d.events.unsubscribe(SessionProviderEvent.SessionFocused, U),
        d.events.unsubscribe(SessionProviderEvent.SessionDestroyed, V),
        d.delegate.canvasNeeded = null ,
        d.delegate.credentialsNeeded = null ,
        k.delegate.allSessionsDisconnected())
    }
    , B = function() {
        o = !1
    }
    , C = function(a, b, c) {
        var d = "";
        switch (b) {
        case ConnectionState.OpeningRemotePort:
            d = Strings.string.CONNECTION_OPENING_REMOTE_PORT;
            break;
        case ConnectionState.EstablishingSecureConnection:
            d = Strings.string.CONNECTION_ESTABLISHING_SECURE_CONNECTION;
            break;
        case ConnectionState.ConfiguringRemoteConnection:
            d = Strings.string.CONNECTION_CONFIGURING_REMOTE_CONNECTION;
            break;
        case ConnectionState.DetectingNetworkQuality:
            d = Strings.string.CONNECTION_DETECTING_NETWORK_QUALITY;
            break;
        case ConnectionState.SessionBrokerFindingDestination:
            d = Strings.string.CONNECTION_SESSION_BROKER_FINDING_DESTINATION;
            break;
        case ConnectionState.SessionBrokerLoadingDestination:
            d = Strings.string.CONNECTION_SESSION_BROKER_LOADING_DESTINATION;
            break;
        case ConnectionState.SessionBrokerBringingSessionOnline:
            d = Strings.string.CONNECTION_SESSION_BROKER_BRINGING_SESSION_ONLINE;
            break;
        case ConnectionState.SessionBrokerRedirectingToDestination:
            d = Strings.string.CONNECTION_SESSION_BROKER_REDIRECTING_TO_DESTINATION;
            break;
        case ConnectionState.VirtualMachineLoading:
            d = Strings.string.CONNECTION_VIRTUAL_MACHINE_LOADING;
            break;
        case ConnectionState.VirtualMachineWaking:
            d = Strings.string.CONNECTION_VIRTUAL_MACHINE_WAKING;
            break;
        case ConnectionState.VirtualMachineStarting:
            d = Strings.string.CONNECTION_VIRTUAL_MACHINE_STARTING;
            break;
        case ConnectionState.VirtualMachineRetryingSessionMonitoring:
            d = Strings.string.CONNECTION_VIRTUAL_MACHINE_RETRYING_SESSION_MONITORING;
            break;
        case ConnectionState.VirtualMachineStartingSessionMonitoring:
            d = Strings.string.CONNECTION_VIRTUAL_MACHINE_STARTING_SESSION_MONITORING
        }
        m.hasOwnProperty(a) ? m[a].state = d : m[a] = {
            state: d
        },
        0 !== c && (n.hasOwnProperty(a) ? (n[a].retryCount = c,
        k.delegate.updateAngularInterface && k.delegate.updateAngularInterface()) : n[a] = {
            retryCount: c
        },
        null  === k.getModalInstanceForId(a, k.modalTypes.AUTORECON_MODAL) && k.delegate.openAutoreconDialog && k.delegate.openAutoreconDialog(a, n))
    }
    , D = function(a) {
        f.debug("[SessionViewModel] Received didConnect event on UI layer for session " + a),
        N(),
        k.delegate.closeLoaderModal && k.delegate.closeLoaderModal(a),
        k.delegate.closeAutoreconDialog && k.delegate.closeAutoreconDialog(a),
        setTimeout(function() {
            f.debug("[SessionViewModel] Giving focus to canvas object"),
            k.canvas.focus()
        }, r)
    }
    , E = function(a, b) {
        f.debug("[SessionViewModel] Received didDisconnect event on UI layer");
        var c = e.find(a);
        if (k.delegate.closeLoaderModal && c && 0 === c.getSiblingCount() && k.delegate.closeLoaderModal(a),
        z(),
        b && b.code !== Module.DisconnectCode.UserInitiated && k.delegate.openGenericErrorDialog) {
            var d = SessionDisconnectCode.string(b);
            o = !0,
            setTimeout(function() {
                k.delegate.openGenericErrorDialog(d)
            }, 1)
        }
        o || A()
    }
    , F = function(a, b) {
        N(),
        o || b.code && k.delegate.openGenericErrorDialog && (k.delegate.openGenericErrorDialog(SessionDisconnectCode.string(b)),
        o = !0)
    }
    , G = function() {
        return f.debug("[SessionViewModel] Received canvasNeeded event on UI layer"),
        f.debug(k.canvas),
        k.canvas
    }
    , H = function() {
        return f.debug("[SessionViewModel] Received monitorBound event on UI layer"),
        k.getMonitorBounds()
    }
    , I = function(a, b) {
        if (a.isTokenRequired === !0) {
            f.debug("[SessionViewModel] Credentials requested (token)");
            var c = g.acquireToken()
              , e = c.getToken();
            e ? (f.debug("[SessionViewModel] Token found, completing credential request with token"),
            a.completeWithToken(e)) : (d.tokenExpiredForConnection(b),
            a.cancel()),
            c.complete()
        } else
            f.debug("[SessionViewModel] Credentials requested (username/password)"),
            k.delegate.onCredentialsNeeded && k.delegate.onCredentialsNeeded(a, b)
    }
    , J = function(a) {
        f.debug("[SessionViewModel] Mouse pointer changed to " + a),
        k.canvas.style.cursor = 'url("' + a + '"), auto'
    }
    , K = function(a) {
        switch (f.debug("[SessionViewModel] Default mouse pointer value changed to " + a),
        a) {
        case !0:
            k.canvas.style.cursor = "auto";
            break;
        case !1:
            k.canvas.style.cursor = "none"
        }
    }
    , L = function(a, b) {
        f.log("[SessionViewModel] Remote clipboard content received " + a + b),
        k.clipboard[a] = b
    }
    , M = function(a) {
        var b = k.clipboard[a.GetFormat()];
        b ? a.complete(b) : a.cancel(),
        a["delete"]()
    }
    , N = function() {
        l && l > 0 && l--,
        0 === l && k.delegate.hideWindowLoader && k.delegate.hideWindowLoader()
    }
    , O = function() {
        z()
    }
    , P = function() {
        z()
    }
    , Q = function() {
        N()
    }
    , R = function() {
        z()
    }
    , S = function() {
        z()
    }
    , T = function(a, b, c) {
        a === j.id && (k.canvas.width = b,
        k.canvas.height = c)
    }
    , U = function(a) {
        j = e.find(a),
        N(),
        f.log("[SessionViewModel] Session focused event received in view model session id: " + j.id),
        z()
    }
    , V = function(a) {
        f.debug("[SessionViewModel] Session destroy event received for: " + a),
        z(),
        A()
    }
    , W = function(a) {
        f.debug("[SessionViewModel] Session created event received for: " + a),
        j = e.find(a),
        $(j, !0),
        j && j.connect(),
        k.delegate.openLoaderModal && j && 0 === j.getSiblingCount() && k.delegate.openLoaderModal(a, m, j.getLabel()),
        z()
    }
    , X = function() {
        f.debug("[SessionViewModel] SesstionCreateFailed event received in view model");
        var a = SessionDisconnectCode.string(Module.DisconnectCode.UnknownError);
        k.delegate.openGenericErrorDialog(a),
        o = !0
    }
    , Y = function(a, b) {
        var c, d, e = 0, f = 0, g = k.canvas.getBoundingClientRect();
        return e += g.left,
        f += g.top,
        c = k.canvas.offsetWidth / k.canvas.width,
        d = k.canvas.offsetHeight / k.canvas.height,
        a = (a - e) / c,
        b = (b - f) / d,
        {
            x: a,
            y: b
        }
    }
    , Z = function(a) {
        var b;
        return 1 === a ? b = MouseButton.Left : 2 === a ? b = MouseButton.Middle : 3 === a ? b = MouseButton.Right : 4 === a ? b = MouseButton.Button4 : 5 === a && (b = MouseButton.Button5),
        b
    }
    , $ = function(a, b) {
        b ? (a.events.subscribe(SessionEvent.WillConnect, C),
        a.events.subscribe(SessionEvent.DidDisconnect, E),
        a.events.subscribe(SessionEvent.DidConnect, D),
        a.events.subscribe(SessionEvent.ViewSizeChanged, T),
        a.events.subscribe(SessionEvent.WindowIconChanged, O),
        a.events.subscribe(SessionEvent.WindowTitleChanged, P),
        a.events.subscribe(SessionEvent.WindowLaunched, Q),
        a.events.subscribe(SessionEvent.WindowZOrderChanged, R),
        a.events.subscribe(SessionEvent.ApplicationIdChanged, S),
        a.events.subscribe(SessionEvent.CredentialsNeeded, I),
        a.events.subscribe(SessionEvent.MousePointerChanged, J),
        a.events.subscribe(SessionEvent.ShowDefaultMousePointer, K),
        a.events.subscribe(SessionEvent.GetRemoteClipboardContent, L),
        a.events.subscribe(SessionEvent.ClipboardContentRequest, M),
        a.events.subscribe(SessionEvent.Error, F)) : (a.events.unsubscribe(SessionEvent.WillConnect, C),
        a.events.unsubscribe(SessionEvent.DidDisconnect, E),
        a.events.unsubscribe(SessionEvent.DidConnect, D),
        a.events.unsubscribe(SessionEvent.ViewSizeChanged, T),
        a.events.unsubscribe(SessionEvent.WindowIconChanged, O),
        a.events.unsubscribe(SessionEvent.WindowTitleChanged, P),
        a.events.unsubscribe(SessionEvent.WindowLaunched, Q),
        a.events.unsubscribe(SessionEvent.WindowZOrderChanged, R),
        a.events.unsubscribe(SessionEvent.ApplicationIdChanged, S),
        a.events.unsubscribe(SessionEvent.CredentialsNeeded, I),
        a.events.unsubscribe(SessionEvent.MousePointerChanged, J),
        a.events.unsubscribe(SessionEvent.ShowDefaultMousePointer, K),
        a.events.unsubscribe(SessionEvent.GetRemoteClipboardContent, L),
        a.events.unsubscribe(SessionEvent.ClipboardContentRequest, M),
        a.events.unsubscribe(SessionEvent.Error, F))
    }
    , _ = function(a) {
        var b;
        for (b in KeyCodes)
            if (KeyCodes.hasOwnProperty(b) && a === KeyCodes[b])
                return !0;
        return !1
    }
    , aa = function(a, b) {
        return f.debug("[SessionViewModel] Key down: " + a),
        _(a) || p[KeyCodes.Alt] || p[KeyCodes.Ctrl] || p[KeyCodes.Windows] ? (p[a] = b,
        b ? j.keyDown(a) : j.keyUp(a),
        !0) : !1
    }
    ;
    return k.init = function() {
        a.list(k.feedList),
        d.events.subscribe(SessionProviderEvent.SessionCreated, W),
        d.events.subscribe(SessionProviderEvent.SessionCreateFailed, X),
        d.events.subscribe(SessionProviderEvent.SessionFocused, U),
        d.events.subscribe(SessionProviderEvent.SessionDestroyed, V),
        d.delegate.canvasNeeded = G,
        d.delegate.monitorBounds = H,
        b.events.subscribe(FeedRefreshHelperEvent.FeedRefreshComplete, y),
        i = {},
        i[k.modalTypes.LOADER_MODAL] = {},
        i[k.modalTypes.AUTORECON_MODAL] = {},
        x()
    }
    ,
    k.delegate = new SessionViewModelDelegate,
    k.setLocalClipboardContent = function(a, b) {
        k.clipboard[a] = b
    }
    ,
    k.setRemoteClipboardFormats = function() {
        j.setRemoteClipboardFormats()
    }
    ,
    k.isClipboardReady = function() {
        return j ? j.isClipboardReady() : !1
    }
    ,
    k.getMonitorBounds = function() {
        var a, b, c, d, e, f;
        return a = window.innerWidth - w,
        b = window.innerHeight - v,
        s > a ? (c = s - w,
        d = b - v) : a >= s && t > a ? (c = a,
        d = b) : (c = t - w,
        d = u - v),
        e = 16 * Math.floor(c / 16),
        f = 16 * Math.floor(d / 16),
        {
            width: e,
            height: f
        }
    }
    ,
    k.getCanvasBounds = function() {
        return {
            minWidth: s - w,
            maxWidth: t - v,
            maxHeight: u - v
        }
    }
    ,
    k.postErrorDialogCleanup = function() {
        A(),
        B()
    }
    ,
    k.addModalInstanceForId = function(a, b, c) {
        i[c][a] = b
    }
    ,
    k.getModalInstanceForId = function(a, b) {
        return i[b] && i[b].hasOwnProperty(a) ? (f.log("[SessionViewModel] Retrieved modal instance for session with id " + a),
        i[b][a]) : null 
    }
    ,
    k.resetModalInstanceForId = function(a, b) {
        i[b] && i[b].hasOwnProperty(a) && delete i[b][a]
    }
    ,
    k.disconnectAllSessions = function() {
        d.disconnect(),
        h && h.sendDisconnectClicked(),
        z(),
        A()
    }
    ,
    k.cancelLoadingSessions = function() {
        for (var a in i[k.modalTypes.LOADER_MODAL])
            i[k.modalTypes.LOADER_MODAL] && i[k.modalTypes.LOADER_MODAL].hasOwnProperty(a) && k.disconnectSession(a)
    }
    ,
    k.disconnectSession = function(a, b) {
        var c = d.find(a);
        c && c.disconnect(b)
    }
    ,
    k.cancelAutoreconnect = function() {}
    ,
    k.openPopover = function(a) {
        var b = null ;
        try {
            b = new window.Event("openTrigger")
        } catch (c) {
            b = document.createEvent("Event"),
            b.initEvent("openTrigger", !0, !0)
        }
        document.getElementById(a).dispatchEvent(b)
    }
    ,
    k.closePopover = function(a) {
        var b = null ;
        try {
            b = new window.Event("closeTrigger")
        } catch (c) {
            b = document.createEvent("Event"),
            b.initEvent("closeTrigger", !0, !0)
        }
        document.getElementById(a).dispatchEvent(b)
    }
    ,
    k.getConnectionStateForId = function(a) {
        return m[a]
    }
    ,
    k.getAppListForId = function(a) {
        return k.sessionList[a]
    }
    ,
    k.bookmarkList = function(b) {
        var d, e = a.find(b), f = [];
        for (d in e.bookmarks) {
            var g = c.find(e.bookmarks[d].id);
            f.push(g)
        }
        return f
    }
    ,
    k.hasBookmarks = function(a) {
        return k.bookmarkList(a).length > 0
    }
    ,
    k.shown = function() {
        var a, b;
        f.log("[SessionViewModel] Session shown"),
        z();
        for (a in k.sessionList)
            if (k.sessionList.hasOwnProperty(a)) {
                var c = k.sessionList[a].sessionList;
                for (a in c)
                    c.hasOwnProperty(a) && (b = c[a],
                    $(b, !0))
            }
        j = d.activeSession,
        setTimeout(function() {
            d.invalidateCanvasForActiveConnections()
        }, r)
    }
    ,
    k.dismissed = function() {
        var a, b;
        f.log("[SessionViewModel] Session dissmissed"),
        d.events.unsubscribe(SessionProviderEvent.SessionCreated, W),
        d.events.unsubscribe(SessionProviderEvent.SessionCreateFailed, X),
        d.events.unsubscribe(SessionProviderEvent.SessionFocused, U),
        d.events.unsubscribe(SessionProviderEvent.SessionDestroyed, V);
        for (a in k.sessionList)
            if (k.sessionList.hasOwnProperty(a)) {
                var c = k.sessionList[a].sessionList;
                for (a in c)
                    c.hasOwnProperty(a) && (b = c[a],
                    $(b, !1))
            }
    }
    ,
    k.mouseDown = function(a, b, c) {
        var d = Y(a, b);
        c = Z(c),
        j.mouseDown(d.x, d.y, c),
        q[c] = !0
    }
    ,
    k.mouseUp = function(a, b, c) {
        var d = Y(a, b);
        c = Z(c),
        j.mouseUp(d.x, d.y, c),
        delete q[c]
    }
    ,
    k.mouseMove = function(a, b) {
        var c = Y(a, b);
        j.mouseMove(c.x, c.y)
    }
    ,
    k.mouseWheel = function(a, b) {
        j.mouseWheel(a, b)
    }
    ,
    k.mouseEnter = function() {}
    ,
    k.mouseLeave = function(a, b) {
        var c, d = Y(a, b);
        f.debug("[SessionViewModel] Mouse left canvas mouse position: " + d.x + ":" + d.y),
        d.x < 0 ? d.x = 0 : d.x > k.canvas.width && (d.x = k.canvas.width),
        d.y < 0 ? d.y = 0 : d.y > k.canvas.height && (d.y = k.canvas.height);
        for (c in q)
            q.hasOwnProperty(c) && q[c] && (f.debug("[SessionViewModel Resetting key state for mouse button: " + c),
            j.mouseUp(d.x, d.y, parseInt(c)),
            delete q[c])
    }
    ,
    k.keyPress = function(a) {
        return f.debug("[SessionViewModel] Key pressed: " + a),
        j.keyUnicodeDown(a),
        j.keyUnicodeUp(a),
        !0
    }
    ,
    k.keyDown = function(a) {
        return aa(a, !0)
    }
    ,
    k.keyUp = function(a) {
        return aa(a, !1)
    }
    ,
    k.canvasFocus = function() {
        f.debug("[SessionViewModel] Canvas gains focus")
    }
    ,
    k.canvasLostFocus = function() {
        var a;
        f.debug("[SessionViewModel] Canvas lost focus");
        for (a in p)
            p.hasOwnProperty(a) && p[a] && (f.debug("[SessionViewModel] Resetting key state for: " + a),
            j.keyUp(parseInt(a)),
            p[a] = !1)
    }
    ,
    k.activeSessionId = function() {
        return j ? j.id : null 
    }
    ,
    k.getAppIdForActiveSession = function() {
        return j ? j.getApplicationId() : null 
    }
    ,
    k.getSessionListForAppId = function(a) {
        return k.sessionList[a]
    }
    ,
    k.checkAndSwitchActiveWindow = function(a, b) {
        if (b.is("img")) {
            var c, d = k.getSessionListForAppId(a);
            c = d.sessionList[0].id,
            k.focusToSession(c)
        }
    }
    ,
    k.focusToSession = function(a) {
        f.debug("[SessionViewModel] Session switched to " + a),
        d.focusToSession(a)
    }
    ,
    k.launchBookmark = function(a, b) {
        f.debug("[SessionViewModel] Launching bookmark id: " + a),
        d.createSession(a, null , b),
        l++,
        k.delegate.showWindowLoader && j && 0 !== j.getSiblingCount() && k.delegate.showWindowLoader(),
        h && h.sendAppLaunchLocation(b)
    }
    ,
    k.restoreSessions = function(a) {
        var c = function() {
            var f = d.restoreSessions();
            b.events.unsubscribe(FeedRefreshHelperEvent.FeedRefreshComplete, c),
            b.events.unsubscribe(FeedRefreshHelperEvent.FeedRefreshError, e),
            a(f)
        }
          , e = function() {
            b.events.unsubscribe(FeedRefreshHelperEvent.FeedRefreshComplete, c),
            b.events.unsubscribe(FeedRefreshHelperEvent.FeedRefreshError, e),
            a(!1)
        }
        ;
        b.events.subscribe(FeedRefreshHelperEvent.FeedRefreshComplete, c),
        b.events.subscribe(FeedRefreshHelperEvent.FeedRefreshError, e),
        b.refresh()
    }
    ,
    k.windowSizeChanged = function(a, b) {
        var c, d;
        f.log("[SessionViewModel] View size changed to: " + a + ":" + b);
        for (c in k.sessionList)
            if (k.sessionList.hasOwnProperty(c)) {
                var e = k.sessionList[c].sessionList;
                for (c in e)
                    e.hasOwnProperty(c) && (d = e[c],
                    d.changeResolution(a, b))
            }
    }
    ,
    k
}
;
!function() {
    "use strict";
    function a(a, b) {
        a.sessionId = "6eab2-97abe-61bb7-94ae7",
        a.isEmailValid = !1,
        a.cancel = function() {
            b.dismiss("cancel")
        }
        ,
        a.closeModal = function() {
            b.close("Email Sent")
        }
    }
    angular.module("arahtml5App").controller("SessionShareCtrl", ["$scope", "$uibModalInstance", a])
}(),
function() {
    "use strict";
    function a(a, b, c) {
        a.modalMessage = "Connection to the Remote PC was lost. We're trying to connect again.",
        a.retryMessage = "Number of retries:",
        a.retryState = c.retryState[c.sessionId],
        a.cancel = function() {
            b.close(c.sessionId)
        }
    }
    angular.module("arahtml5App").controller("autoreconCtrl", ["$scope", "$uibModalInstance", "params", a])
}(),
function() {
    "use strict";
    function a(a, b, c) {
        a.cancel = function() {
            b.dismiss("cancel")
        }
        ,
        a.submit = function(a, d) {
            b.close({
                username: a,
                password: d || "",
                params: c
            })
        }
    }
    angular.module("arahtml5App").controller("credPromptCtrl", ["$scope", "$uibModalInstance", a])
}(),
function() {
    "use strict";
    function a(a, b, c) {
        a.ok = function() {
            b.close()
        }
        ,
        a.$evalAsync(function() {
            a.errorTitle = c.errorTitle || Strings.string.ERROR_DIALOG_TITLE,
            a.errorMessage = c.errorMessage
        })
    }
    angular.module("arahtml5App").controller("errorTemplateCtrl", ["$scope", "$uibModalInstance", "params", a])
}(),
function() {
    "use strict";
    function a(a, b, c) {
        a.cancel = function() {
            b.close(c.sessionId)
        }
        ,
        a.connState = c.connState[c.sessionId],
        a.appPackageName = c.appPackageName
    }
    angular.module("arahtml5App").controller("loaderTemplateCtrl", ["$scope", "$uibModalInstance", "params", a])
}(),
function() {
    "use strict";
    function a(a, b) {
        switch (a.message = b.message,
        b.toastType) {
        case "pasteToast":
            a.type = 1;
            break;
        case "infoToast":
            a.type = 2
        }
    }
    angular.module("arahtml5App").controller("toastCtrl", ["$scope", "params", a])
}(),
angular.module("arahtml5App").run(["$templateCache", function(a) {
    "use strict";
    a.put("app/Common/FeedbackTemplate.html", '<!--Raw HTML template to show a modal whose content is the list of invitations--><div class="modal-header centered" aria-labelledby=ccInvitationsModal aria-hidden=true><h4 class=modal-title style="text-transform: none">Azure RemoteApp Web Client</h4><a href=# class="close close-button qoe-close" ng-click=cancel() style="margin-top: -22px"><i class="o365 o365-fw o365-cross o365-20x"></i></a></div><div class=modal-body style="padding: 24px; padding-top: 20px"><form class=form-horizontal name=shareForm method=post role=form action=""><div class="form-group feedback"><label class=control-label>Rate your experience.</label></div><div class="form-group feedback" style="margin-bottom: 20px"><div ng-init="rating = 0"><feedback-stars rating-stars=rating></feedback-stars></div></div><div class="form-group feedback"><div class="input-group col-lg-12">Let us know what you liked or what we can do better.</div></div><div class="form-group feedback"><div style="padding: 0; width: 100%"><textarea rows=6 class="form-control feedback" id=feedback-message placeholder="We welcome your feedback and suggestions. Thanks!" ng-model=feedback></textarea></div></div><div class="form-group feedback"><div class="input-group col-lg-12">To protect your privacy, please do not include personal information in your feedback. Review our <a href=http://www.microsoft.com/en-us/privacystatement/default.aspx target=_blank>privacy policy.</a></div></div><div class="form-group feedback" style="padding: 0"><div class=col-lg-12 style="padding: 0"><input type=checkbox checklist-model=isOptionChecked checklist-value=option checklist-onlyone=true> Email address (optional)<div style="width: 250px; margin-top: 6px"><input type=email class="form-control feedback" style="padding-right: 9px; padding-top: 3px" name=email id=email placeholder=someone@example.com ng-model="email"></div></div></div></form></div><div class=modal-footer><send-feedback-button email-id=email contact-sender=isOptionChecked feedback-body=feedback rating-stars=rating send-feedback=sendFeedback></send-feedback-button><button class="btn btn-default" ng-click=cancel()>Cancel</button></div>'),
    a.put("app/Common/Legal.html", '<!--Raw HTML template to show a modal whose content is the list of invitations--><div class="modal-header centered" aria-labelledby=ccInvitationsModal aria-hidden=true><h4 class=modal-title style="text-transform: none; font-weight: normal">Third Party Notices</h4><a href=# class="close close-button qoe-close" ng-click=cancel() style="margin-top: -22px"><i class="o365 o365-fw o365-cross o365-20x"></i></a></div><div class=modal-body style="padding: 24px; padding-top: 20px"><div style="height: 400px; width: 100%"><div style="height: inherit; overflow: auto; word-wrap:  break-word"><div ng-bind-html=licenseText></div></div></div></div><div class=modal-footer><button class="btn btn-primary" ng-click=cancel()>Close</button></div>'),
    a.put("app/Common/loadingSpinner.html", "<div id=circularG><div id=circularG_1 class=circularG></div><div id=circularG_2 class=circularG></div><div id=circularG_3 class=circularG></div><div id=circularG_4 class=circularG></div><div id=circularG_5 class=circularG></div><div id=circularG_6 class=circularG></div><div id=circularG_7 class=circularG></div><div id=circularG_8 class=circularG></div></div><span class=loader-text>Loading...</span>"),
    a.put("app/Common/starsTemplate.html", '<div class="active-stars space"><ul class=ratingStars style="height: 28px"><li class="mdl mdl-fw mdl-EmptyStar ratingStar" data-value=1></li><li class="mdl mdl-fw mdl-EmptyStar ratingStar" data-value=2></li><li class="mdl mdl-fw mdl-EmptyStar ratingStar" data-value=3></li><li class="mdl mdl-fw mdl-EmptyStar ratingStar" data-value=4></li><li class="mdl mdl-fw mdl-EmptyStar ratingStar" data-value=5></li></ul><input type=hidden name=rating_stars value=5></div>'),
    a.put("app/ConnectionCenter/BrowserUnsupportedDialogTemplate.html", '<!--Raw HTML template to show a modal whose content is the list of invitations--><div class="modal-header centered" aria-labelledby="feature unsupported modal" aria-hidden=true style="padding-bottom: 0"><h4 class=modal-title style="text-transform: none; font-weight: normal"><span style="margin-right: 14px">{{message}}</span> <a href=# class="close close-button audio-dialog-close" ng-click=dismiss()><i class="o365 o365-fw o365-cross o365-20x"></i></a></h4></div><div class=modal-body style="padding: 10px 24px 0 24px"><form class=form-horizontal name=shareForm method=post role=form action=""><div class="form-group feedback" style="margin-bottom: 15px"><span>{{supportedBrowserMsg}}</span></div></form><button class="btn btn-primary skip-button" style="margin-bottom: 20px; width: 112px; margin-left: 71%" ng-click=dismiss()>Got it</button></div>'),
    a.put("app/ConnectionCenter/ConnectionCenter.html", '<div route-change-handler><div id=navbar-main ng-controller="ConnectionCenterCtrl as cc" ng-init="showFirstTime = false" remove-tooltips><div ng-show="showFirstTime == true"><div ng-include="\'app/ConnectionCenter/showFirstTimeInvitations.html\'"></div></div><!-- Load the connection center navbar --><div ng-include="\'app/ConnectionCenter/ConnectionCenterNavbar.html\'"></div><div class=container ng-controller="BookmarkCtrl as ccBookmarkCtrl" style="padding-right: 0; padding-left: 0"><div class=row style="margin-top: 40px"><div class=row style="margin-left: -6px"><div class=cc-loader ng-if=cc.showLoadingAnimation><div class="dark loading-animation" style="margin-left: -160px"><div></div><div></div><div></div><div></div><div></div></div><div style="text-align: center">Loading...</div></div><div class="col-lg-6 col-lg-offset-3 centered rdhtml5-nocontent" ng-show="cc.showEmptyCCMessage && cc.showInvitationsPanel()">It is lonely here :(. <a href=javascript:void(0) ng-click=cc.openInvitationsModal()>Accept invitations</a> to see published apps.</div><div class="col-lg-6 col-lg-offset-3 centered rdhtml5-nocontent" ng-show="cc.showEmptyCCMessage && !cc.showInvitationsPanel()">It looks like your Administrator hasn\'t setup any apps yet. We have a free trial, but we can\'t get to it right now. Try again later.</div><div class="col-sm-12 col-md-12 col-lg-12" style="padding-right: 0"><uib-accordion close-others=oneAtATime><!-- This directive controls the behavior of bookmark accordion. An accordion, when open, is closed\n              when the feed refresh button is clicked and is disabled (i.e., cannot be opened) until the refresh\n              is complete.\n                -- status.open used to change icon indicating status of accordion and used to close the accordion\n                if open --><uib-accordion-group ng-repeat="feed in ccBookmarkCtrl.vm.feedList" ng-init="bookmarkList = ccBookmarkCtrl.vm.bookmarkList(feed.id); status.open = true" is-open=status.open><uib-accordion-heading><ul class=list-inline style="margin-bottom: 2px; padding: 12px 0 11px 0"><!--ng-class="{\'fa-chevron-down\': status.open, \'fa-chevron-right\': !status.open}"--><li><i class="mdl mdl-fw mdl-ChevronRightBold chevron-rotate" ng-class="{\'chevron-rotate-down\': status.open == true,\n                           \'chevron-rotate-right\': status.open == false}" style="font-size: 12px; width: 1.4em"></i></li><li class=panel-feedlabel><a href=javascript:void(0) style="color: #333333 !important;\n                      font-size: 14px">{{feed.label()}}</a></li></ul></uib-accordion-heading><!-- This part is rendered when user has selected more than one feed --><!--Fixes broken alignment when screen height < 448px and width <= 400px--><div class=container style="min-width: 370px; min-height: 315px"><div ng-repeat="bookmark in bookmarkList" ng-if="$index % 12 == 0" class=row><!-- 12 columns per row--><div class="col-xs-4 col-sm-3 col-md-2 col-lg-1 centered rdhtml5-app" ng-if="$index < bookmarkList.length"><a href="" ui-sref="session({id: bookmarkList[$index].id})"><div style="display: block" class=rdhtml5-tooltip title={{bookmarkList[$index].label()}}><img class="img img-responsive rdhtml5-appicons" ng-src={{bookmarkList[$index].thumbnail}} alt=""><h6>{{bookmarkList[$index].label()}}</h6></div></a></div><div class="col-xs-4 col-sm-3 col-md-2 col-lg-1 centered rdhtml5-app" ng-if="($index + 1) < bookmarkList.length"><a href="" ui-sref="session({id: bookmarkList[$index + 1].id})"><div style="display: block" class=rdhtml5-tooltip title="{{bookmarkList[$index + 1].label()}}"><img class="img img-responsive rdhtml5-appicons" ng-src="{{bookmarkList[$index + 1].thumbnail}}" alt=""><h6>{{bookmarkList[$index + 1].label()}}</h6></div></a></div><div class="col-xs-4 col-sm-3 col-md-2 col-lg-1 centered rdhtml5-app" ng-if="($index + 2) < bookmarkList.length"><a href="" ui-sref="session({id: bookmarkList[$index + 2].id})"><div style="display: block" class=rdhtml5-tooltip title="{{bookmarkList[$index + 2].label()}}"><img class="img img-responsive rdhtml5-appicons" ng-src="{{bookmarkList[$index + 2].thumbnail}}" alt=""><h6>{{bookmarkList[$index + 2].label()}}</h6></div></a></div><div class="col-xs-4 col-sm-3 col-md-2 col-lg-1 centered rdhtml5-app" ng-if="($index + 3) < bookmarkList.length"><a href="" ui-sref="session({id: bookmarkList[$index + 3].id})"><div style="display: block" class=rdhtml5-tooltip title="{{bookmarkList[$index + 3].label()}}"><img class="img img-responsive rdhtml5-appicons" ng-src="{{bookmarkList[$index + 3].thumbnail}}" alt=""><h6>{{bookmarkList[$index + 3].label()}}</h6></div></a></div><div class="col-xs-4 col-sm-3 col-md-2 col-lg-1 centered rdhtml5-app" ng-if="($index + 4) < bookmarkList.length"><a href="" ui-sref="session({id: bookmarkList[$index + 4].id})"><div style="display: block" class=rdhtml5-tooltip title="{{bookmarkList[$index + 4].label()}}"><img class="img img-responsive rdhtml5-appicons" ng-src="{{bookmarkList[$index + 4].thumbnail}}" alt=""><h6>{{bookmarkList[$index + 4].label()}}</h6></div></a></div><div class="col-xs-4 col-sm-3 col-md-2 col-lg-1 centered rdhtml5-app" ng-if="($index + 5) < bookmarkList.length"><a href="" ui-sref="session({id: bookmarkList[$index + 5].id})"><div style="display: block" class=rdhtml5-tooltip title="{{bookmarkList[$index + 5].label()}}"><img class="img img-responsive rdhtml5-appicons" ng-src="{{bookmarkList[$index + 5].thumbnail}}" alt=""><h6>{{bookmarkList[$index + 5].label()}}</h6></div></a></div><div class="col-xs-4 col-sm-3 col-md-2 col-lg-1 centered rdhtml5-app" ng-if="($index + 6) < bookmarkList.length"><a href="" ui-sref="session({id: bookmarkList[$index + 6].id})"><div style="display: block" class=rdhtml5-tooltip title="{{bookmarkList[$index + 6].label()}}"><img class="img img-responsive rdhtml5-appicons" ng-src="{{bookmarkList[$index + 6].thumbnail}}" alt=""><h6>{{bookmarkList[$index + 6].label()}}</h6></div></a></div><div class="col-xs-4 col-sm-3 col-md-2 col-lg-1 centered rdhtml5-app" ng-if="($index + 7) < bookmarkList.length"><a href="" ui-sref="session({id: bookmarkList[$index + 7].id})"><div style="display: block" class=rdhtml5-tooltip title="{{bookmarkList[$index + 7].label()}}"><img class="img img-responsive rdhtml5-appicons" ng-src="{{bookmarkList[$index + 7].thumbnail}}" alt=""><h6>{{bookmarkList[$index + 7].label()}}</h6></div></a></div><div class="col-xs-4 col-sm-3 col-md-2 col-lg-1 centered rdhtml5-app" ng-if="($index + 8) < bookmarkList.length"><a href="" ui-sref="session({id: bookmarkList[$index + 8].id})"><div style="display: block" class=rdhtml5-tooltip title="{{bookmarkList[$index + 8].label()}}"><img class="img img-responsive rdhtml5-appicons" ng-src="{{bookmarkList[$index + 8].thumbnail}}" alt=""><h6>{{bookmarkList[$index + 8].label()}}</h6></div></a></div><div class="col-xs-4 col-sm-3 col-md-2 col-lg-1 centered rdhtml5-app" ng-if="($index + 9) < bookmarkList.length"><a href="" ui-sref="session({id: bookmarkList[$index + 9].id})"><div style="display: block" class=rdhtml5-tooltip title="{{bookmarkList[$index + 9].label()}}" tooltip-placement=bottom tooltip-trigger="mouseenter click" tooltip-popup-delay=250><img class="img img-responsive rdhtml5-appicons" ng-src="{{bookmarkList[$index + 9].thumbnail}}" alt=""><h6>{{bookmarkList[$index + 9].label()}}</h6></div></a></div><div class="col-xs-4 col-sm-3 col-md-2 col-lg-1 centered rdhtml5-app" ng-if="($index + 10) < bookmarkList.length"><a href="" ui-sref="session({id: bookmarkList[$index + 10].id})"><div style="display: block" class=rdhtml5-tooltip title="{{bookmarkList[$index + 10].label()}}"><img class="img img-responsive rdhtml5-appicons" ng-src="{{bookmarkList[$index + 10].thumbnail}}" alt=""><h6>{{bookmarkList[$index + 10].label()}}</h6></div></a></div><div class="col-xs-4 col-sm-3 col-md-2 col-lg-1 centered rdhtml5-app" ng-if="($index + 11) < bookmarkList.length"><a href="" ui-sref="session({id: bookmarkList[$index + 11].id})"><div style="display: block" class=rdhtml5-tooltip title="{{bookmarkList[$index + 11].label()}}"><img class="img img-responsive rdhtml5-appicons" ng-src="{{bookmarkList[$index + 11].thumbnail}}" alt=""><h6>{{bookmarkList[$index + 11].label()}}</h6></div></a></div><!-- End of 12 columns per row--></div></div></uib-accordion-group><!-- end of a group of bookmarks --></uib-accordion><!-- end of an entire feed list --></div><!-- col-lg --></div></div><!-- row --></div><!-- container --></div></div>'),
    a.put("app/ConnectionCenter/ConnectionCenterNavbar.html", '<!--ng-included navbar for the connection center--><!-- Fixed navbar --><div class="navbar navbar-inverse navbar-fixed-top"><div class=navbar-inner ng-themeswitcher><div class="container no-padding"><!--<div class="navbar-header">--><!--<a class="navbar-brand" style="padding-right: 10px;" href="" ng-click="cc.goHome()">--><!--<i class="mdl mdl-WindowsLogo mdl-fw" style="font-size:20px; color:#3498db"></i>--><!--</a>--><!--</div>--><div class="navbar-collapse collapse"><ul class="nav navbar-nav navbar-left"><li><a style="padding-left: 10px; padding-top: 8px" href="" ng-click=cc.goHome()>Azure RemoteApp</a></li></ul><ul class="nav navbar-nav navbar-right"><li ng-if=false class="dropdown arahtml5-navitem"><a class="dropdown-toggle arahtml5-navicon-padding rdhtml5-tooltip" href=javascript:void(0); ui-sref=session role=button aria-expanded=false uib-dropdown-toggle title="Return to session"><i class="mdl mdl-BackToSession mdl-fw rdhtml5-cc-navicons"></i></a></li><li class="dropdown arahtml5-navitem" uib-dropdown><a class="dropdown-toggle arahtml5-navicon-padding rdhtml5-tooltip" href=javascript:void(0); role=button aria-expanded=false uib-dropdown-toggle title=Options><i class="mdl mdl-Gear mdl-fw rdhtml5-cc-navicons"></i></a><ul class=dropdown-menu role=menu><li ng-if=cc.showInvitationsPanel()><a href=javascript:void(0) ng-click=cc.openInvitationsModal()>Invitations</a></li><!--<li><a href="javascript:void(0)" ng-click="cc.openOptionsModal()">Options</a></li>--><li><a href=javascript:void(0) ng-click=cc.sendFeedback()>Feedback</a></li><li><a href=javascript:void(0) ng-click=cc.openLegalModal()>Legal</a></li></ul></li><li class="dropdown arahtml5-navitem" style="padding-right: 10px" uib-dropdown><a class="dropdown-toggle rdhtml5-tooltip" style="padding-top: 11px; line-height: 15px; padding-bottom: 12px" href=javascript:void(0); uib-dropdown-toggle title="User Account"><div class=rdhtml5-username navbar-username-display></div><!--<div class="rdhtml5-userorg">Contoso</div>--></a><ul class=dropdown-menu role=menu><li><a href="" navbar-logout-button></a></li></ul></li></ul></div><!--/.nav-collapse --></div></div></div>'),
    a.put("app/ConnectionCenter/Invitations.html", '<div class=sidepanel-content><a href=javascript:void(0) class=sidepanel-options ng-click="accept(); cc.showInvitationsPanel = false;"><i class="o365 o365-fw o365-check o365-20x"></i>Accept</a> <a href=javascript:void(0) class=sidepanel-options ng-click="cancel(); cc.showInvitationsPanel = false;" style="padding-left: 40px"><i class="o365 o365-fw o365-cross o365-20x"></i>Cancel</a><div class=rdhtml5-invitationspanel-content><h4 class=rdhtml5-invitationspanel-title>Invitations</h4><div class=sidepanel-warning>Only accept invitations from sources you trust.</div><loading-spinner ng-if=showSpinner></loading-spinner><div class=rdhtml5-invitationspanel-body><ul class=list-unstyled><li ng-repeat="invite in vm.invitationList" style="margin-bottom: 22px"><input type=checkbox class=pull-left checklist-model=vm.invitationList.checked checklist-value=invite ng-click=invitationSelectionChanged(invite) id={{invite.id}}><label for={{invite.id}}></label><span class=rdhtml5-sidepanel-optionlist>{{invite.friendlyName}}, from <a href=javascript:void(0) class=rdhtml5-bluelinks>{{invite.email}}</a></span><div class=rdhtml5-sidepanel-privacy><a href=http://www.microsoft.com/en-us/privacystatement/default.aspx class=rdhtml5-bluelinks style="margin-left: 25px">Privacy Policy</a></div></li></ul></div><hr style="bottom: 60px"><div class=sidepanel-bottom-content><div style="margin-bottom: 6px">Invitations for <span navbar-username-display></span></div><div><ul class=list-inline><li><a href="" class=rdhtml5-bluelinks navbar-logout-button></a></li><li style="padding-left: 230px"><a href=http://www.microsoft.com/en-us/privacystatement/default.aspx class=rdhtml5-bluelinks>Azure RemoteApp Privacy Statement</a></li></ul></div></div></div></div>'),
    a.put("app/ConnectionCenter/Options.html", '<div class=sidepanel-content><a href=javascript:void(0) class=sidepanel-options ng-click="accept(); cc.showOptionsPanel = false;"><i class="o365 o365-fw o365-check o365-20x"></i>OK</a> <a href=javascript:void(0) class=sidepanel-options ng-click="cancel(); cc.showOptionsPanel = false;" style="padding-left: 40px"><i class="o365 o365-fw o365-cross o365-20x"></i>Cancel</a><div class=rdhtml5-invitationspanel-content><h4 class=rdhtml5-invitationspanel-title>Options</h4><br><div class=rdhtml5-invitationspanel-body><ul class=list-unstyled><li>Help Improve Remote Desktop</li><li ng-repeat="option in vm.optionsList"><br><input type=checkbox class=pull-left checklist-model=vm.optionsList.checked checklist-value=option.name checklist-change="" checklist-onlyone=true id=telemetryOption><label for=telemetryOption></label><span class=rdhtml5-sidepanel-optionlist>{{option.name}}</span></li></ul></div></div></div>'),
    a.put("app/ConnectionCenter/showFirstTimeInvitations.html", '<div class=rdhtml5-invitations-content ng-controller=firstTimeInvitationsCtrl id=rdhtml5-FI><div class=rdhtml5-content-box><div class=rdhtml5-image-content><img src="assets/images/default_signin_illustration.e68f99f0.png"></div><div class=rdhtml5-text-content><div class=rdhtml5-panel-content><h4 class=rdhtml5-panel-title>Invitations</h4><div class=panel-warning>Only accept invitations from sources you trust.</div><div class=rdhtml5-panel-body><ul class=list-unstyled><li ng-repeat="invite in vm.invitationList" style="padding-bottom: 22px"><input type=checkbox class=pull-left checklist-model=vm.invitationList.checked checklist-value=invite ng-click="invitationSelectionChanged(invite.id, invite.enabled)" id={{invite.id}}><label for={{invite.id}}></label><span class=panel-optionList>{{invite.friendlyName}}, from <a href=javascript:void(0) class=rdhtml5-panel-links>{{invite.email}}</a></span><div class=rdhtml5-sidepanel-privacy><a href=javascript:void(0) class=rdhtml5-panel-links style="margin-left: 25px">Privacy Policy</a></div></li></ul></div><div class=rdhtml5-button-group><button type=button class="btn btn-primary" ng-click=accept() dismiss-element show-first-time=$parent.$parent.showFirstTime>Accept</button> <button type=button class="btn btn-primary skip-button" ng-click=cancel()>Skip for Now</button></div><div class=rdhtml5-panel-bottom><div style="margin-top: 40px; margin-bottom: 16px"><a href=javascript:void(0) class=rdhtml5-panel-links>Azure RemoteApp Privacy Statement</a></div><div style="margin-bottom: 6px">Invitations for <span navbar-username-display></span> <span style="margin-left: 6px"><a href=javascript:void(0) class=rdhtml5-panel-links ng-click=logOut() navbar-logout-button></a></span></div></div></div></div></div></div>'),
    a.put("app/Session/Session.html", '<div class=splash-content><!-- All screens will be painted on the same canvas, under the same controller.\n  This canvas will be passed to different connection objects depending on active connection--><div class=top-layer id=background-loader><loading-spinner class=top-spinner loader-type=sessionLoader></loading-spinner></div><div class=main-container><div class=canvas-container><canvas id=canvas tabindex=1 rd-input rd-canvas canvas-position-handler canvas-focus-handler></canvas></div></div><div class=rdhtml5-sessionLoader><div class=loading-animation style="margin-left: -160px" ng-if=showWindowLoader><div></div><div></div><div></div><div></div><div></div></div></div><!-- The initial loading screen shown when a connection starts--><div id=rdhtml5-insession-view class=dark><div class=rdhtml5-nav-menu><div class="container-fluid no-padding"><div class="centered rdhtml5-nocontent" ng-show=false><a href=javascript:void(0) ng-click=openInvitationsModal()>Accept invitations</a> to see published apps.</div><!-- Display all apps and their respective feed friendly names in the "start menu" --><!-- Hide empty feeds--><div ng-repeat-start="feed in vm.feedList | filter: hasBookmarks" ng-init="bookmarkList = vm.bookmarkList(feed.id)"><div style="margin-bottom: 20px; font-weight: bold" ng-style="{\'margin-top\': $first ? \'0\' : \'30px\'}">{{feed.friendlyName}}</div></div><div class="container no-padding"><div ng-repeat="bookmark in bookmarkList" ng-if="$index % 6 == 0" class=row ng-style="{\'margin-bottom\': $index >= (bookmarkList.length - 6) ?  \'0\' : \'5px\'}"><div class="col-xs-6 col-sm-4 col-md-2 col-lg-2 centered" ng-if="$index < bookmarkList.length" ng-click="vm.launchBookmark(bookmarkList[$index].id, 2)" style="cursor: pointer"><a href=javascript:void(0)><img class="img img-responsive rdhtml5-appicons" ng-src={{bookmarkList[$index].thumbnail}} alt=""><h6>{{bookmarkList[$index].label()}}</h6></a></div><div class="col-xs-6 col-sm-4 col-md-2 col-lg-2 centered" ng-if="($index + 1) < bookmarkList.length" ng-click="vm.launchBookmark(bookmarkList[$index + 1].id, 2)" style="cursor: pointer"><a href=javascript:void(0)><img class="img img-responsive rdhtml5-appicons" ng-src="{{bookmarkList[$index + 1].thumbnail}}" alt=""><h6>{{bookmarkList[$index + 1].label()}}</h6></a></div><div class="col-xs-6 col-sm-4 col-md-2 col-lg-2 centered" ng-if="($index + 2) < bookmarkList.length" ng-click="vm.launchBookmark(bookmarkList[$index + 2].id, 2)" style="cursor: pointer"><a href=javascript:void(0)><img class="img img-responsive rdhtml5-appicons" ng-src="{{bookmarkList[$index + 2].thumbnail}}" alt=""><h6>{{bookmarkList[$index + 2].label()}}</h6></a></div><div class="col-xs-6 col-sm-4 col-md-2 col-lg-2 centered" ng-if="($index + 3) < bookmarkList.length" ng-click="vm.launchBookmark(bookmarkList[$index + 3].id, 2)" style="cursor: pointer"><a href=javascript:void(0)><img class="img img-responsive rdhtml5-appicons" ng-src="{{bookmarkList[$index + 3].thumbnail}}" alt=""><h6>{{bookmarkList[$index + 3].label()}}</h6></a></div><div class="col-xs-6 col-sm-4 col-md-2 col-lg-2 centered" ng-if="($index + 4) < bookmarkList.length" ng-click="vm.launchBookmark(bookmarkList[$index + 4].id, 2)" style="cursor: pointer"><a href=javascript:void(0)><img class="img img-responsive rdhtml5-appicons" ng-src="{{bookmarkList[$index + 4].thumbnail}}" alt=""><h6>{{bookmarkList[$index + 4].label()}}</h6></a></div><div class="col-xs-6 col-sm-4 col-md-2 col-lg-2 centered" ng-if="($index + 5) < bookmarkList.length" ng-click="vm.launchBookmark(bookmarkList[$index + 5].id, 2)" style="cursor: pointer"><a href=javascript:void(0)><img class="img img-responsive rdhtml5-appicons" ng-src="{{bookmarkList[$index + 5].thumbnail}}" alt=""><h6>{{bookmarkList[$index + 5].label()}}</h6></a></div></div></div><div ng-repeat-end></div></div></div><div id=rdhtml5-insession-navbar ng-init="isStarterOpen = false"><div class=rdhtml5-nav-menuBeak></div><!-- Left Elements --><ul class="nav navbar-nav session-nav navbar-left" style="height: 100%"><li class="dropdown arahtml5-navitem rdhtml5-navitem-border" in-session-app-starter is-starter-open=isStarterOpen><a href=javascript:void(0) class=rdhtml5-tooltip style="height: 40px; padding: 9px 10px 0 13px" title="Launch Apps"><i class="o365 o365-waffle" style="font-size: 20px; color:#fff; width: 20px"></i></a></li><li class="dropdown arahtml5-navitem logo rdhtml5-navitem-border"><!--<a href="javascript:void(0)" ng-click="backToCC()" class="arahtml5-navicon-padding rdhtml5-logo rdhtml5-tooltip"--><!--title="Back to connection center">--><!--&lt;!&ndash;<i class="mdl mdl-Remote mdl-fw" style="font-size: 20px; color:#db5510;"></i>&ndash;&gt;--><!--<span>Azure RemoteApp</span>--><!--</a>--><a href=javascript:void(0) style="cursor: default" class="arahtml5-navicon-padding rdhtml5-logo"><!--<i class="mdl mdl-Remote mdl-fw" style="font-size: 20px; color:#db5510;"></i>--><span>Azure RemoteApp</span></a></li></ul><!-- Right elements--><ul class="nav navbar-nav session-nav navbar-right"><!--GlobalUtils.settings.featureSettings.enableClipboard--><li class="dropdown arahtml5-navitem" uib-dropdown ng-if="clipboardEnabled && vm.isClipboardReady()"><a class="dropdown-toggle arahtml5-navicon-padding rdhtml5-tooltip" href=javascript:void(0) title="Copy and paste text in and out of RemoteApp" uib-dropdown-toggle><i class="mdl mdl-fw mdl-CopyPaste rdhtml5-cc-navicons"></i> <span class=rdhtml5-clipboardText>Clipboard</span></a><ul class=dropdown-menu role=menu><li><a href=javascript:void(0) ng-click=openCopyModal()>Get copied text from RemoteApp</a></li><li><a href=javascript:void(0) ng-click=openPasteModal()>Send copied text to RemoteApp</a></li></ul></li><li class="dropdown arahtml5-navitem" style="border-left: none"><a class="arahtml5-navicon-padding rdhtml5-tooltip" href=javascript:void(0) title="Back to Home"><i class="mdl mdl-fw mdl-BackToHome rdhtml5-cc-navicons" ng-click=backToCC()></i></a></li><li class="dropdown arahtml5-navitem" ng-init="isFullscreenEnabled = false" in-session-full-screen-mode is-fullscreen-enabled=isFullscreenEnabled telemetry-delegate=sendFullScreenTelemetry(timestamp) style="border-left: none"><a class="arahtml5-navicon-padding rdhtml5-tooltip" href=javascript:void(0) title="Full Screen"><i class="mdl mdl-fw rdhtml5-cc-navicons" ng-class="{\'mdl-FullScreen\': isFullscreenEnabled == false,\n            \'mdl-BackToWindow\': isFullscreenEnabled == true }"></i></a></li><li class="dropdown arahtml5-navitem" uib-dropdown><a class="dropdown-toggle arahtml5-navicon-padding rdhtml5-tooltip" href=javascript:void(0); uib-dropdown-toggle role=button aria-expanded=false title=Options><i class="mdl mdl-Gear mdl-fw rdhtml5-cc-navicons"></i></a><ul class=dropdown-menu role=menu><!--<li><a href="javascript:void(0)" ng-click="openInvitationsModal()">Invitations</a></li>--><!--<li><a href="javascript:void(0)" ng-click="openOptionsModal()">Options</a></li>--><li><a href=javascript:void(0) ng-click=sendFeedback()>Feedback</a></li></ul></li><li class="dropdown arahtml5-navitem" uib-dropdown><a class="dropdown-toggle rdhtml5-tooltip" href=javascript:void(0); uib-dropdown-toggle style="padding-top: 11px;\n          line-height: 15px; padding-bottom: 12px; padding-right: 10px" title="User Account" role=button aria-expanded=false><div class=rdhtml5-username navbar-username-display></div><!--<div class="rdhtml5-userorg">Contoso</div>--></a><ul class=dropdown-menu role=menu><li><a href=javascript:void(0) navbar-logout-button></a></li></ul></li></ul><!-- Icons in the navbar showing list of active sessions --><ul class=list-inline style="margin-bottom: 0; height: 100%; float: none; overflow-x: auto" insession-activeappcontrol-outer-directive scroll-handler><!-- Inline 5px padding overrides bootstrap\'s .list-inline > li:first-child 0 padding --><li class=rdhtml5-insession-activeapps ng-repeat="(key, appGroup) in vm.sessionList" style="padding-left: 3px; padding-right: 0" in-session-active-apps-list><div class="rdhtml5-insession-appicons rdhtml5-insession-activeicon" id={{key}} ng-attr-sessionid={{key}} uib-popover-template="\'app/Session/popoverTemplate.html\'" popover-placement=bottom popover-trigger=openTrigger popover-animation=false ng-mouseenter=openPopover(key)><img class="img img-responsive" ng-src={{appGroup.sessionList[0].getThumbnail()}}></div></li></ul></div></div></div>'),
    a.put("app/Session/SessionShare.html", '<!--Raw HTML template to show a modal whose content is the list of invitations--><div class="modal-header centered" aria-labelledby=ccInvitationsModal aria-hidden=true modal-position-handler><h4 class=modal-title>Share this session!</h4></div><div class=modal-body><form class=form-horizontal name=shareForm method=post role=form action=""><div class=form-group><a class="control-label col-md-4">Copy Link</a><div class="col-md-6 input-group"><p class=form-control-static>{{sessionId}}</p></div></div><div class="form-group has-feedback"><label class="control-label col-md-4">Email Address</label><div class="col-md-6 input-group" ng-class="{\'has-warning\' : shareForm.email.$invalid, \'has-success\': !shareForm.email.$invalid}"><span class=input-group-addon>@</span> <input type=email class=form-control style="padding-right: 9px" name=email id=email placeholder=someone@example.com ng-model=email required> <span class=input-group-addon><i class=mdl ng-class="{\'mdl-ChromeClose\' : shareForm.email.$invalid,\n              \'mdl-CheckMark\': !shareForm.email.$invalid}"></i></span></div></div><div class=form-group><label class="control-label col-md-4">Message</label><div class=col-md-6><textarea rows=6 class=form-control placeholder="Would you like to try my session\n        running MS Word? I have some docs created and saved for you and would like you to access them\n        from a button away." ng-model=messageBody></textarea></div></div></form></div><div class=modal-footer><send-email-button email-id=email session-id=sessionId message-body=messageBody close-modal=closeModal is-disabled=shareForm.email.$invalid>Send</send-email-button><button class="btn btn-default" ng-click=cancel()>Cancel</button></div>'),
    a.put("app/Session/SessionTemplate.html", "<section class=splash modal-render={{$isRendered}} modal-in-class=splash-open><div class=splash-inner id=session-container ng-transclude></div></section>"),
    a.put("app/Session/autoreconDialogTemplate.html", '<!-- Loading container --><div class=loading-container modal-type=0><div class=loader-background><div class=loader-contentbox><div class=loading-animation><div></div><div></div><div></div><div></div><div></div></div><div class="loading-status autorecon-status">{{modalMessage}}</div><div class=autorecon-retrycount>{{retryMessage}} {{retryState.retryCount}}</div><button class="loading-cancel-button btn btn-success" ng-click=cancel()>Cancel</button></div></div></div>'),
    a.put("app/Session/clipboardTemplate.html", '<!--Raw HTML template to show a modal whose content is the list of invitations--><div class="modal-header centered" aria-labelledby=clipboardModal aria-hidden=true style="padding-bottom: 0"><h4 class=modal-title style="text-transform: none; font-weight: normal"><span ng-if="modalType == \'copy\'"><span ng-if="copyText !== undefined">Get copied text from RemoteApp</span> <span ng-if="copyText === undefined">There\'s nothing to copy.</span></span> <span ng-if="modalType == \'paste\'">Send copied text to RemoteApp</span> <a href=# class="close close-button qoe-close" ng-click=dismiss()><i class="o365 o365-fw o365-cross o365-20x"></i></a> <span ng-if="modalType == \'copy\' && copyText !== undefined" class=rdhtml5-copytext>Press {{keyShortcut}} + C to send this text to your local device.</span></h4></div><div class=modal-body style="padding: 10px 24px 0 24px"><form class=form-horizontal name=shareForm method=post role=form action=""><div class="form-group feedback" style="margin-bottom: 24px"><div style="padding: 0; width: 100%" ng-if="(modalType === \'copy\' && copyText !== undefined) || modalType === \'paste\'"><textarea rows=6 ng-model=$parent.copyText ng-change=contentChanged() class="form-control feedback" ng-attr-placeholder="Press {{keyShortcut}} + V to paste into the session." autofocus textarea-handler modal-type={{modalType}} close-modal=close(result) text-content={{$parent.copyText}}></textarea></div><span ng-if="modalType === \'copy\' && copyText === undefined">Copy some text inside RemoteApp, and then try again.</span></div></form><button class="btn btn-primary skip-button" ng-if="copyText === undefined && modalType === \'copy\'" style="margin-bottom: 20px; width: 112px; margin-left: 78%" ng-click=dismiss()>Got it</button></div>'),
    a.put("app/Session/credentialPromptTemplate.html", '<div class=modal-header aria-labelledby=credPromptModal aria-hidden=true><h3>Enter your credentials</h3></div><form><div class=modal-body style="padding: 20px 40px 40px 40px"><div class=form-group><label>User name</label><input class=form-control style="display: inline-block; width: 400px; margin-left: 30px" placeholder=Username ng-model=user.user disabled><label style="margin-top: 20px">Password</label><input type=password class=form-control style="display: inline-block; width: 400px; margin-left: 38px" placeholder=Password ng-model=user.password username-autofill user-name=user.user password=user.password autofocus></div></div><div class=modal-footer><button class="btn btn-primary" ng-click="submit(user.user, user.password)">Submit</button> <button class="btn btn-default" ng-click=cancel()>Cancel</button></div></form>'),
    a.put("app/Session/errorDialogTemplate.html", '<!-- Error Dialog --><div class=error-container><div class=error-contentbox><div class=error-status>{{errorTitle}}</div><div class=error-message>{{errorMessage}}</div><button class="btn btn-success error-primary-button" ng-click=ok()>OK</button></div></div>'),
    a.put("app/Session/loaderTemplate.html", '<!-- Loading container --><div class=loading-container><div class=loader-background><div class=loader-contentbox><div class=loading-animation><div></div><div></div><div></div><div></div><div></div></div><div class=loading-status>Connecting and Launching</div><div class=loading-appname>{{appPackageName}}</div><div class=loading-conn-status>{{connState.state}}</div><button class="loading-cancel-button btn btn-success" ng-click=cancel()>Cancel</button></div></div></div>'),
    a.put("app/Session/popoverTemplate.html", '<div class=appgrouplist app-grouper-popover close-popover=closePopover(id) focus-to-session=focusToSession(id)><ul class=list-unstyled ng-repeat="app in currentOpenAppGroup.sessionList"><li><a href=javascript:void(0) ng-attr-sessionid={{app.id}} ng-class="{\'rdhtml5-activewindow\': app.id == vm.activeSessionId()}"><div class=docname>{{app.getLabel()}}</div><div class=feedname></div></a></li></ul></div>'),
    a.put("app/Session/qoeDialogTemplate.html", '<!--Raw HTML template to show a modal whose content is the list of invitations--><div class="modal-header centered" aria-labelledby=QOEDialogModal aria-hidden=true><h4 class=modal-title style="text-transform: none; font-weight: normal">Azure RemoteApp <a href=# class="close close-button qoe-close" ng-click=cancel()><i class="o365 o365-fw o365-cross o365-20x"></i></a></h4></div><div class=modal-body style="padding: 24px; padding-top: 20px"><form class=form-horizontal name=shareForm method=post role=form action=""><div class="form-group feedback" style="margin-bottom: 0"><label class=control-label style="font-weight: normal">How was your RemoteApp experience?</label></div><div class="form-group feedback" style="margin-bottom: 24px; font-size: 16px"><div class=radio><label><input type=radio name=Great! value=Great! ng-model=qoeOption.selected> Great!</label></div><div class=radio><label><input type=radio name="Could be better" value="Could be better" ng-model=qoeOption.selected> Could be better</label></div><div class=radio><label><input type=radio name="Didn\'t work" value="Didn\'t work" ng-model=qoeOption.selected> Didn\'t work</label></div></div><div ng-if="(qoeOption.selected === \'Could be better\' || qoeOption.selected === \'Didn\\\'t work\')"><div class="form-group feedback" style="margin-bottom: 5px"><div class="input-group col-lg-12">Did you encounter any of these issues?</div></div><ul class=list-unstyled><li ng-repeat="qoeOption in vm.qoeOptionList" style="margin-bottom: 5px"><input type=checkbox class=pull-left checklist-model=vm.qoeOptionList.checked checklist-value=qoeOption id={{qoeOption.id}} ng-change="vm.optionChanged(qoeOption, checked)"><label for={{qoeOption.id}}></label><span class=rdhtml5-sidepanel-optionlist style="top: -3px">{{qoeOption.option}}</span></li></ul><div class="form-group feedback"><div style="padding: 0; width: 100%"><textarea rows=4 class="form-control feedback" placeholder="Tell us more (optional)" ng-model=$parent.qoeMessage></textarea></div></div></div></form></div><div class=modal-footer><div class=col-lg-12><a class=rdhtml5-bluelinks style="position: absolute; bottom: 4px; left: 5px; font-size: 14px" href=http://www.microsoft.com/en-us/privacystatement/default.aspx target=_blank>Privacy Statement</a> <button class="btn btn-primary" style="position: absolute; right: 4px;bottom: 0; width: 112px" ng-disabled="qoeOption.selected === undefined" ng-click=sendQOE()>Submit</button></div></div>'),
    a.put("app/Session/toast.html", '<!--Raw HTML template to show a modal whose content is the list of invitations--><div class=modal-body style="padding: 16px 24px 20px 20px"><i class="mdl mdl-fw mdl-CheckMark" ng-class="{\'mdl-CheckMark\': type === 1, \'mdl-Info\': type === 2}" style="font-size: 20px; position: relative; top: 4px; color: white"></i> <span style="font-size: 20px; color: white; margin-left: 12px">{{message}}</span></div>')
}
]);
